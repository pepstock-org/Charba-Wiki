(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{110:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return c})),a.d(t,"metadata",(function(){return b})),a.d(t,"toc",(function(){return s})),a.d(t,"default",(function(){return p}));var n=a(3),i=a(8),r=(a(0),a(209)),l=a(210),c={id:"CartesianTimeAxes",title:"Cartesian time",hide_title:!0,sidebar_label:"Cartesian time"},b={unversionedId:"CartesianTimeAxes",id:"version-3.3/CartesianTimeAxes",isDocsHomePage:!1,title:"Cartesian time",description:"Cartesian Time Axes",source:"@site/versioned_docs/version-3.3/CartesianTimeAxes.md",sourceDirName:".",slug:"/CartesianTimeAxes",permalink:"/Charba-Wiki/docs/3.3/CartesianTimeAxes",version:"3.3",sidebar_label:"Cartesian time",frontMatter:{id:"CartesianTimeAxes",title:"Cartesian time",hide_title:!0,sidebar_label:"Cartesian time"},sidebar:"version-3.3/docs",previous:{title:"Cartesian logarithmic",permalink:"/Charba-Wiki/docs/3.3/CartesianLogarithmicAxes"},next:{title:"Date adapters",permalink:"/Charba-Wiki/docs/3.3/DateAdapters"}},s=[{value:"Cartesian Time Axes",id:"cartesian-time-axes",children:[]},{value:"Datasets",id:"datasets",children:[]},{value:"Options",id:"options",children:[]},{value:"Time",id:"time",children:[]},{value:"Adapters",id:"adapters",children:[]},{value:"Ticks",id:"ticks",children:[{value:"Callback",id:"callback",children:[]},{value:"BuildTicks callback",id:"buildticks-callback",children:[]}]}],o={toc:s};function p(e){var t=e.components,a=Object(i.a)(e,["components"]);return Object(r.b)("wrapper",Object(n.a)({},o,a,{components:t,mdxType:"MDXLayout"}),Object(r.b)("h2",{id:"cartesian-time-axes"},"Cartesian Time Axes"),Object(r.b)("p",null,"The ",Object(r.b)("a",{parentName:"p",href:"https://www.pepstock.org/Charba/3.3/org/pepstock/charba/client/configuration/CartesianTimeAxis.html"},"time axis")," is used to display times and dates. When building its ",Object(r.b)("a",{parentName:"p",href:"https://www.pepstock.org/Charba/3.3/org/pepstock/charba/client/configuration/CartesianTimeTick.html"},"ticks"),", it will automatically calculate the most comfortable unit base on the size of the scale."),Object(r.b)("img",{src:Object(l.a)("/img/timeScale.png")}),Object(r.b)("h2",{id:"datasets"},"Datasets"),Object(r.b)("p",null,"To use time series, you must use ",Object(r.b)("a",{parentName:"p",href:"https://www.pepstock.org/Charba/3.3/org/pepstock/charba/client/data/DataPoint.html"},"DataPoint")," in order to set the date object into axis. "),Object(r.b)("p",null,"The x-axis data points may additionally be specified via the ",Object(r.b)("strong",{parentName:"p"},"setX")," method when using the time axis."),Object(r.b)("p",null,"Here is the example:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-java"},'BarDataset dataset = chart.newDataset();\ndataset.setLabel("dataset 1");\n\n...\n      \nDataPoint dp1 = new DataPoint();\ndp1.setY(number_value1);\ndp1.setX(new Date(time1));\n\nDataPoint dp2 = new DataPoint();\ndp2.setY(number_value1);\ndp2.setX(new Date(time2));\n\ndataset.setDataPoints(dp1, dp2);\n\n...\n\nchart.getData().setDatasets(dataset);\n')),Object(r.b)("h2",{id:"options"},"Options"),Object(r.b)("p",null,"The following options are provided by the time axis. You may also set options provided by the ",Object(r.b)("a",{parentName:"p",href:"CartesianAxes"},"common cartesian axis"),"."),Object(r.b)("p",null,"The time axes are providing the capability to set and get the options, by the ",Object(r.b)("strong",{parentName:"p"},"set")," and ",Object(r.b)("strong",{parentName:"p"},"get")," methods, as following:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-java"},"CartesianTimeAxis axis = new CartesianTimeAxis(chart);\naxis.setDistribution(ScaleDistribution.SERIES);\n")),Object(r.b)("p",null,"Table with options:"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",{parentName:"tr",align:null},"Name"),Object(r.b)("th",{parentName:"tr",align:null},"Type"),Object(r.b)("th",{parentName:"tr",align:null},"Default"),Object(r.b)("th",{parentName:"tr",align:null},"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"distribution"),Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("a",{parentName:"td",href:"https://www.pepstock.org/Charba/3.3/org/pepstock/charba/client/enums/ScaleDistribution.html"},"ScaleDistribution")),Object(r.b)("td",{parentName:"tr",align:null},"ScaleDistribution.LINEAR"),Object(r.b)("td",{parentName:"tr",align:null},"How data is plotted.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"bounds"),Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("a",{parentName:"td",href:"https://www.pepstock.org/Charba/3.3/org/pepstock/charba/client/enums/ScaleBounds.html"},"ScaleBounds")),Object(r.b)("td",{parentName:"tr",align:null},"ScaleBounds.DATA"),Object(r.b)("td",{parentName:"tr",align:null},"Determines the scale bounds.")))),Object(r.b)("p",null,"The ",Object(r.b)("inlineCode",{parentName:"p"},"distribution")," ",Object(r.b)("a",{parentName:"p",href:"https://www.pepstock.org/Charba/3.3/org/pepstock/charba/client/enums/ScaleDistribution.html"},"object")," controls the data distribution along the scale:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"LINEAR"),": data are spread according to their time (distances can vary)"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"SERIES"),": data are spread at the same distance from each other")),Object(r.b)("p",null,"The ",Object(r.b)("inlineCode",{parentName:"p"},"bounds")," ",Object(r.b)("a",{parentName:"p",href:"https://www.pepstock.org/Charba/3.3/org/pepstock/charba/client/enums/ScaleBounds.html"},"property")," controls the scale boundary strategy (bypassed by min/max time options)"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"DATA"),": make sure data are fully visible, labels outside are removed"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"TICKS"),": make sure ticks are fully visible, data outside are truncated  ")),Object(r.b)("h2",{id:"time"},"Time"),Object(r.b)("p",null,"The time axis provides a ",Object(r.b)("a",{parentName:"p",href:"https://www.pepstock.org/Charba/3.3/org/pepstock/charba/client/configuration/Time.html"},"Time")," object to configure how times must be managed on axis. It provides the ",Object(r.b)("strong",{parentName:"p"},"set")," and ",Object(r.b)("strong",{parentName:"p"},"get")," methods as following:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-java"},"CartesianTimeAxis axis = new CartesianTimeAxis(chart);\n\naxis.getTime().setUnit(TimeUnit.DAY);\naxis.getTime().setTooltipFormat(TimeUnit.day.getDefaultFormat());\n")),Object(r.b)("p",null,"Table with options:"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",{parentName:"tr",align:null},"Name"),Object(r.b)("th",{parentName:"tr",align:null},"Type"),Object(r.b)("th",{parentName:"tr",align:null},"Default"),Object(r.b)("th",{parentName:"tr",align:null},"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"isoWeekday"),Object(r.b)("td",{parentName:"tr",align:null},"boolean"),Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"false")),Object(r.b)("td",{parentName:"tr",align:null},"If ",Object(r.b)("inlineCode",{parentName:"td"},"true")," and the unit is set to 'week', then the first day of the week will be Monday. Otherwise, it will be Sunday.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"parser"),Object(r.b)("td",{parentName:"tr",align:null},"String"),Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"null")),Object(r.b)("td",{parentName:"tr",align:null},"interpreted as a custom format to be used to parse the date")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"round"),Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("a",{parentName:"td",href:"https://www.pepstock.org/Charba/3.3/org/pepstock/charba/client/enums/TimeUnit.html"},"TimeUnit")),Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"null")),Object(r.b)("td",{parentName:"tr",align:null},"If defined, dates will be rounded to the start of this unit.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"tooltipFormat"),Object(r.b)("td",{parentName:"tr",align:null},"String"),Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"null")),Object(r.b)("td",{parentName:"tr",align:null},"Format string to use for the tooltip.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"unit"),Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("a",{parentName:"td",href:"https://www.pepstock.org/Charba/3.3/org/pepstock/charba/client/enums/TimeUnit.html"},"TimeUnit")),Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"null")),Object(r.b)("td",{parentName:"tr",align:null},"If defined, will force the unit to be a certain type.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"stepSize"),Object(r.b)("td",{parentName:"tr",align:null},"int"),Object(r.b)("td",{parentName:"tr",align:null},"1"),Object(r.b)("td",{parentName:"tr",align:null},"The number of units between grid lines.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"minUnit"),Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("a",{parentName:"td",href:"https://www.pepstock.org/Charba/3.3/org/pepstock/charba/client/enums/TimeUnit.html"},"TimeUnit")),Object(r.b)("td",{parentName:"tr",align:null},"TimeUnit.MILLISECOND"),Object(r.b)("td",{parentName:"tr",align:null},"The minimum display format to be used for a time unit.")))),Object(r.b)("p",null,"The following time measurements are supported and are mapped into ",Object(r.b)("a",{parentName:"p",href:"https://www.pepstock.org/Charba/3.3/org/pepstock/charba/client/enums/TimeUnit.html"},"TimeUnit")," enumeration, to force a certain unit:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"millisecond"),Object(r.b)("li",{parentName:"ul"},"second"),Object(r.b)("li",{parentName:"ul"},"minute"),Object(r.b)("li",{parentName:"ul"},"hour"),Object(r.b)("li",{parentName:"ul"},"day"),Object(r.b)("li",{parentName:"ul"},"week"),Object(r.b)("li",{parentName:"ul"},"month"),Object(r.b)("li",{parentName:"ul"},"quarter"),Object(r.b)("li",{parentName:"ul"},"year")),Object(r.b)("p",null,"The ",Object(r.b)("a",{parentName:"p",href:"https://www.pepstock.org/Charba/3.3/org/pepstock/charba/client/configuration/Time.html"},"Time")," object is also providing another object to set the display formats, based on ",Object(r.b)("a",{parentName:"p",href:"https://www.pepstock.org/Charba/3.3/org/pepstock/charba/client/enums/TimeUnit.html"},"TimeUnit"),". "),Object(r.b)("p",null,"The ",Object(r.b)("a",{parentName:"p",href:"https://www.pepstock.org/Charba/3.3/org/pepstock/charba/client/configuration/DisplayFormats.html"},"DisplayFormats")," can be used as following:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-java"},'CartesianTimeAxis axis = new CartesianTimeAxis(chart);\n\naxis.getTime().setUnit(TimeUnit.DAY);\naxis.getTime().getDisplayFormats().setDisplayFormat(TimeUnit.DAY, "MMM D h:mm a");\n')),Object(r.b)("p",null,"This method can override the defaults. To see the defaults, see the ",Object(r.b)("a",{parentName:"p",href:"DateAdapters"},"date adapter")," implementation because every adapter can have own syntax and defaults."),Object(r.b)("h2",{id:"adapters"},"Adapters"),Object(r.b)("p",null,"The adapters options are used to configure the adapter for external date library if that adapter needs or supports options."),Object(r.b)("p",null,"The ",Object(r.b)("a",{parentName:"p",href:"https://www.pepstock.org/Charba/3.3/org/pepstock/charba/client/configuration/Adapters.html"},"adapters options")," configuration is nested into the scale configuration as following: "),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-java"},'CartesianTimeAxis axis = new CartesianTimeAxis(chart);\n\n// LUXON options\nLuxonOptions options = new LuxonOptions();\noptions.setLocale("us");\n\naxis.getAdapters().setDate(options);\n')),Object(r.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(r.b)("div",{parentName:"div",className:"admonition-heading"},Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",{parentName:"h5",className:"admonition-icon"},Object(r.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(r.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"PAY ATTENTION")),Object(r.b)("div",{parentName:"div",className:"admonition-content"},Object(r.b)("p",{parentName:"div"},"Only ",Object(r.b)("a",{parentName:"p",href:"DateAdapters#Luxon"},"Luxon")," date adapters can be configured with additional options."))),Object(r.b)("p",null,"For more details, have a look how to configure a ",Object(r.b)("a",{parentName:"p",href:"DateAdapters#Luxon"},"Luxon")," date adapters."),Object(r.b)("h2",{id:"ticks"},"Ticks"),Object(r.b)("p",null,"The time axis provides the following options for configuring tick marks. These options extend the ",Object(r.b)("a",{parentName:"p",href:"CartesianAxes#tick-configuration"},"common tick configuration"),"."),Object(r.b)("p",null,"Table with options:"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",{parentName:"tr",align:null},"Name"),Object(r.b)("th",{parentName:"tr",align:null},"Type"),Object(r.b)("th",{parentName:"tr",align:null},"Default"),Object(r.b)("th",{parentName:"tr",align:null},"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"max"),Object(r.b)("td",{parentName:"tr",align:null},"java.util.Date"),Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"null")),Object(r.b)("td",{parentName:"tr",align:null},"If defined, this will override the data maximum")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"min"),Object(r.b)("td",{parentName:"tr",align:null},"java.util.Date"),Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"null")),Object(r.b)("td",{parentName:"tr",align:null},"If defined, this will override the data minimum")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"source"),Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("a",{parentName:"td",href:"https://www.pepstock.org/Charba/3.3/org/pepstock/charba/client/enums/TickSource.html"},"TickSource")),Object(r.b)("td",{parentName:"tr",align:null},"TickSource.AUTO"),Object(r.b)("td",{parentName:"tr",align:null},"How ticks are generated on axis time")))),Object(r.b)("p",null,"The ",Object(r.b)("inlineCode",{parentName:"p"},"source")," ",Object(r.b)("a",{parentName:"p",href:"https://www.pepstock.org/Charba/3.3/org/pepstock/charba/client/enums/TickSource.html"},"object")," controls the ticks generation"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"AUTO"),': generates "optimal" ticks based on scale size and time options.'),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"DATA"),": generates ticks from data (including labels from data ",Object(r.b)("inlineCode",{parentName:"li"},"{t|x|y}")," objects)"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"LABELS"),": generates ticks from user given ",Object(r.b)("inlineCode",{parentName:"li"},"labels")," values of dataset ONLY")),Object(r.b)("p",null,"Here is an example:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-java"},"CartesianTimeAxis axis = new CartesianTimeAxis(chart);\n\naxis.getTicks().setSource(TickSource.DATA);\n")),Object(r.b)("p",null,"The further customization of ticks, a callback is provided."),Object(r.b)("h3",{id:"callback"},"Callback"),Object(r.b)("p",null,"It is also common to want to change the tick marks to include information about the data type. "),Object(r.b)("p",null,"To apply a custom callback, you can set a ",Object(r.b)("a",{parentName:"p",href:"https://www.pepstock.org/Charba/3.3/org/pepstock/charba/client/callbacks/TimeTickCallback.html"},"TimeTickCallback")," instance to the axis options, as following:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-java"},"axis.getTicks().setCallback(new TimeTickCallback() {\n\n   /**\n     * Changes the tick marks to include information about the data type.\n     * \n     * @param axis axis instance where this callback as been defined\n     * @param value value of tick as date\n     * @param label label of tick, passed by CHART.JS formatting the date by the selected {@link TimeUnit} and its display\n     *            format.\n     * @param index index of tick\n     * @param values list of all tick values\n     * @return the tick to apply or if the callback returns <code>null</code> the associated grid line will be hidden.\n     */\n    public String onCallback(Axis axis, Date value, String label, int index, List<TimeTickItem> values){\n        return FORMAT.format(value);\n    }\n         \n});\n")),Object(r.b)("p",null,"The callback is providing a specific list of items (",Object(r.b)("a",{parentName:"p",href:"https://www.pepstock.org/Charba/3.3/org/pepstock/charba/client/items/TimeTickItem.html"},"TimeTickItem"),") which maps CHART.JS object with the values (as date) and major booleans."),Object(r.b)("h3",{id:"buildticks-callback"},"BuildTicks callback"),Object(r.b)("p",null,"This callback can be used to change parameters in the scale during ticks building. To implement this callback, you must implement ",Object(r.b)("a",{parentName:"p",href:"https://www.pepstock.org/Charba/3.3/org/pepstock/charba/client/callbacks/TimeAxisBuildTicksCallback.html"},"this interface"),". "),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-java"},"public interface TimeAxisBuildTicksCallback {\n\n   /**\n    * Callback that runs before ticks are created.\n    * \n    * @param axis axis instance where this callback as been defined\n    * @param item axis item instance\n    */\n   void onBeforeBuildTicks(Axis axis, AxisItem item);\n\n   /**\n     * Callback that runs after ticks are created. Useful for filtering ticks.\n     * \n     * @param axis axis instance where this callback as been defined\n     * @param item axis item instance\n     * @param ticks list of created ticks\n     */\n    void onAfterBuildTicks(Axis axis, AxisItem item, List<TimeTickItem> ticks);\n\n}\n")))}p.isMDXComponent=!0},209:function(e,t,a){"use strict";a.d(t,"a",(function(){return p})),a.d(t,"b",(function(){return u}));var n=a(0),i=a.n(n);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function c(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function b(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var s=i.a.createContext({}),o=function(e){var t=i.a.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):c(c({},t),e)),a},p=function(e){var t=o(e.components);return i.a.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},d=i.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,r=e.originalType,l=e.parentName,s=b(e,["components","mdxType","originalType","parentName"]),p=o(a),d=n,u=p["".concat(l,".").concat(d)]||p[d]||m[d]||r;return a?i.a.createElement(u,c(c({ref:t},s),{},{components:a})):i.a.createElement(u,c({ref:t},s))}));function u(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var r=a.length,l=new Array(r);l[0]=d;var c={};for(var b in t)hasOwnProperty.call(t,b)&&(c[b]=t[b]);c.originalType=e,c.mdxType="string"==typeof e?e:n,l[1]=c;for(var s=2;s<r;s++)l[s]=a[s];return i.a.createElement.apply(null,l)}return i.a.createElement.apply(null,a)}d.displayName="MDXCreateElement"},210:function(e,t,a){"use strict";a.d(t,"b",(function(){return r})),a.d(t,"a",(function(){return l}));var n=a(16),i=a(211);function r(){var e=Object(n.default)().siteConfig,t=(e=void 0===e?{}:e).baseUrl,a=void 0===t?"/":t,r=e.url;return{withBaseUrl:function(e,t){return function(e,t,a,n){var r=void 0===n?{}:n,l=r.forcePrependBaseUrl,c=void 0!==l&&l,b=r.absolute,s=void 0!==b&&b;if(!a)return a;if(a.startsWith("#"))return a;if(Object(i.b)(a))return a;if(c)return t+a;var o=a.startsWith(t)?a:t+a.replace(/^\//,"");return s?e+o:o}(r,a,e,t)}}}function l(e,t){return void 0===t&&(t={}),(0,r().withBaseUrl)(e,t)}},211:function(e,t,a){"use strict";function n(e){return!0===/^(\w*:|\/\/)/.test(e)}function i(e){return void 0!==e&&!n(e)}a.d(t,"b",(function(){return n})),a.d(t,"a",(function(){return i}))}}]);
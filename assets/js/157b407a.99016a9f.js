(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{213:function(e,t,a){"use strict";a.d(t,"a",(function(){return d})),a.d(t,"b",(function(){return g}));var n=a(0),r=a.n(n);function b(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){b(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},b=Object.keys(e);for(n=0;n<b.length;n++)a=b[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var b=Object.getOwnPropertySymbols(e);for(n=0;n<b.length;n++)a=b[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var c=r.a.createContext({}),p=function(e){var t=r.a.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},d=function(e){var t=p(e.components);return r.a.createElement(c.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},m=r.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,b=e.originalType,l=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),d=p(a),m=n,g=d["".concat(l,".").concat(m)]||d[m]||s[m]||b;return a?r.a.createElement(g,i(i({ref:t},c),{},{components:a})):r.a.createElement(g,i({ref:t},c))}));function g(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var b=a.length,l=new Array(b);l[0]=m;var i={};for(var o in t)hasOwnProperty.call(t,o)&&(i[o]=t[o]);i.originalType=e,i.mdxType="string"==typeof e?e:n,l[1]=i;for(var c=2;c<b;c++)l[c]=a[c];return r.a.createElement.apply(null,l)}return r.a.createElement.apply(null,a)}m.displayName="MDXCreateElement"},78:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return l})),a.d(t,"metadata",(function(){return i})),a.d(t,"toc",(function(){return o})),a.d(t,"default",(function(){return p}));var n=a(3),r=a(8),b=(a(0),a(213)),l={id:"DefaultsScales",title:"Defaults scales options",hide_title:!0,sidebar_label:"Scales"},i={unversionedId:"defaults/DefaultsScales",id:"defaults/DefaultsScales",isDocsHomePage:!1,title:"Defaults scales options",description:"Commons scales options",source:"@site/docs/defaults/DefaultsScales.md",sourceDirName:"defaults",slug:"/defaults/DefaultsScales",permalink:"/Charba-Wiki/docs/defaults/DefaultsScales",version:"current",sidebar_label:"Scales",frontMatter:{id:"DefaultsScales",title:"Defaults scales options",hide_title:!0,sidebar_label:"Scales"},sidebar:"docs",previous:{title:"Defaults charts options",permalink:"/Charba-Wiki/docs/defaults/DefaultsCharts"},next:{title:"Common configuration",permalink:"/Charba-Wiki/docs/configuration/Commons"}},o=[{value:"Commons scales options",id:"commons-scales-options",children:[]},{value:"Grid",id:"grid",children:[]},{value:"Ticks",id:"ticks",children:[{value:"Major Tick",id:"major-tick",children:[]}]},{value:"Title",id:"title",children:[]},{value:"AngleLines",id:"anglelines",children:[]},{value:"PointLabels",id:"pointlabels",children:[]},{value:"Time",id:"time",children:[{value:"Display formats",id:"display-formats",children:[]}]},{value:"Adapters",id:"adapters",children:[]}],c={toc:o};function p(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(b.b)("wrapper",Object(n.a)({},c,a,{components:t,mdxType:"MDXLayout"}),Object(b.b)("h2",{id:"commons-scales-options"},"Commons scales options"),Object(b.b)("p",null,"To change the global scale, ",Object(b.b)("strong",{parentName:"p"},"Charba")," is providing the method ",Object(b.b)("inlineCode",{parentName:"p"},"getScale")," in the ",Object(b.b)("a",{parentName:"p",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/Defaults.html"},"defaults"),"."),Object(b.b)("p",null,"With this method you can get all global configuration of ",Object(b.b)("a",{parentName:"p",href:"http://www.chartjs.org/"},"Chart.JS")," for ",Object(b.b)("a",{parentName:"p",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/GlobalScale.html"},"scale")," (common one, not related to chart type) and you have got all ",Object(b.b)("inlineCode",{parentName:"p"},"set")," and ",Object(b.b)("inlineCode",{parentName:"p"},"get")," methods to change or retrieve the global configuration items."),Object(b.b)("pre",null,Object(b.b)("code",{parentName:"pre",className:"language-java"},"// --------------------------------------\n// GLOBAL, for all scales (whatever type)\n// --------------------------------------\nDefaults.get().getScale().setStacked(true);\n\nboolean stacked = Defaults.get().getScale().isStacked();\n")),Object(b.b)("p",null,"The following are the attributes that you can set:"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",{parentName:"tr",align:"left"},"Name"),Object(b.b)("th",{parentName:"tr",align:"left"},"Type"),Object(b.b)("th",{parentName:"tr",align:"left"},"Default"),Object(b.b)("th",{parentName:"tr",align:"left"},"Description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"alignToPixels"),Object(b.b)("td",{parentName:"tr",align:"left"},"boolean"),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"false")),Object(b.b)("td",{parentName:"tr",align:"left"},"Align pixel values to device pixels.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"animate"),Object(b.b)("td",{parentName:"tr",align:"left"},"boolean"),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"true")),Object(b.b)("td",{parentName:"tr",align:"left"},"If ",Object(b.b)("inlineCode",{parentName:"td"},"true"),", animate scaling the chart from the center.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"backgroundColor"),Object(b.b)("td",{parentName:"tr",align:"left"},"String - ",Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/colors/IsColor.html"},"IsColor")),Object(b.b)("td",{parentName:"tr",align:"left"},"rgba(255,255,255,0) - ",Object(b.b)("span",{style:{backgroundColor:"rgba(255,255,255,0)",border:"1px solid"}},"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0","\xa0","\xa0")),Object(b.b)("td",{parentName:"tr",align:"left"},"The background color of scale area.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"beginAtZero"),Object(b.b)("td",{parentName:"tr",align:"left"},"boolean"),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"false")),Object(b.b)("td",{parentName:"tr",align:"left"},"If ",Object(b.b)("inlineCode",{parentName:"td"},"true"),", scale will include 0 if it is not already included.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"bounds"),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/enums/Bounds.html"},"Bounds")),Object(b.b)("td",{parentName:"tr",align:"left"},"Bounds.TICKS"),Object(b.b)("td",{parentName:"tr",align:"left"},"Determines the scale bounds on time axis.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"display"),Object(b.b)("td",{parentName:"tr",align:"left"},"boolean - ",Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/enums/Display.html"},"Display")),Object(b.b)("td",{parentName:"tr",align:"left"},"Display.TRUE"),Object(b.b)("td",{parentName:"tr",align:"left"},"If ",Object(b.b)("inlineCode",{parentName:"td"},"Display.TRUE"),", the axis is shown.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"grace"),Object(b.b)("td",{parentName:"tr",align:"left"},"int"),Object(b.b)("td",{parentName:"tr",align:"left"},"0"),Object(b.b)("td",{parentName:"tr",align:"left"},"Amount of pixels for added room in the scale range above and below data.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"graceAsPercentage"),Object(b.b)("td",{parentName:"tr",align:"left"},"String"),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},'"0%"')),Object(b.b)("td",{parentName:"tr",align:"left"},"Percentage (string ending with ",Object(b.b)("inlineCode",{parentName:"td"},"%"),") for added room in the scale range above and below data.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"labels"),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/data/Labels.html"},"Labels")),Object(b.b)("td",{parentName:"tr",align:"left"},"empty ",Object(b.b)("inlineCode",{parentName:"td"},"Labels")),Object(b.b)("td",{parentName:"tr",align:"left"},"The labels to display.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"max"),Object(b.b)("td",{parentName:"tr",align:"left"},"double - String - ",Object(b.b)("a",{parentName:"td",href:"https://docs.oracle.com/javase/8/docs/api/java/util/Date.html"},"Date")),Object(b.b)("td",{parentName:"tr",align:"left"},"See description"),Object(b.b)("td",{parentName:"tr",align:"left"},"User defined maximum number for the scale, overrides maximum value from data.",Object(b.b)("br",null),"As value, you can set a:",Object(b.b)("br",null),"  - ",Object(b.b)("inlineCode",{parentName:"td"},"double")," for linear, logarithmic and radial scales, with ",Object(b.b)("inlineCode",{parentName:"td"},"Double.MAX_VALUE")," as default;",Object(b.b)("br",null),"  - ",Object(b.b)("inlineCode",{parentName:"td"},"Date")," for time and time series scales, with ",Object(b.b)("inlineCode",{parentName:"td"},"null")," as default;",Object(b.b)("br",null),"  - ",Object(b.b)("inlineCode",{parentName:"td"},"String")," for category scales, with ",Object(b.b)("inlineCode",{parentName:"td"},"null")," as default.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"min"),Object(b.b)("td",{parentName:"tr",align:"left"},"double - String - ",Object(b.b)("a",{parentName:"td",href:"https://docs.oracle.com/javase/8/docs/api/java/util/Date.html"},"Date")),Object(b.b)("td",{parentName:"tr",align:"left"},"See description"),Object(b.b)("td",{parentName:"tr",align:"left"},"User defined minimum number for the scale, overrides minimum value from data.",Object(b.b)("br",null),"As value, you can set a:",Object(b.b)("br",null),"  - ",Object(b.b)("inlineCode",{parentName:"td"},"double")," for linear, logarithmic and radial scales, with ",Object(b.b)("inlineCode",{parentName:"td"},"Double.MIN_VALUE")," as default;",Object(b.b)("br",null),"  - ",Object(b.b)("inlineCode",{parentName:"td"},"Date")," for time and time series scales, with ",Object(b.b)("inlineCode",{parentName:"td"},"null")," as default;",Object(b.b)("br",null),"  - ",Object(b.b)("inlineCode",{parentName:"td"},"String")," for category scales, with ",Object(b.b)("inlineCode",{parentName:"td"},"null")," as default.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"offset"),Object(b.b)("td",{parentName:"tr",align:"left"},"boolean"),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"false")),Object(b.b)("td",{parentName:"tr",align:"left"},"If ",Object(b.b)("inlineCode",{parentName:"td"},"true"),", extra space is added to the both edges and the axis is scaled to fit in the chart area.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"position"),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/enums/Position.html"},"Position")),Object(b.b)("td",{parentName:"tr",align:"left"},"Position.TOP"),Object(b.b)("td",{parentName:"tr",align:"left"},"Position of the axis.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"reverse"),Object(b.b)("td",{parentName:"tr",align:"left"},"boolean"),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"false")),Object(b.b)("td",{parentName:"tr",align:"left"},"Reverses order of tick labels.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"singleStacked"),Object(b.b)("td",{parentName:"tr",align:"left"},"boolean"),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"false")),Object(b.b)("td",{parentName:"tr",align:"left"},"If you might want to stack positive and negative values together.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"stacked"),Object(b.b)("td",{parentName:"tr",align:"left"},"boolean"),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"false")),Object(b.b)("td",{parentName:"tr",align:"left"},"If the axis are stacked.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"startAngle"),Object(b.b)("td",{parentName:"tr",align:"left"},"double"),Object(b.b)("td",{parentName:"tr",align:"left"},"0"),Object(b.b)("td",{parentName:"tr",align:"left"},"Starting angle to draw arcs for the first item in a data set. In degrees, 0 is at top.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"suggestedMax"),Object(b.b)("td",{parentName:"tr",align:"left"},"double - String - ",Object(b.b)("a",{parentName:"td",href:"https://docs.oracle.com/javase/8/docs/api/java/util/Date.html"},"Date")),Object(b.b)("td",{parentName:"tr",align:"left"},"See description"),Object(b.b)("td",{parentName:"tr",align:"left"},"Adjustment used when calculating the maximum data value.",Object(b.b)("br",null),"As value, you can set a:",Object(b.b)("br",null),"  - ",Object(b.b)("inlineCode",{parentName:"td"},"double")," for linear, logarithmic and radial scales, with ",Object(b.b)("inlineCode",{parentName:"td"},"Double.MAX_VALUE")," as default;",Object(b.b)("br",null),"  - ",Object(b.b)("inlineCode",{parentName:"td"},"Date")," for time and time series scales, with ",Object(b.b)("inlineCode",{parentName:"td"},"null")," as default;",Object(b.b)("br",null),"  - ",Object(b.b)("inlineCode",{parentName:"td"},"String")," for category scales, with ",Object(b.b)("inlineCode",{parentName:"td"},"null")," as default.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"suggestedMin"),Object(b.b)("td",{parentName:"tr",align:"left"},"double - String - ",Object(b.b)("a",{parentName:"td",href:"https://docs.oracle.com/javase/8/docs/api/java/util/Date.html"},"Date")),Object(b.b)("td",{parentName:"tr",align:"left"},"See description"),Object(b.b)("td",{parentName:"tr",align:"left"},"Adjustment used when calculating the minimum data value.",Object(b.b)("br",null),"As value, you can set a:",Object(b.b)("br",null),"  - ",Object(b.b)("inlineCode",{parentName:"td"},"double")," for linear, logarithmic and radial scales, with ",Object(b.b)("inlineCode",{parentName:"td"},"Double.MIN_VALUE")," as default;",Object(b.b)("br",null),"  - ",Object(b.b)("inlineCode",{parentName:"td"},"Date")," for time and time series scales, with ",Object(b.b)("inlineCode",{parentName:"td"},"null")," as default;",Object(b.b)("br",null),"  - ",Object(b.b)("inlineCode",{parentName:"td"},"String")," for category scales, with ",Object(b.b)("inlineCode",{parentName:"td"},"null")," as default.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"weight"),Object(b.b)("td",{parentName:"tr",align:"left"},"int"),Object(b.b)("td",{parentName:"tr",align:"left"},"0"),Object(b.b)("td",{parentName:"tr",align:"left"},"The weight used to sort the axis. Higher weights are further away from the chart area.")))),Object(b.b)("p",null,"The ",Object(b.b)("a",{parentName:"p",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/enums/Bounds.html"},"Bounds")," controls the scale boundary strategy (bypassed by min/max time options):"),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"Bounds.DATA"),": make sure data are fully visible, labels outside are removed."),Object(b.b)("li",{parentName:"ul"},Object(b.b)("inlineCode",{parentName:"li"},"Bounds.TICKS"),": make sure ticks are fully visible, data outside are truncated. ")),Object(b.b)("h2",{id:"grid"},"Grid"),Object(b.b)("p",null,"The grid configuration defines options for the lines that are run perpendicular to the axis."),Object(b.b)("p",null,"The ",Object(b.b)("a",{parentName:"p",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/options/Grid.html"},"grid")," configuration is nested in the scale configuration as following:"),Object(b.b)("pre",null,Object(b.b)("code",{parentName:"pre",className:"language-java"},"// --------------------------------------\n// GLOBAL, for all scales (whatever type)\n// --------------------------------------\nDefaults.get().getScale().getGrid().setCircular(true);\n\nboolean circular = Defaults.get().getScale().getGrid().isCircular();\n")),Object(b.b)("p",null,"The following are the attributes that you can set:"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",{parentName:"tr",align:"left"},"Name"),Object(b.b)("th",{parentName:"tr",align:"left"},"Type"),Object(b.b)("th",{parentName:"tr",align:"left"},"Default"),Object(b.b)("th",{parentName:"tr",align:"left"},"Description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"borderColor"),Object(b.b)("td",{parentName:"tr",align:"left"},"String - ",Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/colors/IsColor.html"},"IsColor")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"Defaults.get().getGlobal()"),Object(b.b)("br",null),Object(b.b)("inlineCode",{parentName:"td"},".getBorderColorAsString()")),Object(b.b)("td",{parentName:"tr",align:"left"},"If set, used as the color of the border line.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"borderDash"),Object(b.b)("td",{parentName:"tr",align:"left"},"int[]"),Object(b.b)("td",{parentName:"tr",align:"left"},"[]"),Object(b.b)("td",{parentName:"tr",align:"left"},"Length and spacing of dashes on grid lines. See ",Object(b.b)("a",{parentName:"td",href:"https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash"},"MDN"),".")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"borderDashOffset"),Object(b.b)("td",{parentName:"tr",align:"left"},"double"),Object(b.b)("td",{parentName:"tr",align:"left"},"0"),Object(b.b)("td",{parentName:"tr",align:"left"},"Offset for line dashes. See ",Object(b.b)("a",{parentName:"td",href:"https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/lineDashOffset"},"MDN"),".")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"borderWidth"),Object(b.b)("td",{parentName:"tr",align:"left"},"int"),Object(b.b)("td",{parentName:"tr",align:"left"},"1"),Object(b.b)("td",{parentName:"tr",align:"left"},"If set, used as the width of the border line.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"circular"),Object(b.b)("td",{parentName:"tr",align:"left"},"boolean"),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"false")),Object(b.b)("td",{parentName:"tr",align:"left"},"If ",Object(b.b)("inlineCode",{parentName:"td"},"true"),", grid lines are circular (on radar chart only).")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"color"),Object(b.b)("td",{parentName:"tr",align:"left"},"String - String[] - ",Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/colors/IsColor.html"},"IsColor")," - ",Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/colors/IsColor.html"},"IsColor"),"[]"),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"Defaults.get().getGlobal()"),Object(b.b)("br",null),Object(b.b)("inlineCode",{parentName:"td"},".getBorderColorAsString()")),Object(b.b)("td",{parentName:"tr",align:"left"},"The color of the grid lines. If specified as an array, the first color applies to the first grid line, the second to the second grid line and so on.",Object(b.b)("br",null),"See ",Object(b.b)("a",{parentName:"td",href:"DefaultsCharts#commons-charts-options"},"default colors"),".")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"display"),Object(b.b)("td",{parentName:"tr",align:"left"},"boolean"),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"true")),Object(b.b)("td",{parentName:"tr",align:"left"},"If ",Object(b.b)("inlineCode",{parentName:"td"},"false"),", do not display grid lines for this axis.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"drawBorder"),Object(b.b)("td",{parentName:"tr",align:"left"},"boolean"),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"true")),Object(b.b)("td",{parentName:"tr",align:"left"},"If ",Object(b.b)("inlineCode",{parentName:"td"},"true"),", draw border at the edge between the axis and the chart area.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"drawOnChartArea"),Object(b.b)("td",{parentName:"tr",align:"left"},"boolean"),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"true")),Object(b.b)("td",{parentName:"tr",align:"left"},"If ",Object(b.b)("inlineCode",{parentName:"td"},"true"),", draw lines on the chart area inside the axis lines. This is useful when there are multiple axes and you need to control which grid lines are drawn.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"drawTicks"),Object(b.b)("td",{parentName:"tr",align:"left"},"boolean"),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"true")),Object(b.b)("td",{parentName:"tr",align:"left"},"If ",Object(b.b)("inlineCode",{parentName:"td"},"true"),", draw lines beside the ticks in the axis area beside the chart.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"lineWidth"),Object(b.b)("td",{parentName:"tr",align:"left"},"int - int[]"),Object(b.b)("td",{parentName:"tr",align:"left"},"1"),Object(b.b)("td",{parentName:"tr",align:"left"},"Stroke width of grid lines.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"offset"),Object(b.b)("td",{parentName:"tr",align:"left"},"boolean"),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"false")),Object(b.b)("td",{parentName:"tr",align:"left"},"If ",Object(b.b)("inlineCode",{parentName:"td"},"true"),", grid lines will be shifted to be between labels. This is set to ",Object(b.b)("inlineCode",{parentName:"td"},"true")," in the bar chart by default.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"tickBorderDash"),Object(b.b)("td",{parentName:"tr",align:"left"},"int[]"),Object(b.b)("td",{parentName:"tr",align:"left"},"See description"),Object(b.b)("td",{parentName:"tr",align:"left"},"Length and spacing of the tick mark line. If not set, defaults to the grid line ",Object(b.b)("inlineCode",{parentName:"td"},"borderDash")," value.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"tickBorderDashOffset"),Object(b.b)("td",{parentName:"tr",align:"left"},"double - double[]"),Object(b.b)("td",{parentName:"tr",align:"left"},"See description"),Object(b.b)("td",{parentName:"tr",align:"left"},"Offset for the line dash of the tick mark. If unset, defaults to the grid line ",Object(b.b)("inlineCode",{parentName:"td"},"borderDashOffset")," value")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"tickColor"),Object(b.b)("td",{parentName:"tr",align:"left"},"String - String[] - ",Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/colors/IsColor.html"},"IsColor")," - ",Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/colors/IsColor.html"},"IsColor"),"[]"),Object(b.b)("td",{parentName:"tr",align:"left"},"See description"),Object(b.b)("td",{parentName:"tr",align:"left"},"Color of the tick line. If unset, defaults to the grid line ",Object(b.b)("inlineCode",{parentName:"td"},"color"),".")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"tickLength"),Object(b.b)("td",{parentName:"tr",align:"left"},"int"),Object(b.b)("td",{parentName:"tr",align:"left"},"10"),Object(b.b)("td",{parentName:"tr",align:"left"},"Length in pixels that the grid lines will draw in the axis area.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"tickWidth"),Object(b.b)("td",{parentName:"tr",align:"left"},"int - int[]"),Object(b.b)("td",{parentName:"tr",align:"left"},"See description"),Object(b.b)("td",{parentName:"tr",align:"left"},"Width of the tick mark in pixels. If unset, defaults to the grid line ",Object(b.b)("inlineCode",{parentName:"td"},"lineWidth"),".")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"z"),Object(b.b)("td",{parentName:"tr",align:"left"},"int"),Object(b.b)("td",{parentName:"tr",align:"left"},"0"),Object(b.b)("td",{parentName:"tr",align:"left"},"z-index of gridline layer. Values less than or equals to 0 are drawn under datasets, greater than 0 on top.")))),Object(b.b)("h2",{id:"ticks"},"Ticks"),Object(b.b)("p",null,"The tick configuration defines options for the tick marks that are generated by the axis."),Object(b.b)("p",null,"The ",Object(b.b)("a",{parentName:"p",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/options/Ticks.html"},"ticks")," configuration is nested in the scale configuration as following: "),Object(b.b)("pre",null,Object(b.b)("code",{parentName:"pre",className:"language-java"},"// --------------------------------------\n// GLOBAL, for all scales (whatever type)\n// --------------------------------------\nDefaults.get().getScale().getTicks().setAutoSkip(false);\n\nboolean autoSkip = Defaults.get().getScale().getTicks().isAutoSkip();\n")),Object(b.b)("p",null,"The following are the attributes that you can set:"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",{parentName:"tr",align:"left"},"Name"),Object(b.b)("th",{parentName:"tr",align:"left"},"Type"),Object(b.b)("th",{parentName:"tr",align:"left"},"Default"),Object(b.b)("th",{parentName:"tr",align:"left"},"Description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"align"),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/enums/ElementAlign.html"},"ElementAlign")),Object(b.b)("td",{parentName:"tr",align:"left"},"ElementAlign.CENTER"),Object(b.b)("td",{parentName:"tr",align:"left"},"The tick alignment along the axis.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"autoSkip"),Object(b.b)("td",{parentName:"tr",align:"left"},"boolean"),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"true")),Object(b.b)("td",{parentName:"tr",align:"left"},"If ",Object(b.b)("inlineCode",{parentName:"td"},"true"),", automatically calculates how many labels that can be shown and hides labels accordingly. Labels will be rotated up to ",Object(b.b)("inlineCode",{parentName:"td"},"maxRotation")," before skipping any. Turn ",Object(b.b)("inlineCode",{parentName:"td"},"autoSkip")," off to show all labels no matter what.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"autoSkipPadding"),Object(b.b)("td",{parentName:"tr",align:"left"},"int"),Object(b.b)("td",{parentName:"tr",align:"left"},"3"),Object(b.b)("td",{parentName:"tr",align:"left"},"The padding between the ticks on the horizontal axis when autoSkip is enabled.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"backdropColor"),Object(b.b)("td",{parentName:"tr",align:"left"},"String - ",Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/colors/IsColor.html"},"IsColor")),Object(b.b)("td",{parentName:"tr",align:"left"},"rgba(255,255,255,0.75) - ",Object(b.b)("span",{style:{backgroundColor:"rgba(255,255,255,0.75)",border:"1px solid"}},"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0","\xa0","\xa0")),Object(b.b)("td",{parentName:"tr",align:"left"},"Color of label backdrops.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"backdropPadding"),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/options/Padding.html"},"Padding")),Object(b.b)("td",{parentName:"tr",align:"left"},"2 to all dimensions"),Object(b.b)("td",{parentName:"tr",align:"left"},"The padding of label backdrop.",Object(b.b)("br",null),"See ",Object(b.b)("a",{parentName:"td",href:"../configuration/Commons#padding"},"padding documentation")," for more details.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"color"),Object(b.b)("td",{parentName:"tr",align:"left"},"String - ",Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/colors/IsColor.html"},"IsColor")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"Defaults.get().getGlobal()"),Object(b.b)("br",null),Object(b.b)("inlineCode",{parentName:"td"},".getColorAsString()")),Object(b.b)("td",{parentName:"tr",align:"left"},"Color of ticks.",Object(b.b)("br",null),"See ",Object(b.b)("a",{parentName:"td",href:"DefaultsCharts#commons-charts-options"},"default colors"),".")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"count"),Object(b.b)("td",{parentName:"tr",align:"left"},"int"),Object(b.b)("td",{parentName:"tr",align:"left"},"UnefinedValues.INTEGER"),Object(b.b)("td",{parentName:"tr",align:"left"},"The number of ticks to generate. If specified, this overrides the automatic generation.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"crossAlign"),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/enums/CrossAlign.html"},"CrossAlign")),Object(b.b)("td",{parentName:"tr",align:"left"},"CrossAlign.NEAR"),Object(b.b)("td",{parentName:"tr",align:"left"},"The tick alignment perpendicular to the axis.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"display"),Object(b.b)("td",{parentName:"tr",align:"left"},"boolean"),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"true")),Object(b.b)("td",{parentName:"tr",align:"left"},"If ",Object(b.b)("inlineCode",{parentName:"td"},"true"),", the tick marks are shown.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"font"),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/options/Font.html"},"Font")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"Defaults.get().getGlobal()"),Object(b.b)("br",null),Object(b.b)("inlineCode",{parentName:"td"},".getFont()")),Object(b.b)("td",{parentName:"tr",align:"left"},"Font of ticks.",Object(b.b)("br",null),"See ",Object(b.b)("a",{parentName:"td",href:"DefaultsCharts#font"},"Font"),".")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"labelOffset"),Object(b.b)("td",{parentName:"tr",align:"left"},"int"),Object(b.b)("td",{parentName:"tr",align:"left"},"0"),Object(b.b)("td",{parentName:"tr",align:"left"},"Distance in pixels to offset the label from the centre point of the tick (in the x-direction for the x-axis, and the y-direction for the y-axis).",Object(b.b)("br",null),Object(b.b)("br",null),"Note: ",Object(b.b)("em",{parentName:"td"},"This can cause labels at the edges to be cropped by the edge of the canvas"),".")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"maxRotation"),Object(b.b)("td",{parentName:"tr",align:"left"},"int"),Object(b.b)("td",{parentName:"tr",align:"left"},"50"),Object(b.b)("td",{parentName:"tr",align:"left"},"The maximum rotation for tick labels when rotating to condense labels.",Object(b.b)("br",null),Object(b.b)("br",null),"Note: ",Object(b.b)("em",{parentName:"td"},"Rotation doesn't occur until necessary and only applicable to horizontal scales."))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"maxTicksLimit"),Object(b.b)("td",{parentName:"tr",align:"left"},"int"),Object(b.b)("td",{parentName:"tr",align:"left"},"11"),Object(b.b)("td",{parentName:"tr",align:"left"},"Maximum number of ticks and gridlines to show.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"minRotation"),Object(b.b)("td",{parentName:"tr",align:"left"},"int"),Object(b.b)("td",{parentName:"tr",align:"left"},"0"),Object(b.b)("td",{parentName:"tr",align:"left"},"The minimum rotation for tick labels.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"mirror"),Object(b.b)("td",{parentName:"tr",align:"left"},"boolean"),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"false")),Object(b.b)("td",{parentName:"tr",align:"left"},"The flips tick labels around axis, displaying the labels inside the chart instead of outside.",Object(b.b)("br",null),Object(b.b)("br",null),"Note: ",Object(b.b)("em",{parentName:"td"},"Only applicable to vertical scales."))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"numberFormat"),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/intl/NumberFormatOptions.html"},"NumberFormatOptions")),Object(b.b)("td",{parentName:"tr",align:"left"}),Object(b.b)("td",{parentName:"tr",align:"left"},"The number format options used by the default label formatter.",Object(b.b)("br",null),"See ",Object(b.b)("a",{parentName:"td",href:"../intl/NumberFormat"},"INTL number format")," documentation.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"padding"),Object(b.b)("td",{parentName:"tr",align:"left"},"int"),Object(b.b)("td",{parentName:"tr",align:"left"},"0"),Object(b.b)("td",{parentName:"tr",align:"left"},"The padding between the tick label and the axis.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"precision"),Object(b.b)("td",{parentName:"tr",align:"left"},"int"),Object(b.b)("td",{parentName:"tr",align:"left"},"0"),Object(b.b)("td",{parentName:"tr",align:"left"},"If defined and ",Object(b.b)("inlineCode",{parentName:"td"},"stepSize")," is not specified, the step size will be rounded to this many decimal places.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"sampleSize"),Object(b.b)("td",{parentName:"tr",align:"left"},"int"),Object(b.b)("td",{parentName:"tr",align:"left"},"Undefined.INTEGER"),Object(b.b)("td",{parentName:"tr",align:"left"},"The number of ticks to examine when deciding how many labels will fit. Setting a smaller value will be faster, but may be less accurate when there is large variability in label length.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"showLabelBackdrop"),Object(b.b)("td",{parentName:"tr",align:"left"},"boolean"),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"true")),Object(b.b)("td",{parentName:"tr",align:"left"},"If ",Object(b.b)("inlineCode",{parentName:"td"},"true"),", draw a background behind the tick labels")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"source"),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/enums/TickSource.html"},"TickSource")),Object(b.b)("td",{parentName:"tr",align:"left"},"TickSource.AUTO"),Object(b.b)("td",{parentName:"tr",align:"left"},"How ticks are generated on axis time.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"stepSize"),Object(b.b)("td",{parentName:"tr",align:"left"},"double"),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"Double.MIN_VALUE")),Object(b.b)("td",{parentName:"tr",align:"left"},"User defined fixed step size for the scale.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"textStrokeColor"),Object(b.b)("td",{parentName:"tr",align:"left"},"String - ",Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/colors/IsColor.html"},"IsColor")),Object(b.b)("td",{parentName:"tr",align:"left"},"HtmlColor.TRANSPARENT"),Object(b.b)("td",{parentName:"tr",align:"left"},"The color of the stroke around the text.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"textStrokeWidth"),Object(b.b)("td",{parentName:"tr",align:"left"},"int"),Object(b.b)("td",{parentName:"tr",align:"left"},"0"),Object(b.b)("td",{parentName:"tr",align:"left"},"Stroke width around the text.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"z"),Object(b.b)("td",{parentName:"tr",align:"left"},"int"),Object(b.b)("td",{parentName:"tr",align:"left"},"0"),Object(b.b)("td",{parentName:"tr",align:"left"},"z-index of tick layer. Useful when ticks are drawn on chart area. Values less than or equals to 0 are drawn under data sets, greater than 0 on top.")))),Object(b.b)("h3",{id:"major-tick"},"Major Tick"),Object(b.b)("p",null,"The major tick configuration enables for the major tick marks that are generated by the axis. A major tick will affect auto-skipping and major will be defined on ticks in the scriptable options context, by ",Object(b.b)("a",{parentName:"p",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/items/ScaleTickItem.html"},"ScaleTickItem")," class and ",Object(b.b)("a",{parentName:"p",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/items/ScaleTickItem.html#isMajor--"},"isMajor")," method."),Object(b.b)("p",null,"The major ticks configuration is nested in the ticks configuration as following: "),Object(b.b)("pre",null,Object(b.b)("code",{parentName:"pre",className:"language-java"},"// --------------------------------------\n// GLOBAL, for all scales (whatever type)\n// --------------------------------------\nDefaults.get().getScale().getTicks().getMajor().setEnabled(true);\n\nboolean enabled = Defaults.get().getScale().getTicks().getMajor().isEnabled();\n")),Object(b.b)("p",null,"The following are the attributes that you can set:"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",{parentName:"tr",align:"left"},"Name"),Object(b.b)("th",{parentName:"tr",align:"left"},"Type"),Object(b.b)("th",{parentName:"tr",align:"left"},"Default"),Object(b.b)("th",{parentName:"tr",align:"left"},"Description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"enabled"),Object(b.b)("td",{parentName:"tr",align:"left"},"boolean"),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"false")),Object(b.b)("td",{parentName:"tr",align:"left"},"If ",Object(b.b)("inlineCode",{parentName:"td"},"true"),", major ticks marks are generated.")))),Object(b.b)("h2",{id:"title"},"Title"),Object(b.b)("p",null,"The scale title configuration defines options for the title of the scale. Note that this only applies to cartesian axes."),Object(b.b)("p",null,"The ",Object(b.b)("a",{parentName:"p",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/options/ScaleTitle.html"},"scale title")," configuration is nested in the scale configuration as following: "),Object(b.b)("pre",null,Object(b.b)("code",{parentName:"pre",className:"language-java"},"// --------------------------------------\n// GLOBAL, for all scales (whatever type)\n// --------------------------------------\nDefaults.get().getScale().getTitle().setColor(HtmlColor.RED);\n\nIsColor color = Defaults.get().getScale().getTitle().getColor();\n")),Object(b.b)("p",null,"The following are the attributes that you can set:"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",{parentName:"tr",align:"left"},"Name"),Object(b.b)("th",{parentName:"tr",align:"left"},"Type"),Object(b.b)("th",{parentName:"tr",align:"left"},"Default"),Object(b.b)("th",{parentName:"tr",align:"left"},"Description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"align"),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/enums/ScaleTitleAlign.html"},"ScaleTitleAlign")),Object(b.b)("td",{parentName:"tr",align:"left"},"ScaleLabelAlign.CENTER"),Object(b.b)("td",{parentName:"tr",align:"left"},"Alignment of the scale label.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"color"),Object(b.b)("td",{parentName:"tr",align:"left"},"String - ",Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/colors/IsColor.html"},"IsColor")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"Defaults.get().getGlobal()"),Object(b.b)("br",null),Object(b.b)("inlineCode",{parentName:"td"},".getColorAsString()")),Object(b.b)("td",{parentName:"tr",align:"left"},"Color of scale label.",Object(b.b)("br",null),"See ",Object(b.b)("a",{parentName:"td",href:"DefaultsCharts#commons-charts-options"},"default colors"),".")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"display"),Object(b.b)("td",{parentName:"tr",align:"left"},"boolean"),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"false")),Object(b.b)("td",{parentName:"tr",align:"left"},"If ",Object(b.b)("inlineCode",{parentName:"td"},"true"),", the scale label is shown.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"font"),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/options/Font.html"},"Font")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"Defaults.get().getGlobal()"),Object(b.b)("br",null),Object(b.b)("inlineCode",{parentName:"td"},".getFont()")),Object(b.b)("td",{parentName:"tr",align:"left"},"Font of scale label.",Object(b.b)("br",null),"See ",Object(b.b)("a",{parentName:"td",href:"DefaultsCharts#font"},"Font"),".")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"padding"),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/options/Padding.html"},"Padding")),Object(b.b)("td",{parentName:"tr",align:"left"},"4 to all dimensions"),Object(b.b)("td",{parentName:"tr",align:"left"},"The padding of title. Only ",Object(b.b)("inlineCode",{parentName:"td"},"top")," and ",Object(b.b)("inlineCode",{parentName:"td"},"bottom")," are implemented.",Object(b.b)("br",null),"See ",Object(b.b)("a",{parentName:"td",href:"../configuration/Commons#padding"},"padding documentation")," for more details.")))),Object(b.b)("h2",{id:"anglelines"},"AngleLines"),Object(b.b)("p",null,"The angle lines options are used to configure angled lines that are radiated from the center of the chart to the point labels."),Object(b.b)("p",null,"The ",Object(b.b)("a",{parentName:"p",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/options/AngleLines.html"},"angle lines")," configuration is nested in the scale configuration as following: "),Object(b.b)("pre",null,Object(b.b)("code",{parentName:"pre",className:"language-java"},"// --------------------------------------\n// GLOBAL, for all scales (whatever type)\n// --------------------------------------\nDefaults.get().getScale().getAngleLines().setLineWidth(2);\n\nint lineWidth = Defaults.get().getScale().getAngleLines().getLineWidth();\n")),Object(b.b)("p",null,"The following are the attributes that you can set:"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",{parentName:"tr",align:"left"},"Name"),Object(b.b)("th",{parentName:"tr",align:"left"},"Type"),Object(b.b)("th",{parentName:"tr",align:"left"},"Default"),Object(b.b)("th",{parentName:"tr",align:"left"},"Description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"borderDash"),Object(b.b)("td",{parentName:"tr",align:"left"},"int[]"),Object(b.b)("td",{parentName:"tr",align:"left"},"[]"),Object(b.b)("td",{parentName:"tr",align:"left"},"Length and spacing of dashes on grid lines. See ",Object(b.b)("a",{parentName:"td",href:"https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash"},"MDN"),".")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"borderDashOffset"),Object(b.b)("td",{parentName:"tr",align:"left"},"double"),Object(b.b)("td",{parentName:"tr",align:"left"},"0"),Object(b.b)("td",{parentName:"tr",align:"left"},"Offset for line dashes. See ",Object(b.b)("a",{parentName:"td",href:"https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/lineDashOffset"},"MDN"),".")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"color"),Object(b.b)("td",{parentName:"tr",align:"left"},"String - ",Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/colors/IsColor.html"},"IsColor")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"Defaults.get().getGlobal()"),Object(b.b)("br",null),Object(b.b)("inlineCode",{parentName:"td"},".getBorderColorAsString()")),Object(b.b)("td",{parentName:"tr",align:"left"},"Color of angled lines.",Object(b.b)("br",null),"See ",Object(b.b)("a",{parentName:"td",href:"DefaultsCharts#commons-charts-options"},"default colors"),".")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"display"),Object(b.b)("td",{parentName:"tr",align:"left"},"boolean"),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"true")),Object(b.b)("td",{parentName:"tr",align:"left"},"If ",Object(b.b)("inlineCode",{parentName:"td"},"true"),", angle lines are shown.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"lineWidth"),Object(b.b)("td",{parentName:"tr",align:"left"},"int"),Object(b.b)("td",{parentName:"tr",align:"left"},"1"),Object(b.b)("td",{parentName:"tr",align:"left"},"Width of angled lines.")))),Object(b.b)("h2",{id:"pointlabels"},"PointLabels"),Object(b.b)("p",null,"The point labels options are used to configure the point labels that are shown on the perimeter of the scale."),Object(b.b)("p",null,"The ",Object(b.b)("a",{parentName:"p",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/options/PointLabels.html"},"point labels")," configuration is nested in the scale configuration as following "),Object(b.b)("pre",null,Object(b.b)("code",{parentName:"pre",className:"language-java"},"// --------------------------------------\n// GLOBAL, for all scales (whatever type)\n// --------------------------------------\nDefaults.get().getScale().getPointLabels().setColor(HtmlColor.RED);\n\nIsColor color = Defaults.get().getScale().getPointLabels().getColor();\n")),Object(b.b)("p",null,"The following are the attributes that you can set:"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",{parentName:"tr",align:"left"},"Name"),Object(b.b)("th",{parentName:"tr",align:"left"},"Type"),Object(b.b)("th",{parentName:"tr",align:"left"},"Default"),Object(b.b)("th",{parentName:"tr",align:"left"},"Description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"backdropColor"),Object(b.b)("td",{parentName:"tr",align:"left"},"String - ",Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/colors/IsColor.html"},"IsColor")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"Defaults.get().getGlobal()"),Object(b.b)("br",null),Object(b.b)("inlineCode",{parentName:"td"},".getBackgroundColorAsString()")),Object(b.b)("td",{parentName:"tr",align:"left"},"Background color of the point label.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"backdropPadding"),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/options/Padding.html"},"Padding")),Object(b.b)("td",{parentName:"tr",align:"left"},"2 to all dimensions"),Object(b.b)("td",{parentName:"tr",align:"left"},"The padding of label backdrop.",Object(b.b)("br",null),"See ",Object(b.b)("a",{parentName:"td",href:"../configuration/Commons#padding"},"padding documentation")," for more details.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"display"),Object(b.b)("td",{parentName:"tr",align:"left"},"boolean"),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"true")),Object(b.b)("td",{parentName:"tr",align:"left"},"If ",Object(b.b)("inlineCode",{parentName:"td"},"true"),", point labels are shown.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"color"),Object(b.b)("td",{parentName:"tr",align:"left"},"String - ",Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/colors/IsColor.html"},"IsColor")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"Defaults.get().getGlobal()"),Object(b.b)("br",null),Object(b.b)("inlineCode",{parentName:"td"},".getColorAsString()")),Object(b.b)("td",{parentName:"tr",align:"left"},"Color of point labels.",Object(b.b)("br",null),"See ",Object(b.b)("a",{parentName:"td",href:"DefaultsCharts#commons-charts-options"},"default colors"),".")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"font"),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/options/Font.html"},"Font")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"Defaults.get().getGlobal()"),Object(b.b)("br",null),Object(b.b)("inlineCode",{parentName:"td"},".getFont()")),Object(b.b)("td",{parentName:"tr",align:"left"},"Font of point labels.",Object(b.b)("br",null),"See ",Object(b.b)("a",{parentName:"td",href:"DefaultsCharts#font"},"Font"),".")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"padding"),Object(b.b)("td",{parentName:"tr",align:"left"},"int"),Object(b.b)("td",{parentName:"tr",align:"left"},"5"),Object(b.b)("td",{parentName:"tr",align:"left"},"Padding between chart and point labels, in pixel.")))),Object(b.b)("h2",{id:"time"},"Time"),Object(b.b)("p",null,"The time options are used to configure the time axis."),Object(b.b)("p",null,"The ",Object(b.b)("a",{parentName:"p",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/options/Time.html"},"time")," configuration is nested in the scale configuration as following: "),Object(b.b)("pre",null,Object(b.b)("code",{parentName:"pre",className:"language-java"},"// --------------------------------------\n// GLOBAL, for all scales (whatever type)\n// --------------------------------------\nDefaults.get().getScale().getTime().setUnit(TimeUnit.DAY);\n\nTimeUnit unit = Defaults.get().getScale().getTime().getUnit();\n")),Object(b.b)("p",null,"The following are the attributes that you can set:"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",{parentName:"tr",align:"left"},"Name"),Object(b.b)("th",{parentName:"tr",align:"left"},"Type"),Object(b.b)("th",{parentName:"tr",align:"left"},"Default"),Object(b.b)("th",{parentName:"tr",align:"left"},"Description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"isoWeekday"),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/enums/IsoWeekDay.html"},"IsoWeekDay")),Object(b.b)("td",{parentName:"tr",align:"left"},"IsoWeekDay.SUNDAY"),Object(b.b)("td",{parentName:"tr",align:"left"},"The first day of the week.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"minUnit"),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/enums/TimeUnit.html"},"TimeUnit")),Object(b.b)("td",{parentName:"tr",align:"left"},"TimeUnit.MILLISECOND"),Object(b.b)("td",{parentName:"tr",align:"left"},"The minimum display format to be used for a time unit.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"parser"),Object(b.b)("td",{parentName:"tr",align:"left"},"String"),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"null")),Object(b.b)("td",{parentName:"tr",align:"left"},"Interpreted as a custom format to be used to parse the date.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"round"),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/enums/TimeUnit.html"},"TimeUnit")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"null")),Object(b.b)("td",{parentName:"tr",align:"left"},"If defined, dates will be rounded to the start of this unit.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"stepSize"),Object(b.b)("td",{parentName:"tr",align:"left"},"int"),Object(b.b)("td",{parentName:"tr",align:"left"},"1"),Object(b.b)("td",{parentName:"tr",align:"left"},"The number of units between grid lines.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"tooltipFormat"),Object(b.b)("td",{parentName:"tr",align:"left"},"String"),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"null")),Object(b.b)("td",{parentName:"tr",align:"left"},"Format string to use for the tooltip.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"unit"),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/enums/TimeUnit.html"},"TimeUnit")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"null")),Object(b.b)("td",{parentName:"tr",align:"left"},"If defined, will force the unit to be a certain type.")))),Object(b.b)("p",null,"For more details, have a look how to configure a ",Object(b.b)("a",{parentName:"p",href:"../axes/CartesianTimeAxes"},"cartesian time axis"),"."),Object(b.b)("h3",{id:"display-formats"},"Display formats"),Object(b.b)("p",null,"The display formats are used to configure how different time units are formed in the strings for the axis tick marks."),Object(b.b)("p",null,"The ",Object(b.b)("a",{parentName:"p",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/options/DisplayFormats.html"},"display formats")," configuration is nested in the scale configuration as following: "),Object(b.b)("pre",null,Object(b.b)("code",{parentName:"pre",className:"language-java"},'// --------------------------------------\n// GLOBAL, for all scales (whatever type)\n// --------------------------------------\n// changes the default format (of date adapter) of a time unit\nDefaults.get().getScale().getTime().getDisplayFormats().setDisplayFormat(TimeUnit.HOUR, "hh:MM:00");\n\nString displayFormat = Defaults.get().getScale().getTime().getDisplayFormats().getDisplayFormat(TimeUnit.HOUR);\n')),Object(b.b)("h2",{id:"adapters"},"Adapters"),Object(b.b)("p",null,"The adapters options are used to configure the adapter for external date library if that adapter needs or supports options. The options are leveraging in ",Object(b.b)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl"},"INTL")," framework"),Object(b.b)("p",null,"The ",Object(b.b)("a",{parentName:"p",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/options/Adapters.html"},"adapters options")," configuration is nested in the scale configuration as following: "),Object(b.b)("pre",null,Object(b.b)("code",{parentName:"pre",className:"language-java"},"// --------------------------------------\n// GLOBAL, for all scales (whatever type)\n// --------------------------------------\nDefaults.get().getScale().getAdapters().setLocale(CLocale.ITALY);\n\nCLocale locale = Defaults.get().getScale().getAdapters().getLocale();\n")),Object(b.b)("p",null,"The following are the attributes that you can set:"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",{parentName:"tr",align:"left"},"Name"),Object(b.b)("th",{parentName:"tr",align:"left"},"Type"),Object(b.b)("th",{parentName:"tr",align:"left"},"Default"),Object(b.b)("th",{parentName:"tr",align:"left"},"Description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"locale"),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/intl/CLocale.html"},"CLocale")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"null")),Object(b.b)("td",{parentName:"tr",align:"left"},"Using locale specifying the language to use generating or interpreting strings.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"zone"),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/intl/enums/TimeZone.html"},"TimeZone")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"null")),Object(b.b)("td",{parentName:"tr",align:"left"},"Implementation recognizes the time zone names of the IANA time zone database.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"outputCalendar"),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/intl/enums/Calendar.html"},"Calendar")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"null")),Object(b.b)("td",{parentName:"tr",align:"left"},"The calendar type to use.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"numberingSystem"),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/intl/enums/NumberingSystem.html"},"NumberingSystem")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"null")),Object(b.b)("td",{parentName:"tr",align:"left"},"The numbering system to use.")))),Object(b.b)("p",null,"For more details, have a look how to configure a ",Object(b.b)("a",{parentName:"p",href:"../DateAdapters#Luxon"},"Luxon")," date adapters and the ",Object(b.b)("a",{parentName:"p",href:"../intl/Locale"},"locale")," documentation."))}p.isMDXComponent=!0}}]);
"use strict";(self.webpackChunkcharba=self.webpackChunkcharba||[]).push([[8023],{3905:function(t,r,n){n.d(r,{Zo:function(){return u},kt:function(){return h}});var e=n(67294);function o(t,r,n){return r in t?Object.defineProperty(t,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[r]=n,t}function a(t,r){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var e=Object.getOwnPropertySymbols(t);r&&(e=e.filter((function(r){return Object.getOwnPropertyDescriptor(t,r).enumerable}))),n.push.apply(n,e)}return n}function i(t){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?a(Object(n),!0).forEach((function(r){o(t,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(r){Object.defineProperty(t,r,Object.getOwnPropertyDescriptor(n,r))}))}return t}function l(t,r){if(null==t)return{};var n,e,o=function(t,r){if(null==t)return{};var n,e,o={},a=Object.keys(t);for(e=0;e<a.length;e++)n=a[e],r.indexOf(n)>=0||(o[n]=t[n]);return o}(t,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);for(e=0;e<a.length;e++)n=a[e],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(o[n]=t[n])}return o}var p=e.createContext({}),c=function(t){var r=e.useContext(p),n=r;return t&&(n="function"==typeof t?t(r):i(i({},r),t)),n},u=function(t){var r=c(t.components);return e.createElement(p.Provider,{value:r},t.children)},g={inlineCode:"code",wrapper:function(t){var r=t.children;return e.createElement(e.Fragment,{},r)}},s=e.forwardRef((function(t,r){var n=t.components,o=t.mdxType,a=t.originalType,p=t.parentName,u=l(t,["components","mdxType","originalType","parentName"]),s=c(n),h=o,d=s["".concat(p,".").concat(h)]||s[h]||g[h]||a;return n?e.createElement(d,i(i({ref:r},u),{},{components:n})):e.createElement(d,i({ref:r},u))}));function h(t,r){var n=arguments,o=r&&r.mdxType;if("string"==typeof t||o){var a=n.length,i=new Array(a);i[0]=s;var l={};for(var p in r)hasOwnProperty.call(r,p)&&(l[p]=r[p]);l.originalType=t,l.mdxType="string"==typeof t?t:o,i[1]=l;for(var c=2;c<a;c++)i[c]=n[c];return e.createElement.apply(null,i)}return e.createElement.apply(null,n)}s.displayName="MDXCreateElement"},77534:function(t,r,n){n.r(r),n.d(r,{frontMatter:function(){return p},contentTitle:function(){return c},metadata:function(){return u},toc:function(){return g},default:function(){return h}});var e=n(87462),o=n(63366),a=(n(67294),n(3905)),i=n(44996),l=["components"],p={id:"PluginBackgroundColor",title:"Chart background color plugin",hide_title:!0,sidebar_label:"Chart background color"},c=void 0,u={unversionedId:"PluginBackgroundColor",id:"version-3.3/PluginBackgroundColor",title:"Chart background color plugin",description:"Chart background color plugin",source:"@site/versioned_docs/version-3.3/PluginBackgroundColor.md",sourceDirName:".",slug:"/PluginBackgroundColor",permalink:"/Charba-Wiki/docs/3.3/PluginBackgroundColor",tags:[],version:"3.3",frontMatter:{id:"PluginBackgroundColor",title:"Chart background color plugin",hide_title:!0,sidebar_label:"Chart background color"},sidebar:"version-3.3/docs",previous:{title:"Gauge",permalink:"/Charba-Wiki/docs/3.3/ChartGauge"},next:{title:"Chart cursor",permalink:"/Charba-Wiki/docs/3.3/PluginPointer"}},g=[{value:"Chart background color plugin",id:"chart-background-color-plugin",children:[],level:2}],s={toc:g};function h(t){var r=t.components,n=(0,o.Z)(t,l);return(0,a.kt)("wrapper",(0,e.Z)({},s,n,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"chart-background-color-plugin"},"Chart background color plugin"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Charba")," provides an plugin implementation to set the background color, pattern or gradient of the chart. This plugin can be set both at global and at chart level."),(0,a.kt)("img",{src:(0,i.Z)("/img/backgroundGradient.png")}),(0,a.kt)("p",null,"The implementation is ",(0,a.kt)("a",{parentName:"p",href:"https://pepstock-org.github.io/Charba/3.3/org/pepstock/charba/client/impl/plugins/ChartBackgroundColor.html"},"ChartBackgroundColor")," and can be set as following:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"// GLOBAL\nDefaults.get().getPlugins().register(new ChartBackgroundColor());\n\n// INLINE\nchart.getPlugins().add(new ChartBackgroundColor());\n")),(0,a.kt)("p",null,"The ID of plugin is ",(0,a.kt)("inlineCode",{parentName:"p"},"charbabackgroundcolor")," (",(0,a.kt)("a",{parentName:"p",href:"https://pepstock-org.github.io/Charba/3.3/org/pepstock/charba/client/impl/plugins/ChartBackgroundColor.html#ID"},"ChartBackgroundColor.ID"),")."),(0,a.kt)("p",null,"To set the background color or pattern or gradient, you must create the instance passing the color or pattern or gradient into constructor:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'\n// Default is "white"\nnew ChartBackgroundColor();\n// Set "green"\nnew ChartBackgroundColor("green");\n// Set "green" by HtmlColor\nnew ChartBackgroundColor(HtmlColor.GREEN);\n// Set gradient\nGradient gradient = new Gradient(GradientType.RADIAL, GradientOrientation.IN_OUT,  GradientScope.CANVAS);\ngradient.addColorStop(0, HtmlColor.WHITE);\ngradient.addColorStop(1, HtmlColor.GRAY);\nnew ChartBackgroundColor(gradient);\n// Set pattern\nPattern pattern = new Pattern(Images.INSTANCE.pattern());\nnew ChartBackgroundColor(pattern);\n')),(0,a.kt)("p",null,"It could be that you set this plugin as global one for all your charts but you want to change it for only one instance."),(0,a.kt)("p",null,"In this case you should instantiate a ",(0,a.kt)("a",{parentName:"p",href:"https://pepstock-org.github.io/Charba/3.3/org/pepstock/charba/client/impl/plugins/ChartBackgroundColorOptions.html"},"ChartBackgroundColorOptions")," and set it to your chart options as following, setting the color or pattern or gradient you want:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'// Set "green" overriding the GLOBAL one\nChartBackgroundColorOptions option = new ChartBackgroundColorOptions();\noption.setBackgroundColor(HtmlColor.GREEN);\n\n// Set a gradient overriding the GLOBAL one\nGradient gradient = new Gradient(GradientType.RADIAL, GradientOrientation.IN_OUT,  GradientScope.CANVAS);\ngradient.addColorStop(0, HtmlColor.WHITE);\ngradient.addColorStop(1, HtmlColor.GRAY);\noption.setBackgroundColor(gradient);\n\n// Set a pattern overriding the GLOBAL one\nPattern pattern = new Pattern(Images.INSTANCE.pattern());\noption.setBackgroundColor(pattern);\n\n// --------------------------------------\n// store the plugin options by plugin ID\n// --------------------------------------\nchart.getOptions().getPlugins().setOptions(ChartBackgroundColor.ID, option);\n// --------------------------------------\n// or store the plugin options without plugin ID\n// --------------------------------------\nchart.getOptions().getPlugins().setOptions(option);\n')),(0,a.kt)("p",null,"If you need to read the plugin options, there is the specific factory, ",(0,a.kt)("a",{parentName:"p",href:"https://pepstock-org.github.io/Charba/3.3/org/pepstock/charba/client/impl/plugins/ChartBackgroundColorOptionsFactory.html"},"ChartBackgroundColorOptionsFactory")," as static reference inside the ",(0,a.kt)("a",{parentName:"p",href:"https://pepstock-org.github.io/Charba/3.3/org/pepstock/charba/client/impl/plugins/ChartBackgroundColor.html"},"plugin")," which can be used to retrieve the options from the chart as following:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"// --------------------------------------\n// reads the options from chart\n// --------------------------------------\nChartBackgroundColorOptions option;\n\nif (chart.getOptions().getPlugins().hasOptions(ChartBackgroundColor.ID)){\n   // --------------------------------------\n   // retrieve the plugin options by plugin ID\n   // --------------------------------------\n   options = chart.getOptions().getPlugins().getOptions(ChartBackgroundColor.ID, ChartBackgroundColor.FACTORY);\n   // --------------------------------------\n   // or retrieve the plugin options without plugin ID\n   // --------------------------------------\n   options = chart.getOptions().getPlugins().getOptions(ChartBackgroundColor.FACTORY);\n}\n")),(0,a.kt)("p",null,"The following are the attributes that you can set to plugin options:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Default"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"backgroundColor"),(0,a.kt)("td",{parentName:"tr",align:null},"String - ",(0,a.kt)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/3.3/org/pepstock/charba/client/colors/IsColor.html"},"IsColor")," - ",(0,a.kt)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/3.3/org/pepstock/charba/client/colors/Pattern.html"},"Pattern")," - ",(0,a.kt)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/3.3/org/pepstock/charba/client/colors/Gradient.html"},"Gradient")),(0,a.kt)("td",{parentName:"tr",align:null},"HtmlColor.WHITE"),(0,a.kt)("td",{parentName:"tr",align:null},"The fill color of the chart background.")))))}h.isMDXComponent=!0}}]);
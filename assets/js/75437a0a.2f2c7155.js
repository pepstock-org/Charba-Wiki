(window.webpackJsonp=window.webpackJsonp||[]).push([[65],{134:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return c})),a.d(t,"metadata",(function(){return l})),a.d(t,"toc",(function(){return o})),a.d(t,"default",(function(){return b}));var n=a(3),r=a(8),i=(a(0),a(209)),c={id:"CartesianCategoryAxes",title:"Cartesian category",hide_title:!0,sidebar_label:"Cartesian category"},l={unversionedId:"CartesianCategoryAxes",id:"version-3.3/CartesianCategoryAxes",isDocsHomePage:!1,title:"Cartesian category",description:"Cartesian Category Axes",source:"@site/versioned_docs/version-3.3/CartesianCategoryAxes.md",sourceDirName:".",slug:"/CartesianCategoryAxes",permalink:"/Charba-Wiki/docs/3.3/CartesianCategoryAxes",version:"3.3",sidebar_label:"Cartesian category",frontMatter:{id:"CartesianCategoryAxes",title:"Cartesian category",hide_title:!0,sidebar_label:"Cartesian category"},sidebar:"version-3.3/docs",previous:{title:"Cartesian linear",permalink:"/Charba-Wiki/docs/3.3/CartesianLinearAxes"},next:{title:"Cartesian logarithmic",permalink:"/Charba-Wiki/docs/3.3/CartesianLogarithmicAxes"}},o=[{value:"Cartesian Category Axes",id:"cartesian-category-axes",children:[]},{value:"Ticks",id:"ticks",children:[{value:"Callback",id:"callback",children:[]},{value:"BuildTicks callback",id:"buildticks-callback",children:[]}]}],s={toc:o};function b(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(n.a)({},s,a,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"cartesian-category-axes"},"Cartesian Category Axes"),Object(i.b)("p",null,"The ",Object(i.b)("a",{parentName:"p",href:"https://www.pepstock.org/Charba/3.3/org/pepstock/charba/client/configuration/CartesianCategoryAxis.html"},"category axis")," will draw the labels from one of the label arrays included in the chart data."),Object(i.b)("h2",{id:"ticks"},"Ticks"),Object(i.b)("p",null,"The category axis provides the following options for configuring ",Object(i.b)("a",{parentName:"p",href:"https://www.pepstock.org/Charba/3.3/org/pepstock/charba/client/configuration/CartesianCategoryTick.html"},"tick marks"),". These options extend the ",Object(i.b)("a",{parentName:"p",href:"CartesianAxes#tick-configuration"},"common tick configuration"),"."),Object(i.b)("p",null,"Table with options:"),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",{parentName:"tr",align:null},"Name"),Object(i.b)("th",{parentName:"tr",align:null},"Type"),Object(i.b)("th",{parentName:"tr",align:null},"Default"),Object(i.b)("th",{parentName:"tr",align:null},"Description"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"labels"),Object(i.b)("td",{parentName:"tr",align:null},"String[]"),Object(i.b)("td",{parentName:"tr",align:null},"[]"),Object(i.b)("td",{parentName:"tr",align:null},"An array of labels to display.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"min"),Object(i.b)("td",{parentName:"tr",align:null},"String"),Object(i.b)("td",{parentName:"tr",align:null}),Object(i.b)("td",{parentName:"tr",align:null},"The minimum item to display.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"max"),Object(i.b)("td",{parentName:"tr",align:null},"String"),Object(i.b)("td",{parentName:"tr",align:null}),Object(i.b)("td",{parentName:"tr",align:null},"The maximum item to display.")))),Object(i.b)("p",null,"For both the ",Object(i.b)("inlineCode",{parentName:"p"},"min")," and ",Object(i.b)("inlineCode",{parentName:"p"},"max")," properties, the value must be in the ",Object(i.b)("inlineCode",{parentName:"p"},"labels")," array."),Object(i.b)("p",null,"The further customization of ticks, a callback is provided."),Object(i.b)("h3",{id:"callback"},"Callback"),Object(i.b)("p",null,"It is also common to want to change the tick marks to include information about the data type. "),Object(i.b)("p",null,"To apply a custom callback, you can set a ",Object(i.b)("a",{parentName:"p",href:"https://www.pepstock.org/Charba/3.3/org/pepstock/charba/client/callbacks/CategoryTickCallback.html"},"CategoryTickCallback")," instance to the axis options, as following:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-java"},"axis.getTicks().setCallback(new CategoryTickCallback() {\n\n   /**\n    * Changes the tick marks to include information about the data type.\n    * \n    * @param axis axis instance where this callback as been defined\n    * @param value value of tick\n    * @param index index of tick\n    * @param values list of all tick values\n    * @return the tick to apply or if the callback returns null the associated grid line will be hidden.\n    */\n   public String onCallback(Axis axis, String value, int index, List<String> values){\n      // add a label\n      return value + myLabel;\n   }\n         \n});\n")),Object(i.b)("h3",{id:"buildticks-callback"},"BuildTicks callback"),Object(i.b)("p",null,"This callback can be used to change parameters in the scale during ticks building. To implement this callback, you must implement ",Object(i.b)("a",{parentName:"p",href:"https://www.pepstock.org/Charba/3.3/org/pepstock/charba/client/callbacks/CategoryAxisBuildTicksCallback.html"},"this interface"),". "),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-java"},"public interface CategoryAxisBuildTicksCallback {\n\n   /**\n    * Callback that runs before ticks are created.\n    * \n    * @param axis axis instance where this callback as been defined\n    * @param item axis item instance\n    */\n   void onBeforeBuildTicks(Axis axis, AxisItem item);\n\n   /**\n    * Callback that runs after ticks are created. Useful for filtering ticks.\n    * \n    * @param axis axis instance where this callback as been defined\n    * @param item axis item instance\n    * @param ticks list of created ticks\n    */\n    void onAfterBuildTicks(Axis axis, AxisItem item, List<String> ticks);\n\n}\n")))}b.isMDXComponent=!0},209:function(e,t,a){"use strict";a.d(t,"a",(function(){return p})),a.d(t,"b",(function(){return m}));var n=a(0),r=a.n(n);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function c(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?c(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):c(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=r.a.createContext({}),b=function(e){var t=r.a.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},p=function(e){var t=b(e.components);return r.a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},d=r.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,c=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),p=b(a),d=n,m=p["".concat(c,".").concat(d)]||p[d]||u[d]||i;return a?r.a.createElement(m,l(l({ref:t},s),{},{components:a})):r.a.createElement(m,l({ref:t},s))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,c=new Array(i);c[0]=d;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l.mdxType="string"==typeof e?e:n,c[1]=l;for(var s=2;s<i;s++)c[s]=a[s];return r.a.createElement.apply(null,c)}return r.a.createElement.apply(null,a)}d.displayName="MDXCreateElement"}}]);
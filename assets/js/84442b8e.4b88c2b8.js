(window.webpackJsonp=window.webpackJsonp||[]).push([[71],{140:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return b})),n.d(t,"default",(function(){return s}));var a=n(3),o=n(8),r=(n(0),n(209)),l=n(210),i={id:"Zoom",title:"Zoom plugin",hide_title:!0,sidebar_label:"Zoom"},c={unversionedId:"Zoom",id:"version-3.3/Zoom",isDocsHomePage:!1,title:"Zoom plugin",description:"Zoom plugin",source:"@site/versioned_docs/version-3.3/Zoom.md",sourceDirName:".",slug:"/Zoom",permalink:"/Charba-Wiki/docs/3.3/Zoom",version:"3.3",sidebar_label:"Zoom",frontMatter:{id:"Zoom",title:"Zoom plugin",hide_title:!0,sidebar_label:"Zoom"},sidebar:"version-3.3/docs",previous:{title:"Labels plugin",permalink:"/Charba-Wiki/docs/3.3/Labels"},next:{title:"Annotation plugin",permalink:"/Charba-Wiki/docs/3.3/Annotation"}},b=[{value:"Zoom plugin",id:"zoom-plugin",children:[]},{value:"Activation",id:"activation",children:[]},{value:"Configuration",id:"configuration",children:[]},{value:"PAN element",id:"pan-element",children:[{value:"Mode Pan callback",id:"mode-pan-callback",children:[]},{value:"onProgress Pan callback",id:"onprogress-pan-callback",children:[]},{value:"onComplete Pan callback",id:"oncomplete-pan-callback",children:[]}]},{value:"ZOOM element",id:"zoom-element",children:[{value:"Dragging",id:"dragging",children:[]},{value:"Mode Zoom callback",id:"mode-zoom-callback",children:[]},{value:"onProgress Zoom callback",id:"onprogress-zoom-callback",children:[]},{value:"onComplete Zoom callback",id:"oncomplete-zoom-callback",children:[]}]},{value:"Range",id:"range",children:[]},{value:"Resetting zooming",id:"resetting-zooming",children:[]}],p={toc:b};function s(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(r.b)("wrapper",Object(a.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("h2",{id:"zoom-plugin"},"Zoom plugin"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Charba")," provides out of the box the feature to enable ",Object(r.b)("a",{parentName:"p",href:"https://github.com/chartjs/chartjs-plugin-zoom"},"Zoom")," which is a light weight plugin to zoom and pan a chart."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Charba")," is injecting the ",Object(r.b)("inlineCode",{parentName:"p"},"chartjs-plugin-zoom.min.js"),", the released version ",Object(r.b)("a",{parentName:"p",href:"https://github.com/chartjs/chartjs-plugin-zoom/releases/tag/v0.7.5"},"0.7.5"),"."),Object(r.b)("p",null,"The plugin is providing 2 main actions to apply on a chart:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"panning"),", which refers to the horizontal or vertical scrolling of a chart wider than the display, can be done via the mouse or with a finger"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"zooming"),", which maintains focus when the chart size changes, is done via the mouse wheel or via a pinch gesture")),Object(r.b)("p",null,Object(r.b)("a",{parentName:"p",href:"https://github.com/hammerjs/hammer.js"},"Hammer.JS")," javaScript library is used for gesture recognition."),Object(r.b)("img",{src:Object(l.a)("/img/zoom.gif")}),Object(r.b)("h2",{id:"activation"},"Activation"),Object(r.b)("p",null,"The zoom plugin is injected directly into document."),Object(r.b)("p",null,"The plugin ID is a constant everywhere available, ",Object(r.b)("inlineCode",{parentName:"p"},"ZoomPlugin.ID"),", in ",Object(r.b)("a",{parentName:"p",href:"https://pepstock-org.github.io/Charba/3.3/org/pepstock/charba/client/zoom/ZoomPlugin.html"},"ZoomPlugin")," entry point."),Object(r.b)("p",null,"This plugin registers itself globally, meaning that once injected, all charts will display labels. In case you want it enabled only for a few charts, you can enable it as following:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-java"},"// --------------------------------------\n// enabling the plugin without any parameter\n// the plugin is NOT registered to all charts\n// --------------------------------------\nZoomPlugin.enable();\n\n// --------------------------------------\n// enabling the plugin with `true` parameter\n// the plugin is registered to all charts\n// --------------------------------------\nZoomPlugin.enable(true);\n\n// --------------------------------------\n// enabling the plugin with `true` parameter\n// the plugin is registered to all charts and\n// another `true` parameter to inject the HammerJS\n// --------------------------------------\nZoomPlugin.enable(true, true);\n")),Object(r.b)("p",null,"With last sample, you can decide if you want to inject ",Object(r.b)("a",{parentName:"p",href:"https://github.com/hammerjs/hammer.js"},"Hammer.JS")," (default), passing ",Object(r.b)("inlineCode",{parentName:"p"},"false"),". This could be helpful when you have another library which is using and injecting Hammer.JS."),Object(r.b)("p",null,"To activate the plugin in a specific chart, it's enough to provide the configuration options (see ",Object(r.b)("a",{parentName:"p",href:"Zoom#configuration"},"below"),") or enabling it by:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-java"},"// --------------------------------------\n// enabling the plugin to a chart instance \n// by an options\n// --------------------------------------\nchart.getOptions().getPlugins().setOptions(ZoomPlugin.ID, options);\n\n// --------------------------------------\n// Another way to store the plugin options\n// enabling the plugin to a chart instance \n// --------------------------------------\nchart.getOptions().getPlugins().setOptions(options);\n\n// --------------------------------------\n// enabling the plugin to a chart instance \n// by a boolean using default\n// --------------------------------------\nchart.getOptions().getPlugins().setEnabled(ZoomPlugin.ID, true);\n")),Object(r.b)("p",null,"If you need to read the plugin options, there is the specific factory, ",Object(r.b)("a",{parentName:"p",href:"https://pepstock-org.github.io/Charba/3.3/org/pepstock/charba/client/zoom/ZoomOptionsFactory.html"},"ZoomOptionsFactory")," as static reference inside the ",Object(r.b)("a",{parentName:"p",href:"https://pepstock-org.github.io/Charba/3.3/org/pepstock/charba/client/zoom/ZoomPlugin.html"},"ZoomPlugin")," entry point which can be used to retrieve the options from chart as following:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-java"},"// --------------------------------------\n// reads the options from chart\n// --------------------------------------\nZoomOptions options;\n\nif (chart.getOptions().getPlugins().hasOptions(ZoomPlugin.ID)){\n   // --------------------------------------\n   // retrieve the plugin options by plugin ID\n   // --------------------------------------\n   options = chart.getOptions().getPlugins().getOptions(ZoomPlugin.ID, ZoomPlugin.FACTORY);\n   // --------------------------------------\n   // or retrieve the plugin options without plugin ID\n   // --------------------------------------\n   options = chart.getOptions().getPlugins().getOptions(ZoomPlugin.FACTORY);\n}\n")),Object(r.b)("h2",{id:"configuration"},"Configuration"),Object(r.b)("p",null,"The plugin options can be changed at 2 different levels and are evaluated with the following priority:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"per chart by ",Object(r.b)("inlineCode",{parentName:"li"},"chart.getOptions().getPlugins().setOptions")," method"),Object(r.b)("li",{parentName:"ul"},"per chart type by ",Object(r.b)("inlineCode",{parentName:"li"},"Defaults.get().getOptions([chartType]).getPlugins().setOptions")," method"),Object(r.b)("li",{parentName:"ul"},"or globally by ",Object(r.b)("inlineCode",{parentName:"li"},"Defaults.get().getGlobal().getPlugins().setOptions")," method")),Object(r.b)("p",null,"The configuration class ",Object(r.b)("a",{parentName:"p",href:"https://pepstock-org.github.io/Charba/3.3/org/pepstock/charba/client/zoom/ZoomOptions.html"},"ZoomOptions")," contains all properties needed to configure the plugin."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-java"},"// --------------------------------------\n// creating object and setting some properties\n// --------------------------------------\nZoomOptions options = new ZoomOptions();\noptions.getPan().setEnabled(true);\noptions.getPan().setMode(InteractionAxis.XY);\noptions.getZoom().setEnabled(true);\noptions.getZoom().setMode(InteractionAxis.XY);\n")),Object(r.b)("h2",{id:"pan-element"},"PAN element"),Object(r.b)("p",null,"The panning refers to the horizontal or vertical scrolling of a chart wider than the display."),Object(r.b)("p",null,"Every options has got a inner element to set ",Object(r.b)("strong",{parentName:"p"},"Pan")," options. "),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-java"},"options.getPan().setEnabled(true);\noptions.getPan().setMode(InteractionAxis.XY);\n")),Object(r.b)("p",null,"The complete options are described by following table:"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",{parentName:"tr",align:null},"Name"),Object(r.b)("th",{parentName:"tr",align:null},"Type"),Object(r.b)("th",{parentName:"tr",align:null},"Default"),Object(r.b)("th",{parentName:"tr",align:null},"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"enabled"),Object(r.b)("td",{parentName:"tr",align:null},"boolean"),Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"false")),Object(r.b)("td",{parentName:"tr",align:null},"if ",Object(r.b)("inlineCode",{parentName:"td"},"true")," the panning is enabled.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"mode"),Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/3.3/org/pepstock/charba/client/enums/InteractionAxis.html"},"InteractionAxis")),Object(r.b)("td",{parentName:"tr",align:null},"InteractionAxis.XY"),Object(r.b)("td",{parentName:"tr",align:null},"Panning directions. Remove the appropriate direction to disable. For instance, InteractionAxis.Y would only allow panning in the y direction.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"rangeMin"),Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/3.3/org/pepstock/charba/client/zoom/Range.html"},"Range")),Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"null")),Object(r.b)("td",{parentName:"tr",align:null},"Format of minimum pan range depends on scale type.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"rangeMax"),Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/3.3/org/pepstock/charba/client/zoom/Range.html"},"Range")),Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"null")),Object(r.b)("td",{parentName:"tr",align:null},"Format of maximum pan range depends on scale type.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"speed"),Object(r.b)("td",{parentName:"tr",align:null},"double"),Object(r.b)("td",{parentName:"tr",align:null},"20"),Object(r.b)("td",{parentName:"tr",align:null},"The threshold factor before applying pan, on category scale.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"threshold"),Object(r.b)("td",{parentName:"tr",align:null},"double"),Object(r.b)("td",{parentName:"tr",align:null},"10"),Object(r.b)("td",{parentName:"tr",align:null},"The minimal pan distance required before actually applying pan.")))),Object(r.b)("h3",{id:"mode-pan-callback"},"Mode Pan callback"),Object(r.b)("p",null,"The panning directions can be configured by a ",Object(r.b)("a",{parentName:"p",href:"https://pepstock-org.github.io/Charba/3.3/org/pepstock/charba/client/zoom/callbacks/ModeCallback.html"},"callback")," at runtime, as following:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-java"},"ZoomOptions options = new ZoomOptions();\noptions.getPan().setMode(new ModeCallback() {\n            \n    @Override\n    public InteractionAxis mode(IsChart chart) {\n        return InteractionAxis.Y;\n    }\n});\n")),Object(r.b)("h3",{id:"onprogress-pan-callback"},"onProgress Pan callback"),Object(r.b)("p",null,"The pan element can catch events during panning which can be consumed by ",Object(r.b)("a",{parentName:"p",href:"https://pepstock-org.github.io/Charba/3.3/org/pepstock/charba/client/zoom/callbacks/ProgressCallback.html"},"callback"),", as following:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-java"},"ZoomOptions options = new ZoomOptions();\noptions.getPan().setProgressCallback(new ProgressCallback() {\n            \n    @Override\n    public void onProgress(IsChart chart, AbstractConfigurationItem item) {\n        // my logic \n    }\n});\n")),Object(r.b)("p",null,"The callback is receiving the chart instance and ",Object(r.b)("a",{parentName:"p",href:"https://pepstock-org.github.io/Charba/3.3/org/pepstock/charba/client/zoom/Pan.html"},"Pan")," instance."),Object(r.b)("h3",{id:"oncomplete-pan-callback"},"onComplete Pan callback"),Object(r.b)("p",null,"The pan element can catch event when panning is completed which can be consumed by ",Object(r.b)("a",{parentName:"p",href:"https://pepstock-org.github.io/Charba/3.3/org/pepstock/charba/client/zoom/callbacks/CompleteCallback.html"},"callback"),", as following:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-java"},"ZoomOptions options = new ZoomOptions();\noptions.getPan().setCompleteCallback(new CompleteCallback() {\n            \n    @Override\n    public void onComplete(IsChart chart, AbstractConfigurationItem item) {\n        // my logic \n    }\n});\n")),Object(r.b)("p",null,"The callback is receiving the chart instance and ",Object(r.b)("a",{parentName:"p",href:"https://pepstock-org.github.io/Charba/3.3/org/pepstock/charba/client/zoom/Pan.html"},"Pan")," instance."),Object(r.b)("h2",{id:"zoom-element"},"ZOOM element"),Object(r.b)("p",null,"The zooming refers to a way to maintain focus when the chart size changes."),Object(r.b)("p",null,"Every options has got a inner element to set ",Object(r.b)("strong",{parentName:"p"},"Zoom")," options. "),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-java"},"options.getZoom().setEnabled(true);\noptions.getZoom().setMode(InteractionAxis.XY);\n")),Object(r.b)("p",null,"The complete options are described by following table:"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",{parentName:"tr",align:null},"Name"),Object(r.b)("th",{parentName:"tr",align:null},"Type"),Object(r.b)("th",{parentName:"tr",align:null},"Default"),Object(r.b)("th",{parentName:"tr",align:null},"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"enabled"),Object(r.b)("td",{parentName:"tr",align:null},"boolean"),Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"false")),Object(r.b)("td",{parentName:"tr",align:null},"if ",Object(r.b)("inlineCode",{parentName:"td"},"true")," the zooming is enabled.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"drag"),Object(r.b)("td",{parentName:"tr",align:null},"boolean - ",Object(r.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/3.3/org/pepstock/charba/client/zoom/Drag.html"},"Drag")),Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"false")),Object(r.b)("td",{parentName:"tr",align:null},"Drag-to-zoom effect can be customized.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"mode"),Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/3.3/org/pepstock/charba/client/enums/InteractionAxis.html"},"InteractionAxis")),Object(r.b)("td",{parentName:"tr",align:null},"InteractionAxis.XY"),Object(r.b)("td",{parentName:"tr",align:null},"Zooming directions. Remove the appropriate direction to disable. For instance, InteractionAxis.Y would only allow zooming in the y direction.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"rangeMin"),Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/3.3/org/pepstock/charba/client/zoom/Range.html"},"Range")),Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"null")),Object(r.b)("td",{parentName:"tr",align:null},"Format of minimum pan range depends on scale type.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"rangeMax"),Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/3.3/org/pepstock/charba/client/zoom/Range.html"},"Range")),Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"null")),Object(r.b)("td",{parentName:"tr",align:null},"Format of maximum pan range depends on scale type.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"speed"),Object(r.b)("td",{parentName:"tr",align:null},"double"),Object(r.b)("td",{parentName:"tr",align:null},"0.1"),Object(r.b)("td",{parentName:"tr",align:null},"The speed of element via mouse wheel (percentage of element on a wheel event). Must be a value between 0 and 1.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"sensitivity"),Object(r.b)("td",{parentName:"tr",align:null},"double"),Object(r.b)("td",{parentName:"tr",align:null},"3"),Object(r.b)("td",{parentName:"tr",align:null},"The minimal zoom level before actually applying zoom, on category scale.")))),Object(r.b)("h3",{id:"dragging"},"Dragging"),Object(r.b)("p",null,"The Drag-to-zoom effect can be customized."),Object(r.b)("p",null,"The ",Object(r.b)("a",{parentName:"p",href:"https://pepstock-org.github.io/Charba/3.3/org/pepstock/charba/client/zoom/Drag.html"},"Drag")," object provides the methods to customized the area to zoom."),Object(r.b)("p",null,"A drag object must be created by the ",Object(r.b)("a",{parentName:"p",href:"https://pepstock-org.github.io/Charba/3.3/org/pepstock/charba/client/zoom/ZoomPlugin.html"},"ZoomPlugin"),", as following:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-java"},"// --------------------------------------\n// creates a drag object with global options as default\n// --------------------------------------\nDrag dragWithGlobalDef = ZoomPlugin.createDrag();\ndragWithGlobalDef.setAnimationDuration(1000);\n\n// --------------------------------------\n// creates a drag object with chart options as default\n// --------------------------------------\nDrag drag = ZoomPlugin.createDrag(chart);\ndrag.setAnimationDuration(1000);\n")),Object(r.b)("p",null,"The complete options are described by following table:"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",{parentName:"tr",align:null},"Name"),Object(r.b)("th",{parentName:"tr",align:null},"Type"),Object(r.b)("th",{parentName:"tr",align:null},"Default"),Object(r.b)("th",{parentName:"tr",align:null},"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"backgroundColor"),Object(r.b)("td",{parentName:"tr",align:null},"String - ",Object(r.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/3.3/org/pepstock/charba/client/colors/IsColor.html"},"IsColor")),Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"rgba(225,225,225,0.3)")),Object(r.b)("td",{parentName:"tr",align:null},"The fill color of drag area.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"borderColor"),Object(r.b)("td",{parentName:"tr",align:null},"String - ",Object(r.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/3.3/org/pepstock/charba/client/colors/IsColor.html"},"IsColor")),Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"rgb(225,225,225)")),Object(r.b)("td",{parentName:"tr",align:null},"The stroke color of drag area.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"borderWidth"),Object(r.b)("td",{parentName:"tr",align:null},"int"),Object(r.b)("td",{parentName:"tr",align:null},"0"),Object(r.b)("td",{parentName:"tr",align:null},"The stroke width of drag area.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"animationDuration"),Object(r.b)("td",{parentName:"tr",align:null},"int"),Object(r.b)("td",{parentName:"tr",align:null},"0"),Object(r.b)("td",{parentName:"tr",align:null},"The number of milliseconds an animation takes.")))),Object(r.b)("h3",{id:"mode-zoom-callback"},"Mode Zoom callback"),Object(r.b)("p",null,"The zooming directions can be configured by a ",Object(r.b)("a",{parentName:"p",href:"https://pepstock-org.github.io/Charba/3.3/org/pepstock/charba/client/zoom/callbacks/ModeCallback.html"},"callback")," at runtime, as following:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-java"},"ZoomOptions options = new ZoomOptions();\noptions.getZoom().setMode(new ModeCallback() {\n            \n    @Override\n    public InteractionAxis mode(IsChart chart) {\n        return InteractionAxis.Y;\n    }\n});\n")),Object(r.b)("h3",{id:"onprogress-zoom-callback"},"onProgress Zoom callback"),Object(r.b)("p",null,"The zoom element can catch events during zooming which can be consumed by ",Object(r.b)("a",{parentName:"p",href:"https://pepstock-org.github.io/Charba/3.3/org/pepstock/charba/client/zoom/callbacks/ProgressCallback.html"},"callback"),", as following:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-java"},"ZoomOptions options = new ZoomOptions();\noptions.getZoom().setProgressCallback(new ProgressCallback() {\n            \n    @Override\n    public void onProgress(IsChart chart, AbstractConfigurationItem item) {\n        // my logic \n    }\n});\n")),Object(r.b)("p",null,"The callback is receiving the chart instance and ",Object(r.b)("a",{parentName:"p",href:"https://pepstock-org.github.io/Charba/3.3/org/pepstock/charba/client/zoom/Zoom.html"},"Zoom")," instance."),Object(r.b)("h3",{id:"oncomplete-zoom-callback"},"onComplete Zoom callback"),Object(r.b)("p",null,"The zoom element can catch event when zooming is completed which can be consumed by ",Object(r.b)("a",{parentName:"p",href:"https://pepstock-org.github.io/Charba/3.3/org/pepstock/charba/client/zoom/callbacks/CompleteCallback.html"},"callback"),", as following:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-java"},"ZoomOptions options = new ZoomOptions();\noptions.getZoom().setCompleteCallback(new CompleteCallback() {\n            \n    @Override\n    public void onComplete(IsChart chart, AbstractConfigurationItem item) {\n        // my logic \n    }\n});\n")),Object(r.b)("p",null,"The callback is receiving the chart instance and ",Object(r.b)("a",{parentName:"p",href:"https://pepstock-org.github.io/Charba/3.3/org/pepstock/charba/client/zoom/Zoom.html"},"Zoom")," instance."),Object(r.b)("h2",{id:"range"},"Range"),Object(r.b)("p",null,"Both for pan and zoom element, you can set the minimum and maximum range of values to limit the action."),Object(r.b)("p",null,"The ",Object(r.b)("a",{parentName:"p",href:"https://pepstock-org.github.io/Charba/3.3/org/pepstock/charba/client/zoom/Range.html"},"Range")," object provides the methods to set ",Object(r.b)("inlineCode",{parentName:"p"},"X")," and ",Object(r.b)("inlineCode",{parentName:"p"},"Y"),"."),Object(r.b)("p",null,"The types of values depends on scale type used by chart, therefore there are the methods to set:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-java"},'ZoomOptions options = new ZoomOptions();\n// --------------------------------------\n// as double for linear and logarithmic cartesian and radial linear scales\n// --------------------------------------\noptions.getZoom().getRangeMin().setX(10D);\n\n// --------------------------------------\n// as String for category cartesian scale\n// --------------------------------------\noptions.getZoom().getRangeMin().setX("Myvalue");\n\n// --------------------------------------\n// as Date for time cartesian scale\n// --------------------------------------\noptions.getZoom().getRangeMin().setX(new Date());\n')),Object(r.b)("h2",{id:"resetting-zooming"},"Resetting zooming"),Object(r.b)("p",null,"You can programmatically reset the zoom to the default state by ",Object(r.b)("a",{parentName:"p",href:"https://pepstock-org.github.io/Charba/3.3/org/pepstock/charba/client/zoom/ZoomPlugin.html"},"ZoomPlugin"),", as following:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-java"},"// --------------------------------------\n// resets zoom on chart instance\n// --------------------------------------\nZoomPlugin.resetZoom(chart);\n")))}s.isMDXComponent=!0},209:function(e,t,n){"use strict";n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return u}));var a=n(0),o=n.n(a);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var b=o.a.createContext({}),p=function(e){var t=o.a.useContext(b),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=p(e.components);return o.a.createElement(b.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},g=o.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,l=e.parentName,b=c(e,["components","mdxType","originalType","parentName"]),s=p(n),g=a,u=s["".concat(l,".").concat(g)]||s[g]||m[g]||r;return n?o.a.createElement(u,i(i({ref:t},b),{},{components:n})):o.a.createElement(u,i({ref:t},b))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,l=new Array(r);l[0]=g;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var b=2;b<r;b++)l[b]=n[b];return o.a.createElement.apply(null,l)}return o.a.createElement.apply(null,n)}g.displayName="MDXCreateElement"},210:function(e,t,n){"use strict";n.d(t,"b",(function(){return r})),n.d(t,"a",(function(){return l}));var a=n(16),o=n(211);function r(){var e=Object(a.default)().siteConfig,t=(e=void 0===e?{}:e).baseUrl,n=void 0===t?"/":t,r=e.url;return{withBaseUrl:function(e,t){return function(e,t,n,a){var r=void 0===a?{}:a,l=r.forcePrependBaseUrl,i=void 0!==l&&l,c=r.absolute,b=void 0!==c&&c;if(!n)return n;if(n.startsWith("#"))return n;if(Object(o.b)(n))return n;if(i)return t+n;var p=n.startsWith(t)?n:t+n.replace(/^\//,"");return b?e+p:p}(r,n,e,t)}}}function l(e,t){return void 0===t&&(t={}),(0,r().withBaseUrl)(e,t)}},211:function(e,t,n){"use strict";function a(e){return!0===/^(\w*:|\/\/)/.test(e)}function o(e){return void 0!==e&&!a(e)}n.d(t,"b",(function(){return a})),n.d(t,"a",(function(){return o}))}}]);
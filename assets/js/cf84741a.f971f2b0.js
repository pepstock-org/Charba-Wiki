(window.webpackJsonp=window.webpackJsonp||[]).push([[114],{186:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return c})),a.d(t,"metadata",(function(){return i})),a.d(t,"toc",(function(){return p})),a.d(t,"default",(function(){return b}));var r=a(3),n=a(8),o=(a(0),a(213)),l=a(214),c={id:"Patterns",title:"Patterns",hide_title:!0,sidebar_label:"Patterns and tiles"},i={unversionedId:"coloring/Patterns",id:"coloring/Patterns",isDocsHomePage:!1,title:"Patterns",description:"Patterns",source:"@site/docs/coloring/Patterns.md",sourceDirName:"coloring",slug:"/coloring/Patterns",permalink:"/Charba-Wiki/docs/coloring/Patterns",version:"current",sidebar_label:"Patterns and tiles",frontMatter:{id:"Patterns",title:"Patterns",hide_title:!0,sidebar_label:"Patterns and tiles"},sidebar:"docs",previous:{title:"Colors",permalink:"/Charba-Wiki/docs/coloring/Colors"},next:{title:"Gradients",permalink:"/Charba-Wiki/docs/coloring/Gradients"}},p=[{value:"Patterns",id:"patterns",children:[]},{value:"Tiles",id:"tiles",children:[{value:"Image shape",id:"image-shape",children:[]},{value:"Character shape",id:"character-shape",children:[]},{value:"Point style shape",id:"point-style-shape",children:[]},{value:"Builder",id:"builder",children:[]}]}],s={toc:p};function b(e){var t=e.components,a=Object(n.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},s,a,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h2",{id:"patterns"},"Patterns"),Object(o.b)("p",null,"A pattern represents an opaque object, based on an image, that it can be used to fill or stroke properties of a dataset chart."),Object(o.b)("p",null,"Apart of the image, to create a pattern you could decide how to repeat the pattern's image. Possible values are:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},Object(o.b)("a",{parentName:"strong",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/dom/enums/Repetition.html#REPEAT"},"repeat"))," (both directions)"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},Object(o.b)("a",{parentName:"strong",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/dom/enums/Repetition.html#REPEAT_X"},"repeat-x"))," (horizontal only)"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},Object(o.b)("a",{parentName:"strong",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/dom/enums/Repetition.html#REPEAT_Y"},"repeat-y"))," (vertical only)"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},Object(o.b)("a",{parentName:"strong",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/dom/enums/Repetition.html#NO_REPEAT"},"no-repeat"))," (neither direction)")),Object(o.b)("p",null,"If repetition is not specified creating a pattern, a value of ",Object(o.b)("strong",{parentName:"p"},Object(o.b)("a",{parentName:"strong",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/dom/enums/Repetition.html#REPEAT"},"repeat"))," will be used."),Object(o.b)("p",null,"A pattern is an alternative option to configure a dataset by ",Object(o.b)("a",{parentName:"p",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/colors/Pattern.html"},"Pattern")," object, instead of using a color."),Object(o.b)("img",{src:Object(l.a)("/img/pattern.png")}),Object(o.b)("p",null,"A ",Object(o.b)("a",{parentName:"p",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/colors/Pattern.html"},"Pattern")," can be created only by a ",Object(o.b)("a",{parentName:"p",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/colors/PatternBuilder.html"},"patter builder")," in order to optimize the cache used for them. "),Object(o.b)("p",null,"For example, if you wanted to fill a dataset with a pattern from an image, you could do the following:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-java"},'// creates a dataset\nLineDataset dataset = new LineDataset();\n// converts a "ImageResource" in "Img" class\nImg img = ImagesHelper.toImg(Images.INSTANCE.pattern());\n// creates a pattern by the image     \nPattern pattern = PatternBuilder.create(img).build();\n// sets the pattern as background color of the dataset      \ndataset.setBackgroundColor(pattern);\n// fills the dataset\ndataset.setFill(Fill.origin);\n')),Object(o.b)("p",null,"where ",Object(o.b)("inlineCode",{parentName:"p"},"Images.INSTANCE.pattern()")," is a method of a ",Object(o.b)("a",{parentName:"p",href:"http://www.gwtproject.org/javadoc/latest/com/google/gwt/resources/client/ClientBundle.html"},"ClientBundle"),", where the image is inside the project and using the ",Object(o.b)("a",{parentName:"p",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/gwt/ImagesHelper.html"},"ImagesHelper")," can be cast of a ",Object(o.b)("a",{parentName:"p",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/dom/elements/Img.html"},"Img"),", as following:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-java"},'public interface Images extends ClientBundle {\n\n   Images INSTANCE = GWT.create(Images.class);\n\n   @Source("/images/crossline-lines.png")\n   ImageResource pattern();\n}\n')),Object(o.b)("p",null,"To avoid to have patterns without loaded images, it's suggested to prefetch the images at starting of application, leveraging on GWT ",Object(o.b)("a",{parentName:"p",href:"http://www.gwtproject.org/javadoc/latest/com/google/gwt/user/client/ui/Image.html#prefetch-com.google.gwt.safehtml.shared.SafeUri-"},"Image")," as following:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-java"},"// loads images\nImage.prefetch(Images.INSTANCE.pattern().getSafeUri());\n")),Object(o.b)("h2",{id:"tiles"},"Tiles"),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Charba")," provides a tile builders which can easily generate canvas or ",Object(o.b)("strong",{parentName:"p"},"Charba")," patterns with a set of shapes in order to use them in datasets, instead of colors."),Object(o.b)("img",{src:Object(l.a)("/img/tiles.png")}),Object(o.b)("p",null,"The main class to use this feature is ",Object(o.b)("a",{parentName:"p",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/colors/tiles/TilesFactory.html"},"TilesFactory")," which provides a set of methods to get a tile as canvas pattern or as ",Object(o.b)("strong",{parentName:"p"},"Charba")," pattern which can be used in the datasets."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-java"},'// creates a dataset\nDoughnutDataset dataset = chart.newDataset();\n// creates 4 tiles patterns for each data of the dataset\nPattern p1 = TilesFactory.createPattern(Shape.square, "#0000FF");\nPattern p2 = TilesFactory.createPattern(Shape.verticalZigzag, "#FFFFFF");\nPattern p3 = TilesFactory.createPattern(Shape.diagonal, "#FF0000");\nPattern p4 = TilesFactory.createPattern(Shape.ring, "#OOFFOO");\n// sets the patterns as background color fo dataset\ndataset.setBackgroundColor(p1, p2, p3, p4);\n')),Object(o.b)("p",null,"The tiles factory can also create canvas patterns to use wherever you want in your application:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-java"},'// creates a DOM canvas pattern\nCanvasPatternItem canvasPattern = TilesFactory.createTile(Shape.square, "#0000FF");\n')),Object(o.b)("p",null,"The tiles factory has got a default configuration which can be updated in order that new configuration can be used for all tiles."),Object(o.b)("p",null,"The complete configuration items are described by following table:"),Object(o.b)("table",null,Object(o.b)("thead",{parentName:"table"},Object(o.b)("tr",{parentName:"thead"},Object(o.b)("th",{parentName:"tr",align:"left"},"Name"),Object(o.b)("th",{parentName:"tr",align:"left"},"Type"),Object(o.b)("th",{parentName:"tr",align:"left"},"Default"),Object(o.b)("th",{parentName:"tr",align:"left"},"Description"))),Object(o.b)("tbody",{parentName:"table"},Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:"left"},"shape"),Object(o.b)("td",{parentName:"tr",align:"left"},Object(o.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/colors/tiles/Shape.html"},"Shape")),Object(o.b)("td",{parentName:"tr",align:"left"},"Shape.SQUARE"),Object(o.b)("td",{parentName:"tr",align:"left"},"the shape to apply on tile")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:"left"},"backgroundColor"),Object(o.b)("td",{parentName:"tr",align:"left"},"String - ",Object(o.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/colors/IsColor.html"},"IsColor")),Object(o.b)("td",{parentName:"tr",align:"left"},"rgba(100, 100, 100, 0.7) - ",Object(o.b)("span",{style:{backgroundColor:"rgba(100,100,100,0.7)",border:"1px solid"}},"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0","\xa0","\xa0")),Object(o.b)("td",{parentName:"tr",align:"left"},"the background color of tile")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:"left"},"shapeColor"),Object(o.b)("td",{parentName:"tr",align:"left"},"String - ",Object(o.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/colors/IsColor.html"},"IsColor")),Object(o.b)("td",{parentName:"tr",align:"left"},"rgba(255, 255, 255, 0.8) - ",Object(o.b)("span",{style:{backgroundColor:"rgba(255,255,255,0.8)",border:"1px solid"}},"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0","\xa0","\xa0")),Object(o.b)("td",{parentName:"tr",align:"left"},"the shape color on tile")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:"left"},"size"),Object(o.b)("td",{parentName:"tr",align:"left"},"int"),Object(o.b)("td",{parentName:"tr",align:"left"},"20"),Object(o.b)("td",{parentName:"tr",align:"left"},"the size of the tile (always a square). The minimum size for a tile is ",Object(o.b)("strong",{parentName:"td"},"10"),".")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:"left"},"lineCap"),Object(o.b)("td",{parentName:"tr",align:"left"},Object(o.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/enums/CapStyle.html"},"CapStyle")),Object(o.b)("td",{parentName:"tr",align:"left"},"CapStyle.ROUND"),Object(o.b)("td",{parentName:"tr",align:"left"},"determines the shape used to draw the end points of lines")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:"left"},"lineJoin"),Object(o.b)("td",{parentName:"tr",align:"left"},Object(o.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/enums/JoinStyle.html"},"JoinStyle")),Object(o.b)("td",{parentName:"tr",align:"left"},"JoinStyle.ROUND"),Object(o.b)("td",{parentName:"tr",align:"left"},"determines the shape used to join two line segments where they meet")))),Object(o.b)("p",null,"This is the ",Object(o.b)("strong",{parentName:"p"},Object(o.b)("a",{parentName:"strong",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/colors/tiles/Shape.html"},"list of shapes")),", available out-of-the-box:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"back slashed line"),Object(o.b)("li",{parentName:"ul"},"box"),Object(o.b)("li",{parentName:"ul"},"cross"),Object(o.b)("li",{parentName:"ul"},"cross dash"),Object(o.b)("li",{parentName:"ul"},"dash"),Object(o.b)("li",{parentName:"ul"},"diagonal"),Object(o.b)("li",{parentName:"ul"},"diamond"),Object(o.b)("li",{parentName:"ul"},"diamond box"),Object(o.b)("li",{parentName:"ul"},"disc"),Object(o.b)("li",{parentName:"ul"},"dot"),Object(o.b)("li",{parentName:"ul"},"dot dash"),Object(o.b)("li",{parentName:"ul"},"double diagonal"),Object(o.b)("li",{parentName:"ul"},"empty star"),Object(o.b)("li",{parentName:"ul"},"inverted diagonal"),Object(o.b)("li",{parentName:"ul"},"inverted double diagonal"),Object(o.b)("li",{parentName:"ul"},"inverted triangle"),Object(o.b)("li",{parentName:"ul"},"line"),Object(o.b)("li",{parentName:"ul"},"plus"),Object(o.b)("li",{parentName:"ul"},"ring"),Object(o.b)("li",{parentName:"ul"},"slashed line"),Object(o.b)("li",{parentName:"ul"},"solid"),Object(o.b)("li",{parentName:"ul"},"star"),Object(o.b)("li",{parentName:"ul"},"square"),Object(o.b)("li",{parentName:"ul"},"triangle"),Object(o.b)("li",{parentName:"ul"},"weave"),Object(o.b)("li",{parentName:"ul"},"zigzag"),Object(o.b)("li",{parentName:"ul"},"vertical line"),Object(o.b)("li",{parentName:"ul"},"vertical zigzag")),Object(o.b)("h3",{id:"image-shape"},"Image shape"),Object(o.b)("p",null,Object(o.b)("a",{parentName:"p",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/colors/tiles/ImageShape.html"},"ImageShape")," enables to use an image and apply (scaling it) to the tile. The vantage is that we can decide the background of the image if it has got a transparent background."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-java"},'ImageShape imageShape = new ImageShape(ImagesHelper.toImg(Images.INSTANCE.myImage()));\n...     \nPattern pattern = TilesFactory.createPattern(imageShape, "#990099");\n...\n')),Object(o.b)("img",{src:Object(l.a)("/img/tilesImages.png")}),Object(o.b)("h3",{id:"character-shape"},"Character shape"),Object(o.b)("p",null,Object(o.b)("a",{parentName:"p",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/colors/tiles/CharacterShape.html"},"CharacterShape")," enables to use a character (ONLY 1 otherwise you will get an exception) and apply to tile. "),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-java"},'// creates a custom shape\nCharacterShape charShape = new CharacterShape("m");\n// creates a tile by the custom shape\nPattern pattern = TilesFactory.createPattern(charShape, "#990099");\n')),Object(o.b)("img",{src:Object(l.a)("/img/tilesCharacter.png")}),Object(o.b)("h3",{id:"point-style-shape"},"Point style shape"),Object(o.b)("p",null,"It is also possible to use ",Object(o.b)("a",{parentName:"p",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/enums/PointStyle.html"},"PointStyle")," as shape for a tile."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-java"},'// creates a shape by a point style\nPattern pattern = TilesFactory.createPattern(PointStyle.CIRCLE, "#990099");\n')),Object(o.b)("img",{src:Object(l.a)("/img/tilesPointStyles.png")}),Object(o.b)("h3",{id:"builder"},"Builder"),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Charba")," provides a ",Object(o.b)("a",{parentName:"p",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/colors/tiles/TilesBuilder.html"},"TilesBuilder")," to create tiles using the ",Object(o.b)("strong",{parentName:"p"},"set")," methods in sequence and get a ",Object(o.b)("a",{parentName:"p",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/colors/Pattern.html"},"pattern")," or ",Object(o.b)("a",{parentName:"p",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/dom/elements/CanvasPatternItem.html"},"CanvasPatternItem")," at the end of configuration."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-java"},'// creates a CHARBA pattern\nPattern pattern = TilesBuilder.create().setShape(Shape.EMPTY_STAR).setBackgroundColor("#990099").asPattern();\n// creates a canvas pattern\nCanvasPatternItem canvasPattern = TilesBuilder.create().setShape(Shape.EMPTY_STAR).setBackgroundColor("#990099").asTile();\n')))}b.isMDXComponent=!0},213:function(e,t,a){"use strict";a.d(t,"a",(function(){return b})),a.d(t,"b",(function(){return m}));var r=a(0),n=a.n(r);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function c(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var p=n.a.createContext({}),s=function(e){var t=n.a.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):c(c({},t),e)),a},b=function(e){var t=s(e.components);return n.a.createElement(p.Provider,{value:t},e.children)},h={inlineCode:"code",wrapper:function(e){var t=e.children;return n.a.createElement(n.a.Fragment,{},t)}},g=n.a.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),b=s(a),g=r,m=b["".concat(l,".").concat(g)]||b[g]||h[g]||o;return a?n.a.createElement(m,c(c({ref:t},p),{},{components:a})):n.a.createElement(m,c({ref:t},p))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,l=new Array(o);l[0]=g;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c.mdxType="string"==typeof e?e:r,l[1]=c;for(var p=2;p<o;p++)l[p]=a[p];return n.a.createElement.apply(null,l)}return n.a.createElement.apply(null,a)}g.displayName="MDXCreateElement"},214:function(e,t,a){"use strict";a.d(t,"b",(function(){return o})),a.d(t,"a",(function(){return l}));var r=a(16),n=a(215);function o(){var e=Object(r.default)().siteConfig,t=(e=void 0===e?{}:e).baseUrl,a=void 0===t?"/":t,o=e.url;return{withBaseUrl:function(e,t){return function(e,t,a,r){var o=void 0===r?{}:r,l=o.forcePrependBaseUrl,c=void 0!==l&&l,i=o.absolute,p=void 0!==i&&i;if(!a)return a;if(a.startsWith("#"))return a;if(Object(n.b)(a))return a;if(c)return t+a;var s=a.startsWith(t)?a:t+a.replace(/^\//,"");return p?e+s:s}(o,a,e,t)}}}function l(e,t){return void 0===t&&(t={}),(0,o().withBaseUrl)(e,t)}},215:function(e,t,a){"use strict";function r(e){return!0===/^(\w*:|\/\/)/.test(e)}function n(e){return void 0!==e&&!r(e)}a.d(t,"b",(function(){return r})),a.d(t,"a",(function(){return n}))}}]);
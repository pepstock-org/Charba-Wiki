(window.webpackJsonp=window.webpackJsonp||[]).push([[117],{186:function(t,e,a){"use strict";a.r(e),a.d(e,"frontMatter",(function(){return i})),a.d(e,"metadata",(function(){return b})),a.d(e,"toc",(function(){return c})),a.d(e,"default",(function(){return s}));var r=a(3),n=a(8),o=(a(0),a(209)),l=a(210),i={id:"ChartBar",title:"Bar chart",hide_title:!0,sidebar_label:"Bar"},b={unversionedId:"ChartBar",id:"version-3.3/ChartBar",isDocsHomePage:!1,title:"Bar chart",description:"Bar chart",source:"@site/versioned_docs/version-3.3/ChartBar.md",sourceDirName:".",slug:"/ChartBar",permalink:"/Charba-Wiki/docs/3.3/ChartBar",version:"3.3",sidebar_label:"Bar",frontMatter:{id:"ChartBar",title:"Bar chart",hide_title:!0,sidebar_label:"Bar"},sidebar:"version-3.3/docs",previous:{title:"Chart introduction",permalink:"/Charba-Wiki/docs/3.3/Charts"},next:{title:"Horizontal bar chart",permalink:"/Charba-Wiki/docs/3.3/ChartHorizontalBar"}},c=[{value:"Bar chart",id:"bar-chart",children:[]},{value:"Dataset",id:"dataset",children:[]},{value:"Data structure",id:"data-structure",children:[]},{value:"Options",id:"options",children:[]},{value:"Scriptable options for dataset",id:"scriptable-options-for-dataset",children:[]}],p={toc:c};function s(t){var e=t.components,a=Object(n.a)(t,["components"]);return Object(o.b)("wrapper",Object(r.a)({},p,a,{components:e,mdxType:"MDXLayout"}),Object(o.b)("h2",{id:"bar-chart"},"Bar chart"),Object(o.b)("p",null,"(quoted from ",Object(o.b)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Bar_chart"},"Bar chart")," definition in Wikipedia)"),Object(o.b)("p",null,"A bar chart is a chart that presents categorical data with rectangular bars with heights or lengths proportional to the values that they represent. The bars can be plotted vertically or horizontally."),Object(o.b)("p",null,"A bar chart shows comparisons among discrete categories. One axis of the chart shows the specific categories being compared, and the other axis represents a measured value. Some bar charts present bars clustered in groups of more than one, showing the values of more than one measured variable. "),Object(o.b)("img",{src:Object(l.a)("/img/bar.png")}),Object(o.b)("h2",{id:"dataset"},"Dataset"),Object(o.b)("p",null,"The bar chart allows a number of properties to be specified for each ",Object(o.b)("a",{parentName:"p",href:"https://pepstock-org.github.io/Charba/3.3/org/pepstock/charba/client/data/BarDataset.html"},"bar dataset"),". These are used to set display properties for a specific dataset."),Object(o.b)("p",null,"The following are the attributes that you can set:"),Object(o.b)("table",null,Object(o.b)("thead",{parentName:"table"},Object(o.b)("tr",{parentName:"thead"},Object(o.b)("th",{parentName:"tr",align:null},"Name"),Object(o.b)("th",{parentName:"tr",align:null},"Type"),Object(o.b)("th",{parentName:"tr",align:null},"Callback"),Object(o.b)("th",{parentName:"tr",align:null},"Description"))),Object(o.b)("tbody",{parentName:"table"},Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"backgroundColor"),Object(o.b)("td",{parentName:"tr",align:null},"String[] - ",Object(o.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/3.3/org/pepstock/charba/client/colors/IsColor.html"},"IsColor"),"[] - ",Object(o.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/3.3/org/pepstock/charba/client/colors/Pattern.html"},"Pattern"),"[] - ",Object(o.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/3.3/org/pepstock/charba/client/colors/Gradient.html"},"Gradient"),"[]"),Object(o.b)("td",{parentName:"tr",align:null},"Yes"),Object(o.b)("td",{parentName:"tr",align:null},"The fill color/pattern of the bar")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"borderColor"),Object(o.b)("td",{parentName:"tr",align:null},"String[] - ",Object(o.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/3.3/org/pepstock/charba/client/colors/IsColor.html"},"IsColor"),"[] - ",Object(o.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/3.3/org/pepstock/charba/client/colors/Gradient.html"},"Gradient"),"[]"),Object(o.b)("td",{parentName:"tr",align:null},"Yes"),Object(o.b)("td",{parentName:"tr",align:null},"The color of the bar border.")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"borderSkipped"),Object(o.b)("td",{parentName:"tr",align:null},Object(o.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/3.3/org/pepstock/charba/client/enums/BorderSkipped.html"},"BorderSkipped")),Object(o.b)("td",{parentName:"tr",align:null},"Yes"),Object(o.b)("td",{parentName:"tr",align:null},"Which edge to skip drawing the border for.")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"borderWidth"),Object(o.b)("td",{parentName:"tr",align:null},"int[] - ",Object(o.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/3.3/org/pepstock/charba/client/data/BarBorderWidth.html"},"BarBorderWidth")),Object(o.b)("td",{parentName:"tr",align:null},"Yes"),Object(o.b)("td",{parentName:"tr",align:null},"The stroke width of the bar in pixels.")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"hidden"),Object(o.b)("td",{parentName:"tr",align:null},"boolean"),Object(o.b)("td",{parentName:"tr",align:null},"-"),Object(o.b)("td",{parentName:"tr",align:null},"if the dataset will appear or not.")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"hoverBackgroundColor"),Object(o.b)("td",{parentName:"tr",align:null},"String[] - ",Object(o.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/3.3/org/pepstock/charba/client/colors/IsColor.html"},"IsColor"),"[] - ",Object(o.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/3.3/org/pepstock/charba/client/colors/Pattern.html"},"Pattern"),"[] - ",Object(o.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/3.3/org/pepstock/charba/client/colors/Gradient.html"},"Gradient"),"[]"),Object(o.b)("td",{parentName:"tr",align:null},"-"),Object(o.b)("td",{parentName:"tr",align:null},"The fill color/pattern of the bars when hovered.")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"hoverBorderColor"),Object(o.b)("td",{parentName:"tr",align:null},"String[] - ",Object(o.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/3.3/org/pepstock/charba/client/colors/IsColor.html"},"IsColor"),"[] - ",Object(o.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/3.3/org/pepstock/charba/client/colors/Gradient.html"},"Gradient"),"[]"),Object(o.b)("td",{parentName:"tr",align:null},"-"),Object(o.b)("td",{parentName:"tr",align:null},"The stroke color of the bars when hovered.")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"hoverBorderWidth"),Object(o.b)("td",{parentName:"tr",align:null},"int[]"),Object(o.b)("td",{parentName:"tr",align:null},"-"),Object(o.b)("td",{parentName:"tr",align:null},"The stroke width of the bars when hovered.")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"label"),Object(o.b)("td",{parentName:"tr",align:null},"String"),Object(o.b)("td",{parentName:"tr",align:null},"-"),Object(o.b)("td",{parentName:"tr",align:null},"The label for the dataset which appears in the legend and tooltips.")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"order"),Object(o.b)("td",{parentName:"tr",align:null},"int"),Object(o.b)("td",{parentName:"tr",align:null},"-"),Object(o.b)("td",{parentName:"tr",align:null},"The drawing order of dataset. Also affects order for stacking, tooltip, and legend. Default is 0.")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"type"),Object(o.b)("td",{parentName:"tr",align:null},Object(o.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/3.3/org/pepstock/charba/client/Type.html"},"Type")),Object(o.b)("td",{parentName:"tr",align:null},"-"),Object(o.b)("td",{parentName:"tr",align:null},"The type of dataset based on type of chart.")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"xAxisID"),Object(o.b)("td",{parentName:"tr",align:null},"String"),Object(o.b)("td",{parentName:"tr",align:null},"-"),Object(o.b)("td",{parentName:"tr",align:null},"The ID of the x axis to plot this dataset on. If not specified, this defaults to the ID of the first found x axis. See ",Object(o.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/3.3/org/pepstock/charba/client/options/Scales.html#DEFAULT_X_AXIS_ID"},"Scales")," object.")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"yAxisID"),Object(o.b)("td",{parentName:"tr",align:null},"String"),Object(o.b)("td",{parentName:"tr",align:null},"-"),Object(o.b)("td",{parentName:"tr",align:null},"The ID of the y axis to plot this dataset on. If not specified, this defaults to the ID of the first found y axis. See ",Object(o.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/3.3/org/pepstock/charba/client/options/Scales.html#DEFAULT_Y_AXIS_ID"},"Scales")," object.")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"barPercentage"),Object(o.b)("td",{parentName:"tr",align:null},"double"),Object(o.b)("td",{parentName:"tr",align:null},"0.9"),Object(o.b)("td",{parentName:"tr",align:null},"The percent (0-1) of the available width each bar should be within the category width. 1.0 will take the whole category width and put the bars right next to each other.")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"barThickness"),Object(o.b)("td",{parentName:"tr",align:null},"int"),Object(o.b)("td",{parentName:"tr",align:null},"0"),Object(o.b)("td",{parentName:"tr",align:null},"The width of each bar in pixels.")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"categoryPercentage"),Object(o.b)("td",{parentName:"tr",align:null},"double"),Object(o.b)("td",{parentName:"tr",align:null},"0.8"),Object(o.b)("td",{parentName:"tr",align:null},"The percent (0-1) of the available width each category should be within the sample width.")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"maxBarThickness"),Object(o.b)("td",{parentName:"tr",align:null},"int"),Object(o.b)("td",{parentName:"tr",align:null},"0"),Object(o.b)("td",{parentName:"tr",align:null},"The maximum bar thickness, to ensure that bars are not sized thicker than this.")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"minBarLength"),Object(o.b)("td",{parentName:"tr",align:null},"int"),Object(o.b)("td",{parentName:"tr",align:null},"0"),Object(o.b)("td",{parentName:"tr",align:null},"Set this to ensure that bars have a minimum length in pixels.")))),Object(o.b)("p",null,"Every chart has got a method to create a typed dataset accordingly with the chart type. The dataset can be also created instantiating the constructor."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-java"},"BarChart chart = new BarChart();\n// for GWT widget\n// BarChartWidget chart = new BarChartWidget();\nBarDataset dataset = chart.newDataset();\n...\n...\nBarDataset datasetNew = new BarDataset();\n...\nchart.getData().setDatasets(dataset, datasetNew);\n")),Object(o.b)("h2",{id:"data-structure"},"Data structure"),Object(o.b)("p",null,"The data of a dataset for a bar chart can be passed in two formats."),Object(o.b)("h4",{id:"data-as-doubles"},"Data as doubles"),Object(o.b)("p",null,"When the data is an array or list of doubles, the x axis is generally a category. The points are placed onto the axis using their position in the array. When a bar chart is created with a category axis, the ",Object(o.b)("a",{parentName:"p",href:"https://pepstock-org.github.io/Charba/3.3/org/pepstock/charba/client/data/Data.html#setLabels-java.lang.String...-"},"labels property of the data object")," must be specified."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-java"},"...\ndataset.setData(1,2,3,4,6);\n...\nList<Double> list = new LinkedList<>();\nlist.add(1);\nlist.add(2);\nlist.add(3);\n....\ndataset.setData(list);\n")),Object(o.b)("h4",{id:"data-as-datapoint"},"Data as DataPoint"),Object(o.b)("p",null,"You can also specify the dataset when using the time series charts. Each data point is specified using an object containing ",Object(o.b)("inlineCode",{parentName:"p"},"y")," and ",Object(o.b)("inlineCode",{parentName:"p"},"x")," (as time type) properties for time series."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-java"},"...\nDataPoint dp1 = new DataPoint();\ndp1.setY(10);\ndp1.setX(new Date());\n\nDataPoint dp2 = new DataPoint();\ndp2.setY(30);\ndp2.setX(new Date());\n\ndataset.setDataPoint(dp1, dp2);\n...\n")),Object(o.b)("h4",{id:"floating-bars"},"Floating bars"),Object(o.b)("p",null,"You can also specify the dataset for a bar chart as list of floating bar data or by an array of arrays of doubles. This will force rendering of bars with the start and the end point of a bar respectively."),Object(o.b)("img",{src:Object(l.a)("/img/floatingBar.png")}),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-java"},"...\n// set into constructor\nFloatingData fd1 = new FloatingData(10, 30);\n// set by method to update values\nFloatingData fd2 = new FloatingData();\nfd2.setValues(-10, 60)\n\ndataset.setFloatingData(fd1, fd2);\n...\n")),Object(o.b)("h2",{id:"options"},"Options"),Object(o.b)("p",null,"The bar chart defines specific ",Object(o.b)("a",{parentName:"p",href:"https://pepstock-org.github.io/Charba/3.3/org/pepstock/charba/client/configuration/BarOptions.html"},"options implementation")," to be configured. These options are merged with the global chart configuration options to form the options passed to the chart."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-java"},"BarChart chart = new BarChart();\n// for GWT widget\n// BarChartWidget chart = new BarChartWidget();\nBarOptions options = chart.getOptions();\n")),Object(o.b)("h2",{id:"scriptable-options-for-dataset"},"Scriptable options for dataset"),Object(o.b)("p",null,"Scriptable options at dataset level accept a callback which is called for each of the underlying data values. See more details in ",Object(o.b)("a",{parentName:"p",href:"Charts#callbacks-on-datasets-options"},"charts definition")," session. "),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-java"},"BarChart chart = new BarChart();\n// for GWT widget\n// BarChartWidget chart = new BarChartWidget();\nBarDataset dataset = chart.newDataset();\n\ndataset.setBackgroundColor(new BackgroundColorCallback() {\n\n   @Override\n   public IsColor invoke(IsChart chart, ScriptableContext context) {\n      // logic\n      return color;\n   }\n});\ndataset.setBorderColor(new BorderColorCallback() {\n\n   @Override\n   public IsColor invoke(IsChart chart, ScriptableContext context) {\n      // logic\n      return color;\n   }\n});\n\ndataset.setBorderWidth(new BorderWidthCallback() {\n            \n    @Override\n    public Integer invoke(IsChart chart, ScriptableContext context) {\n        // logic\n        return borderWidth;\n    }\n});\ndataset.setBorderSkipped(new BorderSkippedCallback() {\n            \n    @Override\n    public BorderSkipped invoke(IsChart chart, ScriptableContext context) {\n        // logic\n        return borderSkipped;\n    }\n});\n")),Object(o.b)("p",null,"The ",Object(o.b)("a",{parentName:"p",href:"https://pepstock-org.github.io/Charba/3.3/org/pepstock/charba/client/callbacks/BackgroundColorCallback.html"},"backgroundColor")," callback can provide one of the following object types:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",{parentName:"li",href:"https://pepstock-org.github.io/Charba/3.3/org/pepstock/charba/client/colors/Pattern.html"},"Pattern")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",{parentName:"li",href:"https://pepstock-org.github.io/Charba/3.3/org/pepstock/charba/client/colors/Gradient.html"},"Gradient")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",{parentName:"li",href:"https://pepstock-org.github.io/Charba/3.3/org/pepstock/charba/client/dom/elements/CanvasPatternItem.html"},"CanvasPatternItem")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",{parentName:"li",href:"https://pepstock-org.github.io/Charba/3.3/org/pepstock/charba/client/dom/elements/CanvasGradientItem.html"},"CanvasGradientItem"))),Object(o.b)("p",null,"The ",Object(o.b)("a",{parentName:"p",href:"https://pepstock-org.github.io/Charba/3.3/org/pepstock/charba/client/callbacks/BorderColorCallback.html"},"borderColor")," callback can provide one of the following object types:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",{parentName:"li",href:"https://pepstock-org.github.io/Charba/3.3/org/pepstock/charba/client/colors/Gradient.html"},"Gradient")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",{parentName:"li",href:"https://pepstock-org.github.io/Charba/3.3/org/pepstock/charba/client/dom/elements/CanvasGradientItem.html"},"CanvasGradientItem"))))}s.isMDXComponent=!0},209:function(t,e,a){"use strict";a.d(e,"a",(function(){return s})),a.d(e,"b",(function(){return u}));var r=a(0),n=a.n(r);function o(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function l(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,r)}return a}function i(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?l(Object(a),!0).forEach((function(e){o(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function b(t,e){if(null==t)return{};var a,r,n=function(t,e){if(null==t)return{};var a,r,n={},o=Object.keys(t);for(r=0;r<o.length;r++)a=o[r],e.indexOf(a)>=0||(n[a]=t[a]);return n}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(r=0;r<o.length;r++)a=o[r],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(n[a]=t[a])}return n}var c=n.a.createContext({}),p=function(t){var e=n.a.useContext(c),a=e;return t&&(a="function"==typeof t?t(e):i(i({},e),t)),a},s=function(t){var e=p(t.components);return n.a.createElement(c.Provider,{value:e},t.children)},h={inlineCode:"code",wrapper:function(t){var e=t.children;return n.a.createElement(n.a.Fragment,{},e)}},d=n.a.forwardRef((function(t,e){var a=t.components,r=t.mdxType,o=t.originalType,l=t.parentName,c=b(t,["components","mdxType","originalType","parentName"]),s=p(a),d=r,u=s["".concat(l,".").concat(d)]||s[d]||h[d]||o;return a?n.a.createElement(u,i(i({ref:e},c),{},{components:a})):n.a.createElement(u,i({ref:e},c))}));function u(t,e){var a=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var o=a.length,l=new Array(o);l[0]=d;var i={};for(var b in e)hasOwnProperty.call(e,b)&&(i[b]=e[b]);i.originalType=t,i.mdxType="string"==typeof t?t:r,l[1]=i;for(var c=2;c<o;c++)l[c]=a[c];return n.a.createElement.apply(null,l)}return n.a.createElement.apply(null,a)}d.displayName="MDXCreateElement"},210:function(t,e,a){"use strict";a.d(e,"b",(function(){return o})),a.d(e,"a",(function(){return l}));var r=a(16),n=a(211);function o(){var t=Object(r.default)().siteConfig,e=(t=void 0===t?{}:t).baseUrl,a=void 0===e?"/":e,o=t.url;return{withBaseUrl:function(t,e){return function(t,e,a,r){var o=void 0===r?{}:r,l=o.forcePrependBaseUrl,i=void 0!==l&&l,b=o.absolute,c=void 0!==b&&b;if(!a)return a;if(a.startsWith("#"))return a;if(Object(n.b)(a))return a;if(i)return e+a;var p=a.startsWith(e)?a:e+a.replace(/^\//,"");return c?t+p:p}(o,a,t,e)}}}function l(t,e){return void 0===e&&(e={}),(0,o().withBaseUrl)(t,e)}},211:function(t,e,a){"use strict";function r(t){return!0===/^(\w*:|\/\/)/.test(t)}function n(t){return void 0!==t&&!r(t)}a.d(e,"b",(function(){return r})),a.d(e,"a",(function(){return n}))}}]);
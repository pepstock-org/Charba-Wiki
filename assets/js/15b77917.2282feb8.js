(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{209:function(e,t,a){"use strict";a.d(t,"a",(function(){return s})),a.d(t,"b",(function(){return m}));var r=a(0),n=a.n(r);function c(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function b(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){c(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},c=Object.keys(e);for(r=0;r<c.length;r++)a=c[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)a=c[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var i=n.a.createContext({}),p=function(e){var t=n.a.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):b(b({},t),e)),a},s=function(e){var t=p(e.components);return n.a.createElement(i.Provider,{value:t},e.children)},h={inlineCode:"code",wrapper:function(e){var t=e.children;return n.a.createElement(n.a.Fragment,{},t)}},d=n.a.forwardRef((function(e,t){var a=e.components,r=e.mdxType,c=e.originalType,o=e.parentName,i=l(e,["components","mdxType","originalType","parentName"]),s=p(a),d=r,m=s["".concat(o,".").concat(d)]||s[d]||h[d]||c;return a?n.a.createElement(m,b(b({ref:t},i),{},{components:a})):n.a.createElement(m,b({ref:t},i))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var c=a.length,o=new Array(c);o[0]=d;var b={};for(var l in t)hasOwnProperty.call(t,l)&&(b[l]=t[l]);b.originalType=e,b.mdxType="string"==typeof e?e:r,o[1]=b;for(var i=2;i<c;i++)o[i]=a[i];return n.a.createElement.apply(null,o)}return n.a.createElement.apply(null,a)}d.displayName="MDXCreateElement"},210:function(e,t,a){"use strict";a.d(t,"b",(function(){return c})),a.d(t,"a",(function(){return o}));var r=a(16),n=a(211);function c(){var e=Object(r.default)().siteConfig,t=(e=void 0===e?{}:e).baseUrl,a=void 0===t?"/":t,c=e.url;return{withBaseUrl:function(e,t){return function(e,t,a,r){var c=void 0===r?{}:r,o=c.forcePrependBaseUrl,b=void 0!==o&&o,l=c.absolute,i=void 0!==l&&l;if(!a)return a;if(a.startsWith("#"))return a;if(Object(n.b)(a))return a;if(b)return t+a;var p=a.startsWith(t)?a:t+a.replace(/^\//,"");return i?e+p:p}(c,a,e,t)}}}function o(e,t){return void 0===t&&(t={}),(0,c().withBaseUrl)(e,t)}},211:function(e,t,a){"use strict";function r(e){return!0===/^(\w*:|\/\/)/.test(e)}function n(e){return void 0!==e&&!r(e)}a.d(t,"b",(function(){return r})),a.d(t,"a",(function(){return n}))},78:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return b})),a.d(t,"metadata",(function(){return l})),a.d(t,"toc",(function(){return i})),a.d(t,"default",(function(){return s}));var r=a(3),n=a(8),c=(a(0),a(209)),o=a(210),b={id:"ChartMeter",title:"Meter chart",hide_title:!0,sidebar_label:"Meter"},l={unversionedId:"charts/ChartMeter",id:"charts/ChartMeter",isDocsHomePage:!1,title:"Meter chart",description:"Meter chart",source:"@site/docs/charts/Meter.md",sourceDirName:"charts",slug:"/charts/ChartMeter",permalink:"/Charba-Wiki/docs/charts/ChartMeter",version:"current",sidebar_label:"Meter",frontMatter:{id:"ChartMeter",title:"Meter chart",hide_title:!0,sidebar_label:"Meter"},sidebar:"docs",previous:{title:"Time series chart",permalink:"/Charba-Wiki/docs/charts/ChartTimeSeries"},next:{title:"Gauge chart",permalink:"/Charba-Wiki/docs/charts/ChartGauge"}},i=[{value:"Meter chart",id:"meter-chart",children:[]},{value:"Dataset",id:"dataset",children:[]},{value:"Data structure",id:"data-structure",children:[]},{value:"Options",id:"options",children:[]},{value:"Scriptable",id:"scriptable",children:[{value:"Formatting",id:"formatting",children:[]},{value:"Font coloring",id:"font-coloring",children:[]}]}],p={toc:i};function s(e){var t=e.components,a=Object(n.a)(e,["components"]);return Object(c.b)("wrapper",Object(r.a)({},p,a,{components:t,mdxType:"MDXLayout"}),Object(c.b)("h2",{id:"meter-chart"},"Meter chart"),Object(c.b)("p",null,"A ",Object(c.b)("a",{parentName:"p",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/impl/charts/MeterChart.html"},"meter chart")," is ",Object(c.b)("strong",{parentName:"p"},"Charba")," extension of ",Object(c.b)("strong",{parentName:"p"},Object(c.b)("a",{parentName:"strong",href:"ChartDoughnut"},"doughnut chart")),", by a ",Object(c.b)("a",{parentName:"p",href:"../Controllers"},"controller")," implementation."),Object(c.b)("p",null,"The meter charts are divided in the 2 segments, the arc of each segment shows the proportional value of data."),Object(c.b)("img",{src:Object(o.a)("/img/meter.png")}),Object(c.b)("p",null,"Programmatically, you could use a meter chart as following:"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-java"},"// creates the chart    \nMeterChart chart = new MeterChart();\n// adds to DOM\ncomponent.add(chart);\n...\n// example for Elemental2\n// gets the chart instance as DOM element\nElement element = chart.getChartElement().as();\n// adds to DOM\nDomGlobal.document.body.appendChild(element);\n")),Object(c.b)("p",null,"By ",Object(c.b)("a",{parentName:"p",href:"http://www.gwtproject.org/doc/latest/DevGuideUiBinder.html"},"UIBinder")," (",Object(c.b)("strong",{parentName:"p"},"ONLY for GWT"),"), you could use a meter chart as following:"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-xml"},'<ui:UiBinder xmlns:ui="urn:ui:com.google.gwt.uibinder"\n   xmlns:g="urn:import:com.google.gwt.user.client.ui"\n   xmlns:c="urn:import:org.pepstock.charba.client.gwt.widgets">\n\n   <g:HTMLPanel  width="100%">\n      ....\n      <c:MeterChartWidget ui:field="chart"/>\n      ...\n   </g:HTMLPanel>\n</ui:UiBinder> \n')),Object(c.b)("h2",{id:"dataset"},"Dataset"),Object(c.b)("p",null,"The meter chart allows a number of properties to be specified for the ",Object(c.b)("a",{parentName:"p",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/impl/charts/MeterDataset.html"},"meter dataset"),"."),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-java"},"// creates the chart\nMeterChart chart = new MeterChart();\n// creates the dataset\nMeterDataset dataset = chart.newDataset();\n// sets the value\ndataset.setValue(90.5D);\n// sets the dataset to the chart\nchart.getData().setDatasets(dataset);\n")),Object(c.b)("p",null,"See ",Object(c.b)("strong",{parentName:"p"},Object(c.b)("a",{parentName:"strong",href:"ChartDoughnut#dataset"},"doughnut dataset"))," configuration how to configure the meter dataset, in addition of following options:"),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",{parentName:"tr",align:"left"},"Name"),Object(c.b)("th",{parentName:"tr",align:"left"},"Type"),Object(c.b)("th",{parentName:"tr",align:"left"},"Default"),Object(c.b)("th",{parentName:"tr",align:"left"},"Description"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:"left"},"color"),Object(c.b)("td",{parentName:"tr",align:"left"},"String[] - ",Object(c.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/colors/IsColor.html"},"IsColor"),"[]"),Object(c.b)("td",{parentName:"tr",align:"left"},"rgb(140,214,16) - ",Object(c.b)("span",{style:{backgroundColor:"rgb(140,214,16)",border:"1px solid"}},"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0","\xa0","\xa0")),Object(c.b)("td",{parentName:"tr",align:"left"},"The color to fill the segment of the chart which represents the value.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:"left"},"emptyColor"),Object(c.b)("td",{parentName:"tr",align:"left"},"String[] - ",Object(c.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/colors/IsColor.html"},"IsColor"),"[]"),Object(c.b)("td",{parentName:"tr",align:"left"},"rgb(234,234,234) - ",Object(c.b)("span",{style:{backgroundColor:"rgb(234,234,234)",border:"1px solid"}},"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0","\xa0","\xa0")),Object(c.b)("td",{parentName:"tr",align:"left"},"The color to fill the segment of the chart which represents the empty part.")))),Object(c.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(c.b)("div",{parentName:"div",className:"admonition-heading"},Object(c.b)("h5",{parentName:"div"},Object(c.b)("span",{parentName:"h5",className:"admonition-icon"},Object(c.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(c.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),Object(c.b)("div",{parentName:"div",className:"admonition-content"},Object(c.b)("p",{parentName:"div"},"A meter chart can have ",Object(c.b)("strong",{parentName:"p"},"ONLY")," 1 dataset.",Object(c.b)("br",null)))),Object(c.b)("p",null,"The dataset can be created instantiating the constructor, passing the maximum value of chart."),Object(c.b)("p",null,"The default value of maximum value is ",Object(c.b)("strong",{parentName:"p"},"100"),"."),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-java"},"// sets max value\nint maxValue = 200;\n// creates the chart\nMeterChart chart = new MeterChart();\n// creates the dataset with new max value\nMeterDataset dataset = chart.newDataset(maxValue);\n// sets the value\ndataset.setValue(90.5D);\n// sets the dataset to the chart\nchart.getData().setDatasets(dataset);\n")),Object(c.b)("h2",{id:"data-structure"},"Data structure"),Object(c.b)("p",null,"The data of a dataset for a meter chart is specified as single value. "),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-java"},"// creates the dataset\nMeterDataset dataset = chart.newDataset();\n// sets the value\ndataset.setValue(90.5D);\n")),Object(c.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(c.b)("div",{parentName:"div",className:"admonition-heading"},Object(c.b)("h5",{parentName:"div"},Object(c.b)("span",{parentName:"h5",className:"admonition-icon"},Object(c.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(c.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),Object(c.b)("div",{parentName:"div",className:"admonition-content"},Object(c.b)("p",{parentName:"div"},"The ",Object(c.b)("inlineCode",{parentName:"p"},"setData")," methods are available, inherited by a doughnut dataset, but you can ",Object(c.b)("strong",{parentName:"p"},"NOT")," use them otherwise an exception will throw.",Object(c.b)("br",null),"Use ",Object(c.b)("inlineCode",{parentName:"p"},"setValue")," instead."))),Object(c.b)("h2",{id:"options"},"Options"),Object(c.b)("p",null,"The meter chart defines the following configuration options. It extends the ",Object(c.b)("a",{parentName:"p",href:"ChartDoughnut"},"doughnut options"),"."),Object(c.b)("p",null,"To set the options at chart level, you can get a typed object accordingly with the chart type."),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-java"},"// creates the chart\nMeterChart chart = new MeterChart();\n// gets options\nMeterOptions options = chart.getOptions();\n// sets options\noptions.setRender(Render.PERCENTAGE);\noptions.setPrecision(3);\n")),Object(c.b)("p",null,"See ",Object(c.b)("strong",{parentName:"p"},Object(c.b)("a",{parentName:"strong",href:"ChartDoughnut#options"},"doughnut chart"))," configuration how to configure the meter chart, in addition of following options:"),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",{parentName:"tr",align:"left"},"Name"),Object(c.b)("th",{parentName:"tr",align:"left"},"Type"),Object(c.b)("th",{parentName:"tr",align:"left"},"Default"),Object(c.b)("th",{parentName:"tr",align:"left"},"Description"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:"left"},"animated"),Object(c.b)("td",{parentName:"tr",align:"left"},"boolean"),Object(c.b)("td",{parentName:"tr",align:"left"},Object(c.b)("inlineCode",{parentName:"td"},"false")),Object(c.b)("td",{parentName:"tr",align:"left"},"If the rendered label will be shown based on the animation of chart.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:"left"},"autoFontSize"),Object(c.b)("td",{parentName:"tr",align:"left"},"boolean"),Object(c.b)("td",{parentName:"tr",align:"left"},Object(c.b)("inlineCode",{parentName:"td"},"true")),Object(c.b)("td",{parentName:"tr",align:"left"},"If ",Object(c.b)("inlineCode",{parentName:"td"},"true"),", the font size to applied to the rendered label is automatically calculated at runtime, otherwise uses the ",Object(c.b)("inlineCode",{parentName:"td"},"size")," property of the font.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:"left"},"cutoutPercentage"),Object(c.b)("td",{parentName:"tr",align:"left"},"String"),Object(c.b)("td",{parentName:"tr",align:"left"},Object(c.b)("inlineCode",{parentName:"td"},'"90%"')),Object(c.b)("td",{parentName:"tr",align:"left"},'Immutable property, always "90%".')),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:"left"},"circumference"),Object(c.b)("td",{parentName:"tr",align:"left"},"double"),Object(c.b)("td",{parentName:"tr",align:"left"},Object(c.b)("inlineCode",{parentName:"td"},"360")),Object(c.b)("td",{parentName:"tr",align:"left"},"Immutable property, always 360.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:"left"},"render"),Object(c.b)("td",{parentName:"tr",align:"left"},Object(c.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/enums/Render.html"},"Render")),Object(c.b)("td",{parentName:"tr",align:"left"},"Render.VALUE"),Object(c.b)("td",{parentName:"tr",align:"left"},"Determines which information must be rendered in the meter chart.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:"left"},"font"),Object(c.b)("td",{parentName:"tr",align:"left"},Object(c.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/options/Font.html"},"Font")),Object(c.b)("td",{parentName:"tr",align:"left"},"See description"),Object(c.b)("td",{parentName:"tr",align:"left"},"Font of rendered label. If ",Object(c.b)("inlineCode",{parentName:"td"},"autoFontSize")," is set to ",Object(c.b)("inlineCode",{parentName:"td"},"true"),", the ",Object(c.b)("inlineCode",{parentName:"td"},"size")," property is ignored because automatically calculated at runtime.",Object(c.b)("br",null),Object(c.b)("br",null),"The default value is the global font.",Object(c.b)("br",null),"See ",Object(c.b)("a",{parentName:"td",href:"../defaults/DefaultsCharts#font"},"Font"),".")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:"left"},"fontColor"),Object(c.b)("td",{parentName:"tr",align:"left"},Object(c.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/colors/IsColor.html"},"IsColor")),Object(c.b)("td",{parentName:"tr",align:"left"},"rgb(128, 128, 128) - ",Object(c.b)("span",{style:{backgroundColor:"rgb(128,128,128)",border:"1px solid"}},"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0","\xa0","\xa0")),Object(c.b)("td",{parentName:"tr",align:"left"},"Color of font color")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:"left"},"precision"),Object(c.b)("td",{parentName:"tr",align:"left"},"int"),Object(c.b)("td",{parentName:"tr",align:"left"},Object(c.b)("inlineCode",{parentName:"td"},"2")),Object(c.b)("td",{parentName:"tr",align:"left"},"The amount to decimals digits to apply to the value.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:"left"},"rotation"),Object(c.b)("td",{parentName:"tr",align:"left"},"double"),Object(c.b)("td",{parentName:"tr",align:"left"},Object(c.b)("inlineCode",{parentName:"td"},"0")),Object(c.b)("td",{parentName:"tr",align:"left"},"Immutable property, always 0.")))),Object(c.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(c.b)("div",{parentName:"div",className:"admonition-heading"},Object(c.b)("h5",{parentName:"div"},Object(c.b)("span",{parentName:"h5",className:"admonition-icon"},Object(c.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(c.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),Object(c.b)("div",{parentName:"div",className:"admonition-content"},Object(c.b)("p",{parentName:"div"},"The meter chart disables the legend, tooltips and animation components."))),Object(c.b)("h2",{id:"scriptable"},"Scriptable"),Object(c.b)("p",null,"Scriptable options in the configuration accept a callback which is called for each animation cycle."),Object(c.b)("p",null,"There are 2 options which can be defined as scriptable:"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"fontColor"),", to set the color of the label."),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"format"),", to set the value of the label.")),Object(c.b)("p",null,"The callbacks are getting the only 1 argument, the ",Object(c.b)("a",{parentName:"p",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/impl/charts/MeterContext.html"},"scriptable context")," which contains the context of the callback execution."),Object(c.b)("p",null,"The context object contains the following properties:"),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",{parentName:"tr",align:"left"},"Name"),Object(c.b)("th",{parentName:"tr",align:"left"},"Type"),Object(c.b)("th",{parentName:"tr",align:"left"},"Description"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:"left"},"attributes"),Object(c.b)("td",{parentName:"tr",align:"left"},Object(c.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/commons/NativeObjectContainer.html"},"NativeObjectContainer")),Object(c.b)("td",{parentName:"tr",align:"left"},"User object which you can store your options at runtime.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:"left"},"chart"),Object(c.b)("td",{parentName:"tr",align:"left"},Object(c.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/IsChart.html"},"IsChart")),Object(c.b)("td",{parentName:"tr",align:"left"},"Chart instance.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:"left"},"easing"),Object(c.b)("td",{parentName:"tr",align:"left"},"double"),Object(c.b)("td",{parentName:"tr",align:"left"},"The easing of drawing (between 0 and 1) for animation.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:"left"},"type"),Object(c.b)("td",{parentName:"tr",align:"left"},Object(c.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/items/ContextType.html"},"ContextType")),Object(c.b)("td",{parentName:"tr",align:"left"},"The type of the context. It can be ONLY ",Object(c.b)("inlineCode",{parentName:"td"},"ContextType.METER"),".")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:"left"},"value"),Object(c.b)("td",{parentName:"tr",align:"left"},"double"),Object(c.b)("td",{parentName:"tr",align:"left"},"The value of meter or gauge dataset.")))),Object(c.b)("h3",{id:"formatting"},"Formatting"),Object(c.b)("p",null,"In order to customize the value to show in the chart, you can implement a ",Object(c.b)("a",{parentName:"p",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/callbacks/MeterFormatCallback.html"},"MeterFormatCallback"),", as following:"),Object(c.b)("img",{src:Object(o.a)("/img/meterFormatting.png")}),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-java"},"// creates the chart\nMeterChart chart = new MeterChart();\n// sets the callback\nchart.getOptions().setFormatCallback(new MeterFormatCallback(){\n\n   @Override\n   public String invoke(MeterContext context){\n      // logic\n      return format;\n   }\n});\n")),Object(c.b)("h3",{id:"font-coloring"},"Font coloring"),Object(c.b)("p",null,"In order to customize the font color of the rendered label to show in the chart, you can implement a ",Object(c.b)("a",{parentName:"p",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/callbacks/ColorCallback.html"},"ColorCallback"),", as following:"),Object(c.b)("img",{src:Object(o.a)("/img/meterFontColoring.png")}),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-java"},"// creates the chart\nMeterChart chart = new MeterChart();\n// sets the callback\nchart.getOptions().setFontColor(new ColorCallback<MeterContext>(){\n\n   @Override\n   public IsColor invoke(MeterContext context){\n      // logic\n      return color;\n   }\n});\n")))}s.isMDXComponent=!0}}]);
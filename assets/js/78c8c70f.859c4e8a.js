(window.webpackJsonp=window.webpackJsonp||[]).push([[66],{135:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return o})),a.d(t,"metadata",(function(){return i})),a.d(t,"toc",(function(){return c})),a.d(t,"default",(function(){return s}));var n=a(3),l=a(8),r=(a(0),a(209)),b=a(210),o={id:"Labels",title:"Labels plugin",hide_title:!0,sidebar_label:"Labels"},i={unversionedId:"extensions/Labels",id:"extensions/Labels",isDocsHomePage:!1,title:"Labels plugin",description:"Labels plugin",source:"@site/docs/extensions/Labels.md",sourceDirName:"extensions",slug:"/extensions/Labels",permalink:"/Charba-Wiki/docs/extensions/Labels",version:"current",sidebar_label:"Labels",frontMatter:{id:"Labels",title:"Labels plugin",hide_title:!0,sidebar_label:"Labels"},sidebar:"docs",previous:{title:"DataLabels plugin",permalink:"/Charba-Wiki/docs/extensions/DataLabels"},next:{title:"Zoom plugin",permalink:"/Charba-Wiki/docs/extensions/Zoom"}},c=[{value:"Labels plugin",id:"labels-plugin",children:[]},{value:"Activation",id:"activation",children:[]},{value:"Configuration",id:"configuration",children:[]},{value:"Options",id:"options",children:[]},{value:"Scriptable",id:"scriptable",children:[{value:"Color",id:"color",children:[]},{value:"Font",id:"font",children:[]},{value:"Render",id:"render",children:[]}]},{value:"Options builder",id:"options-builder",children:[]}],p={toc:c};function s(e){var t=e.components,a=Object(l.a)(e,["components"]);return Object(r.b)("wrapper",Object(n.a)({},p,a,{components:t,mdxType:"MDXLayout"}),Object(r.b)("h2",{id:"labels-plugin"},"Labels plugin"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Charba")," provides out of the box the feature to enable ",Object(r.b)("a",{parentName:"p",href:"https://github.com/emn178/chartjs-plugin-labels"},"Labels")," which is a light weight plugin to display labels on pie, doughnut and polar area chart (former name was PieceLabel)."),Object(r.b)("img",{src:Object(b.a)("/img/labels.png")}),Object(r.b)("br",null),Object(r.b)("br",null),Object(r.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(r.b)("div",{parentName:"div",className:"admonition-heading"},Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",{parentName:"h5",className:"admonition-icon"},Object(r.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(r.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),Object(r.b)("div",{parentName:"div",className:"admonition-content"},Object(r.b)("p",{parentName:"div"},"The plugin has been heavily changed in order to be compliant with ",Object(r.b)("a",{parentName:"p",href:"http://www.chartjs.org/"},"Chart.JS")," version 3.x) in the ",Object(r.b)("strong",{parentName:"p"},"Charba")," ",Object(r.b)("a",{parentName:"p",href:"https://github.com/pepstock-org/Charba/blob/master/src/org/pepstock/charba/client/resources/js/chartjs-plugin-labels.js"},"project")," because the ",Object(r.b)("a",{parentName:"p",href:"https://github.com/emn178/chartjs-plugin-labels"},"original project")," is unmaintained."))),Object(r.b)("h2",{id:"activation"},"Activation"),Object(r.b)("p",null,"The labels plugin is injected directly in the document."),Object(r.b)("p",null,"The plugin ID is a constant everywhere available, ",Object(r.b)("inlineCode",{parentName:"p"},"LabelsPlugin.ID"),", in ",Object(r.b)("a",{parentName:"p",href:"https://www.pepstock.org/Charba/4.0/org/pepstock/charba/client/labels/LabelsPlugin.html"},"LabelsPlugin")," entry point."),Object(r.b)("p",null,"This plugin registers itself globally, meaning that once injected, all charts will display labels. In case you want it enabled only for a few charts, you can enable it as following:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-java"},"// --------------------------------------\n// enabling the plugin without any parameter\n// the plugin is NOT registered to all charts\n// --------------------------------------\nLabelsPlugin.enable();\n\n// --------------------------------------\n// enabling the plugin with `true` parameter\n// the plugin is registered to all charts\n// --------------------------------------\nLabelsPlugin.enable(true)\n")),Object(r.b)("p",null,"To activate the plugin in a specific chart, it's enough to provide the configuration options (see ",Object(r.b)("a",{parentName:"p",href:"#configuration"},"below"),") or enabling it by:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-java"},'// --------------------------------------\n// ENABLING the plugin to a chart instance \n// storing a plugin options \n// --------------------------------------\n// creates a plugin options\nLabelsOptions options = new LabelsOptions();\n// creates a label by "myLabel" id\nLabel label = options.createLabel("myLabel");\n// sets the render\nlabel.setRender(Render.LABEL);\n// stores the plugin options directly by the options\noptions.store(chart);\n\n// --------------------------------------\n// ENABLING the plugin to a chart instance \n// by a boolean using default plugin \n// options\n// --------------------------------------\nchart.getOptions().getPlugins().setEnabled(DataLabelsPlugin.ID, true);\n')),Object(r.b)("h2",{id:"configuration"},"Configuration"),Object(r.b)("p",null,"The plugin options can be changed at 2 different levels and are evaluated with the following priority:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"per chart by ",Object(r.b)("inlineCode",{parentName:"li"},"chart.getOptions().getPlugins().setOptions")," method"),Object(r.b)("li",{parentName:"ul"},"or globally by ",Object(r.b)("inlineCode",{parentName:"li"},"Defaults.get().getGlobal().getPlugins().setOptions")," method")),Object(r.b)("p",null,"The configuration ",Object(r.b)("a",{parentName:"p",href:"https://www.pepstock.org/Charba/4.0/org/pepstock/charba/client/labels/LabelsOptions.html"},"LabelsOptions")," class is the entry point of plugin configuration. "),Object(r.b)("p",null,"Every ",Object(r.b)("a",{parentName:"p",href:"https://www.pepstock.org/Charba/4.0/org/pepstock/charba/client/labels/Label.html"},"label")," configuration can be add to the ",Object(r.b)("a",{parentName:"p",href:"https://www.pepstock.org/Charba/4.0/org/pepstock/charba/client/labels/LabelsOptions.html"},"LabelsOptions"),", assigning a unique id."),Object(r.b)("p",null,"The id of a label configuration can be set by a string or by a specific class, ",Object(r.b)("a",{parentName:"p",href:"https://www.pepstock.org/Charba/4.0/org/pepstock/charba/client/labels/IsLabelId.html"},"IsLabelId"),"."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-java"},'// ------------------------\n// CONFIGURES the label by\n// IsLabelId id\n// ------------------------\n// creates a plugin options\nLabelsOptions options = new LabelsOptions();\n// creates label id\nIsLabelId labelId = IsLabelId.create("myLabel1");\n// creates and adds a label by "myLabel1" id\nLabel label = options.createLabel(labelId);\n// sets the render\nlabel.setRender(Render.PERCENTAGE);\n... // additional label configuration\n// stores the plugin options directly by the options\noptions.store();\n')),Object(r.b)("p",null,"The below example is showing how to create and add 2 labels (each one must have a unique id):"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-java"},'// ------------------------\n// CONFIGURES the multiple \n// labels\n// ------------------------\n// creates a plugin options\nLabelsOptions options = new LabelsOptions();\n// creates and adds a label by "myLabel1" id\nLabel label1 = options.createLabel(IsLabelId.create("myLabel1"));\n// sets the render\nlabel1.setRender(Render.LABEL);\n... // additional label configuration\n// creates and adds a label by "myLabel2" id\nLabel label2 = options.createLabel("myLabel2");\n// sets the render\nlabel2.setRender(new RenderCallback(){\n            \n    @Override\n    public String invoke(LabelsContext context){\n        return "$$ "+ (int)(context.getValue() * context.getPercentage() / 100);\n    }\n});\n... // additional label configuration\n// stores the plugin options directly by the options\noptions.store();\n')),Object(r.b)("img",{src:Object(b.a)("/img/labelsMultiple.png")}),Object(r.b)("p",null,"You can also change the default for all charts instances, as following:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-java"},'// creates a plugin options\nLabelsOptions options = new LabelsOptions();\n// creates a label by "myLabel" id\nLabel label = options.createLabel("myLabel");\n// sets the render\nlabel.setRender(Render.LABEL);\n\n// --------------------------------------\n// STORING plugin options\n// --------------------------------------\n// stores the plugin options by plugin ID\nDefaults.get().getGlobal().getPlugin().setOptions(LabelsPlugin.ID, options);\n// stores the plugin options without plugin ID\nDefaults.get().getGlobal().getPlugin().setOptions(options);\n// stores the plugin options directly by the options\noptions.store();\n')),Object(r.b)("p",null,"If you need to read the plugin options, there is the specific factory, ",Object(r.b)("a",{parentName:"p",href:"https://www.pepstock.org/Charba/4.0/org/pepstock/charba/client/labels/LabelsOptionsFactory.html"},"LabelsOptionsFactory")," as static reference inside the ",Object(r.b)("a",{parentName:"p",href:"https://www.pepstock.org/Charba/4.0/org/pepstock/charba/client/labels/LabelsPlugin.html"},"LabelsPlugin")," entry point which can be used to retrieve the options from chart as following:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-java"},"// gets options reference\nLabelsOptions options;\n\n// --------------------------------------\n// GETTING plugin options from chart\n// --------------------------------------\nif (chart.getOptions().getPlugin().hasOptions(LabelsPlugin.ID)){\n   // retrieves the plugin options by plugin ID\n   options = chart.getOptions().getPlugin().getOptions(LabelsPlugin.ID, LabelsPlugin.FACTORY);\n   //retrieves the plugin options without plugin ID\n   options = chart.getOptions().getPlugin().getOptions(LabelsPlugin.FACTORY);\n}\n")),Object(r.b)("p",null,"You can access to the configured labels configurations as following:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-java"},'// ------------------------\n// GETS the configured \n// labels\n// ------------------------\n// retrieves the plugin options by plugin ID\nLabelsOptions options = chart.getOptions().getPlugin().getOptions(LabelsPlugin.FACTORY);\n// gets all labels configurations\nList<Label> allLabels = options.getLabels();\n// gets "myLabel1" label configuration\nLabel label1 = options.getLabel(IsLabelId.create("myLabel1"));\n// gets "myLabel2" label configuration\nLabel label2 = options.getLabel("myLabel2");\n')),Object(r.b)("h2",{id:"options"},"Options"),Object(r.b)("p",null,"The following options can configure how the labels will look like and they can be applied to the ",Object(r.b)("a",{parentName:"p",href:"https://www.pepstock.org/Charba/4.0/org/pepstock/charba/client/labels/Label.html"},"label")," object."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-java"},'// creates a plugin options\nLabelsOptions options = new LabelsOptions();\n// creates label id\nIsLabelId labelId = IsLabelId.create("myLabel1");\n// creates and adds a label by "myLabel1" id\nLabel label = options.createLabel(labelId);\n// sets the render\nlabel.setRender(Render.LABEL);\n')),Object(r.b)("p",null,"The complete options are described by following table:"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",{parentName:"tr",align:"left"},"Name"),Object(r.b)("th",{parentName:"tr",align:"left"},"Type"),Object(r.b)("th",{parentName:"tr",align:"left"},"Default"),Object(r.b)("th",{parentName:"tr",align:"left"},"Scriptable"),Object(r.b)("th",{parentName:"tr",align:"left"},"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:"left"},"arc"),Object(r.b)("td",{parentName:"tr",align:"left"},"boolean"),Object(r.b)("td",{parentName:"tr",align:"left"},Object(r.b)("inlineCode",{parentName:"td"},"false")),Object(r.b)("td",{parentName:"tr",align:"left"},"-"),Object(r.b)("td",{parentName:"tr",align:"left"},"If ",Object(r.b)("inlineCode",{parentName:"td"},"true"),", draws label in arc. Bar chart ignores this.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:"left"},"color"),Object(r.b)("td",{parentName:"tr",align:"left"},"String - ",Object(r.b)("a",{parentName:"td",href:"https://www.pepstock.org/Charba/4.0/org/pepstock/charba/client/colors/IsColor.html"},"IsColor")),Object(r.b)("td",{parentName:"tr",align:"left"},Object(r.b)("a",{parentName:"td",href:"../defaults/DefaultsCharts"},"default color")),Object(r.b)("td",{parentName:"tr",align:"left"},Object(r.b)("a",{parentName:"td",href:"#color"},"Yes")),Object(r.b)("td",{parentName:"tr",align:"left"},"The font color of the label.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:"left"},"font"),Object(r.b)("td",{parentName:"tr",align:"left"},Object(r.b)("a",{parentName:"td",href:"https://www.pepstock.org/Charba/4.0/org/pepstock/charba/client/labels/Font.html"},"Font")),Object(r.b)("td",{parentName:"tr",align:"left"},Object(r.b)("a",{parentName:"td",href:"../defaults/DefaultsCharts#font"},"default font")),Object(r.b)("td",{parentName:"tr",align:"left"},Object(r.b)("a",{parentName:"td",href:"#font"},"Yes")),Object(r.b)("td",{parentName:"tr",align:"left"},"The font of label text.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:"left"},"images"),Object(r.b)("td",{parentName:"tr",align:"left"},Object(r.b)("a",{parentName:"td",href:"https://www.pepstock.org/Charba/4.0/org/pepstock/charba/client/dom/elements/Img.html"},"Img"),"[]"),Object(r.b)("td",{parentName:"tr",align:"left"},Object(r.b)("inlineCode",{parentName:"td"},"null")),Object(r.b)("td",{parentName:"tr",align:"left"},"-"),Object(r.b)("td",{parentName:"tr",align:"left"},"Set images when the rendering is set to Render.IMAGE.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:"left"},"outsidePadding"),Object(r.b)("td",{parentName:"tr",align:"left"},"int"),Object(r.b)("td",{parentName:"tr",align:"left"},"2"),Object(r.b)("td",{parentName:"tr",align:"left"},"-"),Object(r.b)("td",{parentName:"tr",align:"left"},"Add padding when the position is Position.OUTSIDE.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:"left"},"overlap"),Object(r.b)("td",{parentName:"tr",align:"left"},"boolean"),Object(r.b)("td",{parentName:"tr",align:"left"},Object(r.b)("inlineCode",{parentName:"td"},"true")),Object(r.b)("td",{parentName:"tr",align:"left"},"-"),Object(r.b)("td",{parentName:"tr",align:"left"},"Draw label even it's overlap. Bar chart ignores this.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:"left"},"position"),Object(r.b)("td",{parentName:"tr",align:"left"},Object(r.b)("a",{parentName:"td",href:"https://www.pepstock.org/Charba/4.0/org/pepstock/charba/client/labels/enums/Position.html"},"Position")),Object(r.b)("td",{parentName:"tr",align:"left"},"Position.DEFAULT"),Object(r.b)("td",{parentName:"tr",align:"left"},"-"),Object(r.b)("td",{parentName:"tr",align:"left"},"Position to draw label. Bar chart ignores this.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:"left"},"precision"),Object(r.b)("td",{parentName:"tr",align:"left"},"int"),Object(r.b)("td",{parentName:"tr",align:"left"},"0"),Object(r.b)("td",{parentName:"tr",align:"left"},"-"),Object(r.b)("td",{parentName:"tr",align:"left"},"Precision for percentage label text.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:"left"},"render"),Object(r.b)("td",{parentName:"tr",align:"left"},Object(r.b)("a",{parentName:"td",href:"https://www.pepstock.org/Charba/4.0/org/pepstock/charba/client/labels/enums/Render.html"},"Render")),Object(r.b)("td",{parentName:"tr",align:"left"},"Render.PERCENTAGE"),Object(r.b)("td",{parentName:"tr",align:"left"},Object(r.b)("a",{parentName:"td",href:"#render"},"Yes")),Object(r.b)("td",{parentName:"tr",align:"left"},"The value of the label to render.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:"left"},"shadowBlur"),Object(r.b)("td",{parentName:"tr",align:"left"},"int"),Object(r.b)("td",{parentName:"tr",align:"left"},"6"),Object(r.b)("td",{parentName:"tr",align:"left"},"-"),Object(r.b)("td",{parentName:"tr",align:"left"},"The label text shadow intensity.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:"left"},"shadowOffsetX"),Object(r.b)("td",{parentName:"tr",align:"left"},"int"),Object(r.b)("td",{parentName:"tr",align:"left"},"3"),Object(r.b)("td",{parentName:"tr",align:"left"},"-"),Object(r.b)("td",{parentName:"tr",align:"left"},"The label text shadow X offset.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:"left"},"shadowOffsetY"),Object(r.b)("td",{parentName:"tr",align:"left"},"int"),Object(r.b)("td",{parentName:"tr",align:"left"},"3"),Object(r.b)("td",{parentName:"tr",align:"left"},"-"),Object(r.b)("td",{parentName:"tr",align:"left"},"The label text shadow Y offset.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:"left"},"shadowColor"),Object(r.b)("td",{parentName:"tr",align:"left"},"String - ",Object(r.b)("a",{parentName:"td",href:"https://www.pepstock.org/Charba/4.0/org/pepstock/charba/client/colors/IsColor.html"},"IsColor")),Object(r.b)("td",{parentName:"tr",align:"left"},"rgba(0,0,0,0.3) - ",Object(r.b)("span",{style:{backgroundColor:"rgba(0,0,0,0.3)",border:"1px solid"}},"\xa0","\xa0","\xa0","\xa0","\xa0","\xa0","\xa0","\xa0")),Object(r.b)("td",{parentName:"tr",align:"left"},"-"),Object(r.b)("td",{parentName:"tr",align:"left"},"The label text shadow color.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:"left"},"showActualPercentages"),Object(r.b)("td",{parentName:"tr",align:"left"},"boolean"),Object(r.b)("td",{parentName:"tr",align:"left"},Object(r.b)("inlineCode",{parentName:"td"},"false")),Object(r.b)("td",{parentName:"tr",align:"left"},"-"),Object(r.b)("td",{parentName:"tr",align:"left"},"Show the real calculated percentages from the values and don't apply the additional logic to fit the percentages to 100 in total.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:"left"},"showZero"),Object(r.b)("td",{parentName:"tr",align:"left"},"boolean"),Object(r.b)("td",{parentName:"tr",align:"left"},Object(r.b)("inlineCode",{parentName:"td"},"false")),Object(r.b)("td",{parentName:"tr",align:"left"},"-"),Object(r.b)("td",{parentName:"tr",align:"left"},"Identifies whether or not labels of value 0 are displayed")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:"left"},"textMargin"),Object(r.b)("td",{parentName:"tr",align:"left"},"int"),Object(r.b)("td",{parentName:"tr",align:"left"},"2"),Object(r.b)("td",{parentName:"tr",align:"left"},"-"),Object(r.b)("td",{parentName:"tr",align:"left"},"The added margin of text when the position is Position.OUTSIDE or Position.BORDER.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:"left"},"textShadow"),Object(r.b)("td",{parentName:"tr",align:"left"},"boolean"),Object(r.b)("td",{parentName:"tr",align:"left"},Object(r.b)("inlineCode",{parentName:"td"},"false")),Object(r.b)("td",{parentName:"tr",align:"left"},"-"),Object(r.b)("td",{parentName:"tr",align:"left"},"If ",Object(r.b)("inlineCode",{parentName:"td"},"true"),", draws the text shadows under labels.")))),Object(r.b)("h2",{id:"scriptable"},"Scriptable"),Object(r.b)("p",null,"Scriptable options in the plugin configuration accept a callback which is called for each of the underlying data values."),Object(r.b)("p",null,"There are 3 options which can be defined as scriptable:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"color"),", to set the color of the label."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"font"),", to set the font of the label."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"render"),", to set the value of the label to render.")),Object(r.b)("p",null,"The callbacks are getting the only 1 argument, the ",Object(r.b)("a",{parentName:"p",href:"https://www.pepstock.org/Charba/4.0/org/pepstock/charba/client/labels/LabelsContext.html"},"plugin context")," which contains the context of the callback execution."),Object(r.b)("p",null,"The context object contains the following properties:"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",{parentName:"tr",align:"left"},"Name"),Object(r.b)("th",{parentName:"tr",align:"left"},"Type"),Object(r.b)("th",{parentName:"tr",align:"left"},"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:"left"},"active"),Object(r.b)("td",{parentName:"tr",align:"left"},"boolean"),Object(r.b)("td",{parentName:"tr",align:"left"},"Whether the associated element is hovered.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:"left"},"attributes"),Object(r.b)("td",{parentName:"tr",align:"left"},Object(r.b)("a",{parentName:"td",href:"https://www.pepstock.org/Charba/4.0/org/pepstock/charba/client/commons/NativeObjectContainer.html"},"NativeObjectContainer")),Object(r.b)("td",{parentName:"tr",align:"left"},"User object which you can store your options at runtime.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:"left"},"chart"),Object(r.b)("td",{parentName:"tr",align:"left"},Object(r.b)("a",{parentName:"td",href:"https://www.pepstock.org/Charba/4.0/org/pepstock/charba/client/IsChart.html"},"IsChart")),Object(r.b)("td",{parentName:"tr",align:"left"},"Chart instance.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:"left"},"dataIndex"),Object(r.b)("td",{parentName:"tr",align:"left"},"int"),Object(r.b)("td",{parentName:"tr",align:"left"},"The index of the current data.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:"left"},"dataItem"),Object(r.b)("td",{parentName:"tr",align:"left"},Object(r.b)("a",{parentName:"td",href:"https://www.pepstock.org/Charba/4.0/org/pepstock/charba/client/items/DataItem.html"},"DataItem")),Object(r.b)("td",{parentName:"tr",align:"left"},"The value of the label.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:"left"},"datasetIndex"),Object(r.b)("td",{parentName:"tr",align:"left"},"int"),Object(r.b)("td",{parentName:"tr",align:"left"},"The index of the current data set.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:"left"},"datasetItem"),Object(r.b)("td",{parentName:"tr",align:"left"},Object(r.b)("a",{parentName:"td",href:"https://www.pepstock.org/Charba/4.0/org/pepstock/charba/client/items/DatasetItem.html"},"DatasetItem")),Object(r.b)("td",{parentName:"tr",align:"left"},"The data set information for this data")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:"left"},"datasetElement"),Object(r.b)("td",{parentName:"tr",align:"left"},Object(r.b)("a",{parentName:"td",href:"https://www.pepstock.org/Charba/4.0/org/pepstock/charba/client/items/DatasetElement.html"},"DatasetElement")),Object(r.b)("td",{parentName:"tr",align:"left"},"The element (point, arc, bar, etc.) for this data")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:"left"},"label"),Object(r.b)("td",{parentName:"tr",align:"left"},"String"),Object(r.b)("td",{parentName:"tr",align:"left"},"The string representation of the value of the label.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:"left"},"labelOptions"),Object(r.b)("td",{parentName:"tr",align:"left"},Object(r.b)("a",{parentName:"td",href:"https://www.pepstock.org/Charba/4.0/org/pepstock/charba/client/labels/Label.html"},"Label")),Object(r.b)("td",{parentName:"tr",align:"left"},"The label configuration where the options is defined as scriptable.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:"left"},"percentage"),Object(r.b)("td",{parentName:"tr",align:"left"},"double"),Object(r.b)("td",{parentName:"tr",align:"left"},"The percentage representation of the value of the label.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:"left"},"type"),Object(r.b)("td",{parentName:"tr",align:"left"},Object(r.b)("a",{parentName:"td",href:"https://www.pepstock.org/Charba/4.0/org/pepstock/charba/client/items/ContextType.html"},"ContextType")),Object(r.b)("td",{parentName:"tr",align:"left"},"The type of the context. It can be ONLY ",Object(r.b)("inlineCode",{parentName:"td"},"ContextType.LABELS"),".")))),Object(r.b)("p",null,"The following options can be set by a callback:"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",{parentName:"tr",align:"left"},"Name"),Object(r.b)("th",{parentName:"tr",align:"left"},"Callback"),Object(r.b)("th",{parentName:"tr",align:"left"},"Returned types"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:"left"},"color"),Object(r.b)("td",{parentName:"tr",align:"left"},Object(r.b)("a",{parentName:"td",href:"https://www.pepstock.org/Charba/4.0/org/pepstock/charba/client/callbacks/ColorCallback.html"},"ColorCallback"),"<","AnnotationContext",">"),Object(r.b)("td",{parentName:"tr",align:"left"},"String - ",Object(r.b)("a",{parentName:"td",href:"https://www.pepstock.org/Charba/4.0/org/pepstock/charba/client/colors/IsColor.html"},"IsColor"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:"left"},"font"),Object(r.b)("td",{parentName:"tr",align:"left"},Object(r.b)("a",{parentName:"td",href:"https://www.pepstock.org/Charba/4.0/org/pepstock/charba/client/callbacks/FontCallback.html"},"FontCallback"),"<","AnnotationContext",">"),Object(r.b)("td",{parentName:"tr",align:"left"},Object(r.b)("a",{parentName:"td",href:"https://www.pepstock.org/Charba/4.0/org/pepstock/charba/client/items/FontItem.html"},"FontItem"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:"left"},"render"),Object(r.b)("td",{parentName:"tr",align:"left"},Object(r.b)("a",{parentName:"td",href:"https://www.pepstock.org/Charba/4.0/org/pepstock/charba/client/labels/callbacks/RenderCallback.html"},"RenderCallback")),Object(r.b)("td",{parentName:"tr",align:"left"},"String")))),Object(r.b)("h3",{id:"color"},"Color"),Object(r.b)("p",null,"You can set the color of the labels at runtime, providing different colors for different labels."),Object(r.b)("img",{src:Object(b.a)("/img/labelsColorCallback.png")}),Object(r.b)("p",null,"The color property can be set as ",Object(r.b)("a",{parentName:"p",href:"https://www.pepstock.org/Charba/4.0/org/pepstock/charba/client/labels/callbacks/ColorCallback.html"},"scriptable option"),", as following:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-java"},'// creates a plugin options\nLabelsOptions options = new LabelsOptions();\n// creates label id\nIsLabelId labelId = IsLabelId.create("myLabel");\n// creates and adds a label by "myLabel" id\nLabel label = options.createLabel(labelId);\n// sets callback\nlabel.setColor(new ColorCallback<LabelsContext>(){\n\n    /**\n     * Called to change font color at runtime.\n     * \n     * @param context callback context\n     * @return a font color instance\n     */         \n    @Override\n    public IsColor invoke(LabelsContext context){\n        return context.getDataIndex() % 2 == 0 ? \n            HtmlColor.BLACK : \n            HtmlColor.RED;\n    }\n});\n')),Object(r.b)("h3",{id:"font"},"Font"),Object(r.b)("p",null,"You can set the font of the labels at runtime, providing different font for different labels."),Object(r.b)("img",{src:Object(b.a)("/img/labelsFontCallback.png")}),Object(r.b)("p",null,"The font property can be set as ",Object(r.b)("a",{parentName:"p",href:"https://www.pepstock.org/Charba/4.0/org/pepstock/charba/client/callbacks/FontCallback.html"},"scriptable option"),", providing a ",Object(r.b)("a",{parentName:"p",href:"https://www.pepstock.org/Charba/4.0/org/pepstock/charba/client/items/FontItem.html"},"font item")," instance, as following:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-java"},'// creates a plugin options\nLabelsOptions options = new LabelsOptions();\n// creates label id\nIsLabelId labelId = IsLabelId.create("myLabel");\n// creates and adds a label by "myLabel" id\nLabel label = options.createLabel(labelId);\n// sets callback\nlabel.setColor(new FontCallback<LabelsContext>(){\n\n    /**\n     * Called to set the label font at runtime.\n     * \n     * @param context callback context\n     * @return a font instance\n     */ \n   @Override\n   public Font invoke(LabelsContext context){\n      FontItem fontItem = new FontItem();\n      int size = context.getDataIndex() % 2 == 0 ? 32 : 12;\n      fontItem.setSize(size);\n      return fontItem;\n   }\n});\n')),Object(r.b)("h3",{id:"render"},"Render"),Object(r.b)("p",null,"You can set the value of the labels to show on the chart at runtime, providing different values for different labels."),Object(r.b)("img",{src:Object(b.a)("/img/labelsRenderCallback.png")}),Object(r.b)("p",null,"The render property can be set as ",Object(r.b)("a",{parentName:"p",href:"https://www.pepstock.org/Charba/4.0/org/pepstock/charba/client/labels/callbacks/RenderCallback.html"},"scriptable option"),", as following:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-java"},'// creates a plugin options\nLabelsOptions options = new LabelsOptions();\n// creates label id\nIsLabelId labelId = IsLabelId.create("myLabel");\n// creates and adds a label by "myLabel" id\nLabel label = options.createLabel(labelId);\n// sets callback\nlabel.setRender(new RenderCallback<LabelsContext>(){\n\n    /**\n     * Called to set the label render at runtime.\n     * \n     * @param context callback context\n     * @return a font instance\n     */ \n    @Override\n    public String invoke(LabelsContext context){\n        return context.getDataIndex() % 2 == 0 ? \n            "Percentage: "+context.getPercentage() : \n            "Value: "+context.getDataItem().getValue();\n    }\n});\n')),Object(r.b)("h2",{id:"options-builder"},"Options builder"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Charba")," provides a builder to create options using the ",Object(r.b)("strong",{parentName:"p"},"set")," methods in sequence and get the options object at the end of configuration."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-java"},'// creates a plugin options\nLabelsOptions options = LabelsOptionsBuilder.create()\n    .createLabel("myLabel")  // entry to label builder\n    .setRender(Render.PERCENTAGE)\n    .setColor(HtmlColor.WHITE)\n    .setPrecision(2)\n    .getOptionsBuilder() // return to options builder\n    .build();\n// sets options\nchart.getOptions().getPlugins().setOptions(LabelsPlugin.ID, options);\n')),Object(r.b)("p",null,"Creating a build by ",Object(r.b)("inlineCode",{parentName:"p"},"LabelsOptionsBuilder.create()")," it will use the global options as default, instead by ",Object(r.b)("inlineCode",{parentName:"p"},"LabelsOptionsBuilder.create(chart)")," it will use the global chart options as default."))}s.isMDXComponent=!0},209:function(e,t,a){"use strict";a.d(t,"a",(function(){return s})),a.d(t,"b",(function(){return h}));var n=a(0),l=a.n(n);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function b(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?b(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):b(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,l=function(e,t){if(null==e)return{};var a,n,l={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(l[a]=e[a]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var c=l.a.createContext({}),p=function(e){var t=l.a.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},s=function(e){var t=p(e.components);return l.a.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return l.a.createElement(l.a.Fragment,{},t)}},g=l.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,r=e.originalType,b=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),s=p(a),g=n,h=s["".concat(b,".").concat(g)]||s[g]||d[g]||r;return a?l.a.createElement(h,o(o({ref:t},c),{},{components:a})):l.a.createElement(h,o({ref:t},c))}));function h(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var r=a.length,b=new Array(r);b[0]=g;var o={};for(var i in t)hasOwnProperty.call(t,i)&&(o[i]=t[i]);o.originalType=e,o.mdxType="string"==typeof e?e:n,b[1]=o;for(var c=2;c<r;c++)b[c]=a[c];return l.a.createElement.apply(null,b)}return l.a.createElement.apply(null,a)}g.displayName="MDXCreateElement"},210:function(e,t,a){"use strict";a.d(t,"b",(function(){return r})),a.d(t,"a",(function(){return b}));var n=a(16),l=a(211);function r(){var e=Object(n.default)().siteConfig,t=(e=void 0===e?{}:e).baseUrl,a=void 0===t?"/":t,r=e.url;return{withBaseUrl:function(e,t){return function(e,t,a,n){var r=void 0===n?{}:n,b=r.forcePrependBaseUrl,o=void 0!==b&&b,i=r.absolute,c=void 0!==i&&i;if(!a)return a;if(a.startsWith("#"))return a;if(Object(l.b)(a))return a;if(o)return t+a;var p=a.startsWith(t)?a:t+a.replace(/^\//,"");return c?e+p:p}(r,a,e,t)}}}function b(e,t){return void 0===t&&(t={}),(0,r().withBaseUrl)(e,t)}},211:function(e,t,a){"use strict";function n(e){return!0===/^(\w*:|\/\/)/.test(e)}function l(e){return void 0!==e&&!n(e)}a.d(t,"b",(function(){return n})),a.d(t,"a",(function(){return l}))}}]);
"use strict";(self.webpackChunkcharba=self.webpackChunkcharba||[]).push([[9959],{3905:function(e,t,n){n.d(t,{Zo:function(){return g},kt:function(){return d}});var a=n(67294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},g=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,i=e.originalType,p=e.parentName,g=o(e,["components","mdxType","originalType","parentName"]),c=s(n),d=l,m=c["".concat(p,".").concat(d)]||c[d]||u[d]||i;return n?a.createElement(m,r(r({ref:t},g),{},{components:n})):a.createElement(m,r({ref:t},g))}));function d(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var i=n.length,r=new Array(i);r[0]=c;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:l,r[1]=o;for(var s=2;s<i;s++)r[s]=n[s];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},13919:function(e,t,n){function a(e){return!0===/^(\w*:|\/\/)/.test(e)}function l(e){return void 0!==e&&!a(e)}n.d(t,{b:function(){return a},Z:function(){return l}})},44996:function(e,t,n){n.d(t,{C:function(){return i},Z:function(){return r}});var a=n(52263),l=n(13919);function i(){var e=(0,a.Z)().siteConfig,t=(e=void 0===e?{}:e).baseUrl,n=void 0===t?"/":t,i=e.url;return{withBaseUrl:function(e,t){return function(e,t,n,a){var i=void 0===a?{}:a,r=i.forcePrependBaseUrl,o=void 0!==r&&r,p=i.absolute,s=void 0!==p&&p;if(!n)return n;if(n.startsWith("#"))return n;if((0,l.b)(n))return n;if(o)return t+n;var g=n.startsWith(t)?n:t+n.replace(/^\//,"");return s?e+g:g}(i,n,e,t)}}}function r(e,t){return void 0===t&&(t={}),(0,i().withBaseUrl)(e,t)}},48841:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return p},contentTitle:function(){return s},metadata:function(){return g},toc:function(){return u},default:function(){return d}});var a=n(87462),l=n(63366),i=(n(67294),n(3905)),r=n(44996),o=["components"],p={id:"PluginHTMLLegend",title:"HTML legend plugin",hide_title:!0,sidebar_label:"HTML legend"},s=void 0,g={unversionedId:"PluginHTMLLegend",id:"version-3.3/PluginHTMLLegend",isDocsHomePage:!1,title:"HTML legend plugin",description:"HTML legend plugin",source:"@site/versioned_docs/version-3.3/PluginHTMLLegend.md",sourceDirName:".",slug:"/PluginHTMLLegend",permalink:"/Charba-Wiki/docs/3.3/PluginHTMLLegend",tags:[],version:"3.3",frontMatter:{id:"PluginHTMLLegend",title:"HTML legend plugin",hide_title:!0,sidebar_label:"HTML legend"},sidebar:"version-3.3/docs",previous:{title:"Datasets items selector",permalink:"/Charba-Wiki/docs/3.3/PluginDatasetsItemsSelector"},next:{title:"Callbacks",permalink:"/Charba-Wiki/docs/3.3/Callbacks"}},u=[{value:"HTML legend plugin",id:"html-legend-plugin",children:[],level:2},{value:"Configuration",id:"configuration",children:[],level:2},{value:"Setting HTML Legend Text",id:"setting-html-legend-text",children:[{value:"Legend Text Callback",id:"legend-text-callback",children:[],level:3}],level:2},{value:"Limitations",id:"limitations",children:[],level:2}],c={toc:u};function d(e){var t=e.components,n=(0,l.Z)(e,o);return(0,i.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"html-legend-plugin"},"HTML legend plugin"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Charba")," provides a plugin implementation to create a legend by HTML content, outside of the canvas element managed by ",(0,i.kt)("a",{parentName:"p",href:"http://www.chartjs.org/"},"Chart.JS"),"."),(0,i.kt)("p",null,"The goal is to leverage on LegendCallback to create a HTML element with all flexibility that HTML elements can provide, like multi lines for legend text."),(0,i.kt)("img",{src:(0,r.Z)("/img/htmlLegendStyle.png")}),(0,i.kt)("p",null,"This plugin, as singleton, can be set both at global and at chart level."),(0,i.kt)("p",null,"The implementation is ",(0,i.kt)("a",{parentName:"p",href:"https://pepstock-org.github.io/Charba/3.3/org/pepstock/charba/client/impl/plugins/HtmlLegend.html"},"HtmlLegend")," and can be set as following:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"// GLOBAL\nDefaults.get().getPlugins().register(HtmlLegend.get());\n\n// INLINE\nchart.getPlugins().add(HtmlLegend.get());\n")),(0,i.kt)("p",null,"The ID of plugin is ",(0,i.kt)("inlineCode",{parentName:"p"},"charbahtmllegend")," (",(0,i.kt)("a",{parentName:"p",href:"https://pepstock-org.github.io/Charba/3.3/org/pepstock/charba/client/impl/plugins/HtmlLegend.html#ID"},"HtmlLegend.ID"),")."),(0,i.kt)("p",null,"It could be that you set this plugin as global one for all your charts but you want to change it for only one instance."),(0,i.kt)("p",null,"In this case you should instantiate a ",(0,i.kt)("a",{parentName:"p",href:"https://pepstock-org.github.io/Charba/3.3/org/pepstock/charba/client/impl/plugins/HtmlLegendOptions.html"},"HtmlLegendOptions")," and set it to your chart options as following, setting the color you want:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'// INLINE\n// Set "maximum legend columns" overriding the default one\nHtmlLegendOptions option = new HtmlLegendOptions();\noption.setMaximumLegendColumns(5);\n\n// --------------------------------------\n// store the plugin options by plugin ID\n// --------------------------------------\nchart.getOptions().getPlugins().setOptions(HtmlLegend.ID, option);\n// --------------------------------------\n// or store the plugin options without plugin ID\n// --------------------------------------\nchart.getOptions().getPlugins().setOptions(option);\n\n// GLOBAL\n// Set "maximum legend columns" overriding the default one\nHtmlLegendOptions option = new HtmlLegendOptions();\noption.setMaximumLegendColumns(5);\n\n// --------------------------------------\n// store the plugin options by plugin ID\n// --------------------------------------\nDefaults.get().getGlobal().getPlugins().setOptions(HtmlLegend.ID, option);\n// --------------------------------------\n// or store the plugin options without plugin ID\n// --------------------------------------\nDefaults.get().getGlobal().getPlugins().setOptions(option);\n')),(0,i.kt)("p",null,"If you need to read the plugin options, there is the specific factory, ",(0,i.kt)("a",{parentName:"p",href:"https://pepstock-org.github.io/Charba/3.3/org/pepstock/charba/client/impl/plugins/HtmlLegendOptionsFactory.html"},"HtmlLegendOptionsFactory")," as static reference inside the ",(0,i.kt)("a",{parentName:"p",href:"https://pepstock-org.github.io/Charba/3.3/org/pepstock/charba/client/impl/plugins/HtmlLegend.html"},"plugin")," which can be used to retrieve the options from chart, as following:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"// INLINE\n// reads the options from chart\nHtmlLegendOptions option;\nif (chart.getOptions().getPlugins().hasOptions(HtmlLegend.ID)){\n   // --------------------------------------\n   // retrieve the plugin options by plugin ID\n   // --------------------------------------\n   options = chart.getOptions().getPlugins().getOptions(HtmlLegend.ID, HtmlLegend.FACTORY);\n   // --------------------------------------\n   // or retrieve the plugin options without plugin ID\n   // --------------------------------------\n   options = chart.getOptions().getPlugins().getOptions(HtmlLegend.FACTORY);\n}\n\n// GLOBAL\nif (Defaults.get().getGlobal().getPlugins().hasOptions(HtmlLegend.ID)){\n   // --------------------------------------\n   // retrieve the plugin options by plugin ID\n   // --------------------------------------\n   options = Defaults.get().getGlobal().getPlugins().getOptions(HtmlLegend.ID, HtmlLegend.FACTORY);\n   // --------------------------------------\n   // or retrieve the plugin options without plugin ID\n   // --------------------------------------\n   options = Defaults.get().getGlobal().getPlugins().getOptions(HtmlLegend.FACTORY);\n}\n")),(0,i.kt)("p",null,"The following are the attributes that you can set to plugin options:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Name"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Default"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"display"),(0,i.kt)("td",{parentName:"tr",align:null},"boolean"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"true")),(0,i.kt)("td",{parentName:"tr",align:null},"if ",(0,i.kt)("inlineCode",{parentName:"td"},"true"),", the HTML legend is showed.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"cursorPointer"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/3.3/org/pepstock/charba/client/dom/enums/CursorType.html"},"CursorType")),(0,i.kt)("td",{parentName:"tr",align:null},"CursorType.POINTER"),(0,i.kt)("td",{parentName:"tr",align:null},"Cursor style when the legend is hovered.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"maxLegendColumns"),(0,i.kt)("td",{parentName:"tr",align:null},"int"),(0,i.kt)("td",{parentName:"tr",align:null},"Integer.MAX_VALUE"),(0,i.kt)("td",{parentName:"tr",align:null},"Amount of legend items to show in the same row before creating new row.")))),(0,i.kt)("h2",{id:"configuration"},"Configuration"),(0,i.kt)("p",null,"The plugin will"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"provide some specific configuration to change some behaviors but it is leveraging on the ",(0,i.kt)("a",{parentName:"li",href:"Defaults#legend"},"Legend")," configuration provided by chart options."),(0,i.kt)("li",{parentName:"ul"},"respect if the user does not want to have the legend (by setting ",(0,i.kt)("inlineCode",{parentName:"li"},"false")," the the legend or disabling legend plugin)."),(0,i.kt)("li",{parentName:"ul"},"set to ",(0,i.kt)("inlineCode",{parentName:"li"},"false")," the legend ",(0,i.kt)("inlineCode",{parentName:"li"},"display")," options during own initialization to override the legend ",(0,i.kt)("inlineCode",{parentName:"li"},"display")," set by the user."),(0,i.kt)("li",{parentName:"ul"},"set an internal ",(0,i.kt)("a",{parentName:"li",href:"https://pepstock-org.github.io/Charba/3.3/org/pepstock/charba/client/callbacks/LegendCallback.html"},"LegendCallback")," which will provide a HTML representation of chart legend.")),(0,i.kt)("p",null,"Invoking the ",(0,i.kt)("a",{parentName:"p",href:"Charts#generatelegend"},"generateLegend")," method of the chart, you will get the HTML structure of HTML legend and not the out of the box one."),(0,i.kt)("p",null,"The HTML structure is:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-html"},"<TABLE>\n  <TR>\n    <TD>\n      <DIV color for legend item>\n      <DIV label for legend item>\n    </TD>\n    <TD>\n      <DIV color for legend item>\n      <DIV label for legend item>\n    </TD>\n  </TR>\n</TABLE>\n")),(0,i.kt)("p",null,"inside a DOM DIV element. All styles are applied directly to the elements therefore no CSS style file by class or id are managed. "),(0,i.kt)("h2",{id:"setting-html-legend-text"},"Setting HTML Legend Text"),(0,i.kt)("p",null,"The plugin allows to the user 2 ways to apply own behavior on legend text creation in order to customize the legend text:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"implements a ",(0,i.kt)("a",{parentName:"li",href:"Configuration#generatelabels-callback"},"LegendLabelsCallback")," at chart level. The interface can provide ",(0,i.kt)("inlineCode",{parentName:"li"},"setText(SafeHtml)")," method to set or override the value of legend item as HTML."),(0,i.kt)("li",{parentName:"ol"},"implements a ",(0,i.kt)("a",{parentName:"li",href:"https://pepstock-org.github.io/Charba/3.3/org/pepstock/charba/client/callbacks/HtmlLegendTextCallback.html"},"HtmlLegendTextCallback"),", see below.")),(0,i.kt)("p",null,"By default, if the legend text (provided by labels or dataset label) contains ",(0,i.kt)("inlineCode",{parentName:"p"},"\\n"),", the legend text will be split having a multi-line legend text."),(0,i.kt)("h3",{id:"legend-text-callback"},"Legend Text Callback"),(0,i.kt)("p",null,"The plugin provides a callback to change the value of legend text which can return a ",(0,i.kt)("a",{parentName:"p",href:"https://pepstock-org.github.io/Charba/3.3/org/pepstock/charba/client/dom/safehtml/SafeHtml.html"},"SafeHtml")," to apply as legend text."),(0,i.kt)("img",{src:(0,r.Z)("/img/htmlLegendSplit.png")}),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"// INLINE\nHtmlLegendOptions option = new HtmlLegendOptions();\noption.setLegendTextCallback(new HtmlLegendTextCallback(){\n\n    /**\n     * Returns a text of legend for a specific item, as HTML\n     * \n     * @param chart chart instance\n     * @param item legend item which represents the text to create\n     * @param currentText current text provided by legend labels callback.\n     * @return HTML legend representation as SafeHTML\n     */\n     @Override\n    public SafeHtml generateLegendText(IsChart chart, LegendItem item, String currentText){\n        // logic\n        return myLegendTextAsHtml;\n    }\n\n});\n")),(0,i.kt)("h2",{id:"limitations"},"Limitations"),(0,i.kt)("p",null,"There are a couple of limitations on current implementation:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("a",{parentName:"li",href:"https://pepstock-org.github.io/Charba/3.3/org/pepstock/charba/client/enums/Position.html#LEFT"},"Position.LEFT")," and ",(0,i.kt)("a",{parentName:"li",href:"https://pepstock-org.github.io/Charba/3.3/org/pepstock/charba/client/enums/Position.html#RIGHT"},"Position.RIGHT")," are ignored and Position.LEFT is managed as ",(0,i.kt)("a",{parentName:"li",href:"https://pepstock-org.github.io/Charba/3.3/org/pepstock/charba/client/enums/Position.html#TOP"},"Position.TOP")," and Position.RIGHT is managed as ",(0,i.kt)("a",{parentName:"li",href:"https://pepstock-org.github.io/Charba/3.3/org/pepstock/charba/client/enums/Position.html#BOTTOM"},"Position.BOTTOM")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("a",{parentName:"li",href:"https://pepstock-org.github.io/Charba/3.3/org/pepstock/charba/client/dom/elements/CanvasGradientItem.html"},"CanvasGradientItem"),"s provided by a dataset callback are ignored.")))}d.isMDXComponent=!0}}]);
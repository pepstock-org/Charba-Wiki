(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{209:function(t,e,n){"use strict";n.d(e,"a",(function(){return b})),n.d(e,"b",(function(){return g}));var r=n(0),a=n.n(r);function o(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function i(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function l(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?i(Object(n),!0).forEach((function(e){o(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function p(t,e){if(null==t)return{};var n,r,a=function(t,e){if(null==t)return{};var n,r,a={},o=Object.keys(t);for(r=0;r<o.length;r++)n=o[r],e.indexOf(n)>=0||(a[n]=t[n]);return a}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(r=0;r<o.length;r++)n=o[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(a[n]=t[n])}return a}var c=a.a.createContext({}),s=function(t){var e=a.a.useContext(c),n=e;return t&&(n="function"==typeof t?t(e):l(l({},e),t)),n},b=function(t){var e=s(t.components);return a.a.createElement(c.Provider,{value:e},t.children)},u={inlineCode:"code",wrapper:function(t){var e=t.children;return a.a.createElement(a.a.Fragment,{},e)}},h=a.a.forwardRef((function(t,e){var n=t.components,r=t.mdxType,o=t.originalType,i=t.parentName,c=p(t,["components","mdxType","originalType","parentName"]),b=s(n),h=r,g=b["".concat(i,".").concat(h)]||b[h]||u[h]||o;return n?a.a.createElement(g,l(l({ref:e},c),{},{components:n})):a.a.createElement(g,l({ref:e},c))}));function g(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var o=n.length,i=new Array(o);i[0]=h;var l={};for(var p in e)hasOwnProperty.call(e,p)&&(l[p]=e[p]);l.originalType=t,l.mdxType="string"==typeof t?t:r,i[1]=l;for(var c=2;c<o;c++)i[c]=n[c];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},66:function(t,e,n){"use strict";n.r(e),n.d(e,"frontMatter",(function(){return i})),n.d(e,"metadata",(function(){return l})),n.d(e,"toc",(function(){return p})),n.d(e,"default",(function(){return s}));var r=n(3),a=n(8),o=(n(0),n(209)),i={id:"PluginPointer",title:"Chart cursor plugin",hide_title:!0,sidebar_label:"Chart cursor"},l={unversionedId:"PluginPointer",id:"version-3.3/PluginPointer",isDocsHomePage:!1,title:"Chart cursor plugin",description:"Chart cursor plugin",source:"@site/versioned_docs/version-3.3/PluginPointer.md",sourceDirName:".",slug:"/PluginPointer",permalink:"/Charba-Wiki/docs/3.3/PluginPointer",version:"3.3",sidebar_label:"Chart cursor",frontMatter:{id:"PluginPointer",title:"Chart cursor plugin",hide_title:!0,sidebar_label:"Chart cursor"},sidebar:"version-3.3/docs",previous:{title:"Chart background color plugin",permalink:"/Charba-Wiki/docs/3.3/PluginBackgroundColor"},next:{title:"Color schemes plugin",permalink:"/Charba-Wiki/docs/3.3/PluginColorSchemes"}},p=[{value:"Chart cursor plugin",id:"chart-cursor-plugin",children:[]}],c={toc:p};function s(t){var e=t.components,n=Object(a.a)(t,["components"]);return Object(o.b)("wrapper",Object(r.a)({},c,n,{components:e,mdxType:"MDXLayout"}),Object(o.b)("h2",{id:"chart-cursor-plugin"},"Chart cursor plugin"),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Charba")," provides a plugin implementation to set the cursor of the chart when a chart and clickable element is hovered."),Object(o.b)("p",null,"The goal is to change the style of ",Object(o.b)("a",{parentName:"p",href:"https://pepstock-org.github.io/Charba/3.3/org/pepstock/charba/client/dom/enums/CursorType.html"},"cursor")," to highlight that the element could be clickable."),Object(o.b)("p",null,"This plugin, as singleton, can be set both at global and at chart level."),Object(o.b)("p",null,"The implementation is ",Object(o.b)("a",{parentName:"p",href:"https://pepstock-org.github.io/Charba/3.3/org/pepstock/charba/client/impl/plugins/ChartPointer.html"},"ChartPointer")," and can be set as following:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-java"},"// GLOBAL\nDefaults.get().getPlugins().register(ChartPointer.get());\n\n// INLINE\nchart.getPlugins().add(ChartPointer.get());\n")),Object(o.b)("p",null,"The ID of plugin is ",Object(o.b)("inlineCode",{parentName:"p"},"charbacursorpointer"),"."),Object(o.b)("p",null,"It could be that you set this plugin as global one for all your charts but you want to change it for only one instance."),Object(o.b)("p",null,"In this case you should instantiate a ",Object(o.b)("a",{parentName:"p",href:"https://pepstock-org.github.io/Charba/3.3/org/pepstock/charba/client/impl/plugins/ChartPointerOptions.html"},"ChartPointerOptions")," and set it to your chart options as following, setting the color you want:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-java"},'// INLINE\n// Set "crosshair" overriding the default cursor\nChartPointerOptions option = new ChartPointerOptions();\noption.setCursorPointer(CursorType.CROSSHAIR);\n\n// --------------------------------------\n// store the plugin options by plugin ID\n// --------------------------------------\nchart.getOptions().getPlugins().setOptions(ChartPointer.ID, option);\n// --------------------------------------\n// or store the plugin options without plugin ID\n// --------------------------------------\nchart.getOptions().getPlugins().setOptions(option);\n\n// GLOBAL\n// Set "crosshair" overriding the default cursor\nChartPointerOptions option = new ChartPointerOptions();\noption.setCursorPointer(CursorType.CROSSHAIR);\n\n// --------------------------------------\n// store the plugin options by plugin ID\n// --------------------------------------\nDefaults.get().getGlobal().getPlugins().setOptions(ChartPointer.ID, option);\n// --------------------------------------\n// or store the plugin options without plugin ID\n// --------------------------------------\nDefaults.get().getGlobal().getPlugins().setOptions(option);\n')),Object(o.b)("p",null,"If you need to read the plugin options, there is the specific factory, ",Object(o.b)("a",{parentName:"p",href:"https://pepstock-org.github.io/Charba/3.3/org/pepstock/charba/client/impl/plugins/ChartPointerOptionsFactory.html"},"ChartPointerOptionsFactory")," as static reference inside the ",Object(o.b)("a",{parentName:"p",href:"https://pepstock-org.github.io/Charba/3.3/org/pepstock/charba/client/impl/plugins/ChartPointer.html"},"plugin")," which can be used to retrieve the options from chart, as following:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-java"},"// INLINE\n// reads the options from chart\nChartPointerOptions option;\nif (chart.getOptions().getPlugins().hasOptions(ChartPointer.ID)){\n   // --------------------------------------\n   // retrieve the plugin options by plugin ID\n   // --------------------------------------\n   options = chart.getOptions().getPlugins().getOptions(ChartPointer.ID, ChartPointer.FACTORY);\n   // --------------------------------------\n   // or retrieve the plugin options without plugin ID\n   // --------------------------------------\n   options = chart.getOptions().getPlugins().getOptions(ChartPointer.FACTORY);\n}\n\n// GLOBAL\nif (Defaults.get().getGlobal().getPlugins().hasOptions(ChartPointer.ID)){\n   // --------------------------------------\n   // retrieve the plugin options by plugin ID\n   // --------------------------------------\n   options = Defaults.get().getGlobal().getPlugins().getOptions(ChartPointer.ID, ChartPointer.FACTORY);\n   // --------------------------------------\n   // or retrieve the plugin options without plugin ID\n   // --------------------------------------\n   options = Defaults.get().getGlobal().getPlugins().getOptions(ChartPointer.FACTORY);\n}\n")),Object(o.b)("p",null,"The following are the attributes that you can set to plugin options:"),Object(o.b)("table",null,Object(o.b)("thead",{parentName:"table"},Object(o.b)("tr",{parentName:"thead"},Object(o.b)("th",{parentName:"tr",align:null},"Name"),Object(o.b)("th",{parentName:"tr",align:null},"Type"),Object(o.b)("th",{parentName:"tr",align:null},"Default"),Object(o.b)("th",{parentName:"tr",align:null},"Description"))),Object(o.b)("tbody",{parentName:"table"},Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"cursorPointer"),Object(o.b)("td",{parentName:"tr",align:null},Object(o.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/3.3/org/pepstock/charba/client/dom/enums/CursorType.html"},"CursorType")),Object(o.b)("td",{parentName:"tr",align:null},"CursorType.POINTER"),Object(o.b)("td",{parentName:"tr",align:null},"Cursor style applied to the canvas when is hovering a clickable element.")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"elements"),Object(o.b)("td",{parentName:"tr",align:null},Object(o.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/3.3/org/pepstock/charba/client/impl/plugins/enums/PointerElement.html"},"PointerElement")),Object(o.b)("td",{parentName:"tr",align:null},"PointerElement.DATASET, PointerElement.TITLE, PointerElement.AXES, PointerElement.LEGEND"),Object(o.b)("td",{parentName:"tr",align:null},"Chart elements where the cursor pointer will be applied if the element is hovered.")))),Object(o.b)("p",null,"By ",Object(o.b)("inlineCode",{parentName:"p"},"elements")," array property, you can decide on which chart elements the cursor pointer will be applied."),Object(o.b)("p",null,"Apart for ",Object(o.b)("inlineCode",{parentName:"p"},"PointerElement.LEGEND"),", that is always clickable, for all the others the cursor will be applied ONLY if the chart has got a relative click event handler instance."),Object(o.b)("table",null,Object(o.b)("thead",{parentName:"table"},Object(o.b)("tr",{parentName:"thead"},Object(o.b)("th",{parentName:"tr",align:null},"Element"),Object(o.b)("th",{parentName:"tr",align:null},"Handler"))),Object(o.b)("tbody",{parentName:"table"},Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"PointerElement.DATASET"),Object(o.b)("td",{parentName:"tr",align:null},Object(o.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/3.3/org/pepstock/charba/client/events/DatasetSelectionEventHandler.html"},"DatasetSelectionEventHandler"))),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"PointerElement.TITLE"),Object(o.b)("td",{parentName:"tr",align:null},Object(o.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/3.3/org/pepstock/charba/client/events/TitleClickEventHandler.html"},"TitleClickEventHandler"))),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"PointerElement.AXES"),Object(o.b)("td",{parentName:"tr",align:null},Object(o.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/3.3/org/pepstock/charba/client/events/AxisClickEventHandler.html"},"AxisClickEventHandler"))))))}s.isMDXComponent=!0}}]);
(self.webpackChunkcharba=self.webpackChunkcharba||[]).push([[3908],{3905:function(t,e,n){"use strict";n.d(e,{Zo:function(){return u},kt:function(){return g}});var r=n(7294);function a(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function o(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function i(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?o(Object(n),!0).forEach((function(e){a(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function l(t,e){if(null==t)return{};var n,r,a=function(t,e){if(null==t)return{};var n,r,a={},o=Object.keys(t);for(r=0;r<o.length;r++)n=o[r],e.indexOf(n)>=0||(a[n]=t[n]);return a}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(r=0;r<o.length;r++)n=o[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(a[n]=t[n])}return a}var p=r.createContext({}),s=function(t){var e=r.useContext(p),n=e;return t&&(n="function"==typeof t?t(e):i(i({},e),t)),n},u=function(t){var e=s(t.components);return r.createElement(p.Provider,{value:e},t.children)},c={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},h=r.forwardRef((function(t,e){var n=t.components,a=t.mdxType,o=t.originalType,p=t.parentName,u=l(t,["components","mdxType","originalType","parentName"]),h=s(n),g=a,m=h["".concat(p,".").concat(g)]||h[g]||c[g]||o;return n?r.createElement(m,i(i({ref:e},u),{},{components:n})):r.createElement(m,i({ref:e},u))}));function g(t,e){var n=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var o=n.length,i=new Array(o);i[0]=h;var l={};for(var p in e)hasOwnProperty.call(e,p)&&(l[p]=e[p]);l.originalType=t,l.mdxType="string"==typeof t?t:a,i[1]=l;for(var s=2;s<o;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}h.displayName="MDXCreateElement"},1497:function(t,e,n){"use strict";n.r(e),n.d(e,{frontMatter:function(){return l},metadata:function(){return p},toc:function(){return s},default:function(){return c}});var r=n(2122),a=n(9756),o=(n(7294),n(3905)),i=["components"],l={id:"PluginPointer",title:"Chart cursor plugin",hide_title:!0,sidebar_label:"Chart cursor"},p={unversionedId:"PluginPointer",id:"version-3.3/PluginPointer",isDocsHomePage:!1,title:"Chart cursor plugin",description:"Chart cursor plugin",source:"@site/versioned_docs/version-3.3/PluginPointer.md",sourceDirName:".",slug:"/PluginPointer",permalink:"/Charba-Wiki/docs/3.3/PluginPointer",version:"3.3",sidebar_label:"Chart cursor",frontMatter:{id:"PluginPointer",title:"Chart cursor plugin",hide_title:!0,sidebar_label:"Chart cursor"},sidebar:"version-3.3/docs",previous:{title:"Chart background color plugin",permalink:"/Charba-Wiki/docs/3.3/PluginBackgroundColor"},next:{title:"Color schemes plugin",permalink:"/Charba-Wiki/docs/3.3/PluginColorSchemes"}},s=[{value:"Chart cursor plugin",id:"chart-cursor-plugin",children:[]}],u={toc:s};function c(t){var e=t.components,n=(0,a.Z)(t,i);return(0,o.kt)("wrapper",(0,r.Z)({},u,n,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"chart-cursor-plugin"},"Chart cursor plugin"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Charba")," provides a plugin implementation to set the cursor of the chart when a chart and clickable element is hovered."),(0,o.kt)("p",null,"The goal is to change the style of ",(0,o.kt)("a",{parentName:"p",href:"https://pepstock-org.github.io/Charba/3.3/org/pepstock/charba/client/dom/enums/CursorType.html"},"cursor")," to highlight that the element could be clickable."),(0,o.kt)("p",null,"This plugin, as singleton, can be set both at global and at chart level."),(0,o.kt)("p",null,"The implementation is ",(0,o.kt)("a",{parentName:"p",href:"https://pepstock-org.github.io/Charba/3.3/org/pepstock/charba/client/impl/plugins/ChartPointer.html"},"ChartPointer")," and can be set as following:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"// GLOBAL\nDefaults.get().getPlugins().register(ChartPointer.get());\n\n// INLINE\nchart.getPlugins().add(ChartPointer.get());\n")),(0,o.kt)("p",null,"The ID of plugin is ",(0,o.kt)("inlineCode",{parentName:"p"},"charbacursorpointer"),"."),(0,o.kt)("p",null,"It could be that you set this plugin as global one for all your charts but you want to change it for only one instance."),(0,o.kt)("p",null,"In this case you should instantiate a ",(0,o.kt)("a",{parentName:"p",href:"https://pepstock-org.github.io/Charba/3.3/org/pepstock/charba/client/impl/plugins/ChartPointerOptions.html"},"ChartPointerOptions")," and set it to your chart options as following, setting the color you want:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},'// INLINE\n// Set "crosshair" overriding the default cursor\nChartPointerOptions option = new ChartPointerOptions();\noption.setCursorPointer(CursorType.CROSSHAIR);\n\n// --------------------------------------\n// store the plugin options by plugin ID\n// --------------------------------------\nchart.getOptions().getPlugins().setOptions(ChartPointer.ID, option);\n// --------------------------------------\n// or store the plugin options without plugin ID\n// --------------------------------------\nchart.getOptions().getPlugins().setOptions(option);\n\n// GLOBAL\n// Set "crosshair" overriding the default cursor\nChartPointerOptions option = new ChartPointerOptions();\noption.setCursorPointer(CursorType.CROSSHAIR);\n\n// --------------------------------------\n// store the plugin options by plugin ID\n// --------------------------------------\nDefaults.get().getGlobal().getPlugins().setOptions(ChartPointer.ID, option);\n// --------------------------------------\n// or store the plugin options without plugin ID\n// --------------------------------------\nDefaults.get().getGlobal().getPlugins().setOptions(option);\n')),(0,o.kt)("p",null,"If you need to read the plugin options, there is the specific factory, ",(0,o.kt)("a",{parentName:"p",href:"https://pepstock-org.github.io/Charba/3.3/org/pepstock/charba/client/impl/plugins/ChartPointerOptionsFactory.html"},"ChartPointerOptionsFactory")," as static reference inside the ",(0,o.kt)("a",{parentName:"p",href:"https://pepstock-org.github.io/Charba/3.3/org/pepstock/charba/client/impl/plugins/ChartPointer.html"},"plugin")," which can be used to retrieve the options from chart, as following:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"// INLINE\n// reads the options from chart\nChartPointerOptions option;\nif (chart.getOptions().getPlugins().hasOptions(ChartPointer.ID)){\n   // --------------------------------------\n   // retrieve the plugin options by plugin ID\n   // --------------------------------------\n   options = chart.getOptions().getPlugins().getOptions(ChartPointer.ID, ChartPointer.FACTORY);\n   // --------------------------------------\n   // or retrieve the plugin options without plugin ID\n   // --------------------------------------\n   options = chart.getOptions().getPlugins().getOptions(ChartPointer.FACTORY);\n}\n\n// GLOBAL\nif (Defaults.get().getGlobal().getPlugins().hasOptions(ChartPointer.ID)){\n   // --------------------------------------\n   // retrieve the plugin options by plugin ID\n   // --------------------------------------\n   options = Defaults.get().getGlobal().getPlugins().getOptions(ChartPointer.ID, ChartPointer.FACTORY);\n   // --------------------------------------\n   // or retrieve the plugin options without plugin ID\n   // --------------------------------------\n   options = Defaults.get().getGlobal().getPlugins().getOptions(ChartPointer.FACTORY);\n}\n")),(0,o.kt)("p",null,"The following are the attributes that you can set to plugin options:"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Name"),(0,o.kt)("th",{parentName:"tr",align:null},"Type"),(0,o.kt)("th",{parentName:"tr",align:null},"Default"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"cursorPointer"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/3.3/org/pepstock/charba/client/dom/enums/CursorType.html"},"CursorType")),(0,o.kt)("td",{parentName:"tr",align:null},"CursorType.POINTER"),(0,o.kt)("td",{parentName:"tr",align:null},"Cursor style applied to the canvas when is hovering a clickable element.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"elements"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/3.3/org/pepstock/charba/client/impl/plugins/enums/PointerElement.html"},"PointerElement")),(0,o.kt)("td",{parentName:"tr",align:null},"PointerElement.DATASET, PointerElement.TITLE, PointerElement.AXES, PointerElement.LEGEND"),(0,o.kt)("td",{parentName:"tr",align:null},"Chart elements where the cursor pointer will be applied if the element is hovered.")))),(0,o.kt)("p",null,"By ",(0,o.kt)("inlineCode",{parentName:"p"},"elements")," array property, you can decide on which chart elements the cursor pointer will be applied."),(0,o.kt)("p",null,"Apart for ",(0,o.kt)("inlineCode",{parentName:"p"},"PointerElement.LEGEND"),", that is always clickable, for all the others the cursor will be applied ONLY if the chart has got a relative click event handler instance."),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Element"),(0,o.kt)("th",{parentName:"tr",align:null},"Handler"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"PointerElement.DATASET"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/3.3/org/pepstock/charba/client/events/DatasetSelectionEventHandler.html"},"DatasetSelectionEventHandler"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"PointerElement.TITLE"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/3.3/org/pepstock/charba/client/events/TitleClickEventHandler.html"},"TitleClickEventHandler"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"PointerElement.AXES"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/3.3/org/pepstock/charba/client/events/AxisClickEventHandler.html"},"AxisClickEventHandler"))))))}c.isMDXComponent=!0}}]);
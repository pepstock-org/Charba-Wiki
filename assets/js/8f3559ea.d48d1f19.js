(window.webpackJsonp=window.webpackJsonp||[]).push([[76],{148:function(t,e,a){"use strict";a.r(e),a.d(e,"frontMatter",(function(){return o})),a.d(e,"metadata",(function(){return c})),a.d(e,"toc",(function(){return i})),a.d(e,"default",(function(){return d}));var r=a(3),n=a(8),b=(a(0),a(213)),l=a(214),o={id:"ChartStackedArea",title:"Stacked area chart",hide_title:!0,sidebar_label:"Stacked area"},c={unversionedId:"charts/ChartStackedArea",id:"charts/ChartStackedArea",isDocsHomePage:!1,title:"Stacked area chart",description:"Stacked Area chart",source:"@site/docs/charts/StackedArea.md",sourceDirName:"charts",slug:"/charts/ChartStackedArea",permalink:"/Charba-Wiki/docs/charts/ChartStackedArea",version:"current",sidebar_label:"Stacked area",frontMatter:{id:"ChartStackedArea",title:"Stacked area chart",hide_title:!0,sidebar_label:"Stacked area"},sidebar:"docs",previous:{title:"Bubble chart",permalink:"/Charba-Wiki/docs/charts/ChartBubble"},next:{title:"Stacked bar chart",permalink:"/Charba-Wiki/docs/charts/ChartStackedBar"}},i=[{value:"Stacked Area chart",id:"stacked-area-chart",children:[]},{value:"Dataset",id:"dataset",children:[{value:"General",id:"general",children:[]},{value:"Point styling",id:"point-styling",children:[]},{value:"Line styling",id:"line-styling",children:[]},{value:"Point interactions",id:"point-interactions",children:[]},{value:"Line interactions",id:"line-interactions",children:[]},{value:"Scriptable",id:"scriptable",children:[]}]},{value:"Data structure",id:"data-structure",children:[]},{value:"Options",id:"options",children:[]}],p={toc:i};function d(t){var e=t.components,a=Object(n.a)(t,["components"]);return Object(b.b)("wrapper",Object(r.a)({},p,a,{components:e,mdxType:"MDXLayout"}),Object(b.b)("h2",{id:"stacked-area-chart"},"Stacked Area chart"),Object(b.b)("p",null,"A stacked area chart is a way of plotting data points on a line. Often, it is used to show trend data, or the comparison of two data sets."),Object(b.b)("img",{src:Object(l.a)("/img/area.png")}),Object(b.b)("p",null,"Programmatically, you could use a line chart as following:"),Object(b.b)("pre",null,Object(b.b)("code",{parentName:"pre",className:"language-java"},"// creates the chart    \nStackedAreaChart chart = new StackedAreaChart();\n// adds to DOM\ncomponent.add(chart);\n...\n// example for Elemental2\n// gets the chart instance as DOM element\nElement element = chart.getChartElement().as();\n// adds to DOM\nDomGlobal.document.body.appendChild(element);\n")),Object(b.b)("p",null,"By ",Object(b.b)("a",{parentName:"p",href:"http://www.gwtproject.org/doc/latest/DevGuideUiBinder.html"},"UIBinder")," (",Object(b.b)("strong",{parentName:"p"},"ONLY for GWT"),"), you could use a line chart as following:"),Object(b.b)("pre",null,Object(b.b)("code",{parentName:"pre",className:"language-xml"},'<ui:UiBinder xmlns:ui="urn:ui:com.google.gwt.uibinder"\n   xmlns:g="urn:import:com.google.gwt.user.client.ui"\n   xmlns:c="urn:import:org.pepstock.charba.client.gwt.widgets">\n\n   <g:HTMLPanel  width="100%">\n      ....\n      <c:StackedAreaChartWidget ui:field="chart"/>\n      ...\n   </g:HTMLPanel>\n</ui:UiBinder> \n')),Object(b.b)("h2",{id:"dataset"},"Dataset"),Object(b.b)("p",null,"The stacked area chart allows a number of properties to be specified for each ",Object(b.b)("a",{parentName:"p",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/data/StackedAreaDataset.html"},"stacked area dataset"),". These are used to set display properties for a specific dataset."),Object(b.b)("p",null,"Every chart has got a method to create a typed dataset accordingly with the chart type. The dataset can be also created instantiating the constructor."),Object(b.b)("pre",null,Object(b.b)("code",{parentName:"pre",className:"language-java"},"// creates the chart\nStackedAreaChart chart = new StackedAreaChart();\n// creates the dataset\nStackedAreaDataset dataset = chart.newDataset();\n// sets the option\ndataset.setBackgroundColor(HtmlColor.RED);\n...\n// creates the dataset\nStackedAreaDataset datasetNew = new StackedAreaDataset();\n// sets the option\ndatasetNew.setBackgroundColor(HtmlColor.RED);\n...\n// sets the datasets to the chart\nchart.getData().setDatasets(dataset, datasetNew);\n")),Object(b.b)("p",null,"The following are the attributes that you can set:"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",{parentName:"tr",align:"left"},"Name"),Object(b.b)("th",{parentName:"tr",align:"left"},"Type"),Object(b.b)("th",{parentName:"tr",align:"left"},"Scriptable"),Object(b.b)("th",{parentName:"tr",align:"left"},"Description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"backgroundColor"),Object(b.b)("td",{parentName:"tr",align:"left"},"String - ",Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/colors/IsColor.html"},"IsColor")," - ",Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/colors/Pattern.html"},"Pattern")," - ",Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/colors/Gradient.html"},"Gradient")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"#scriptable"},"Yes")),Object(b.b)("td",{parentName:"tr",align:"left"},"The fill color/pattern under the line.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"borderCapStyle"),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/enums/CapStyle.html"},"CapStyle")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"#scriptable"},"Yes")),Object(b.b)("td",{parentName:"tr",align:"left"},"Cap style of the line. See ",Object(b.b)("a",{parentName:"td",href:"https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/lineCap"},"MDN"),".")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"borderColor"),Object(b.b)("td",{parentName:"tr",align:"left"},"String - ",Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/colors/IsColor.html"},"IsColor")," - ",Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/colors/Gradient.html"},"Gradient")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"#scriptable"},"Yes")),Object(b.b)("td",{parentName:"tr",align:"left"},"The color of the line.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"borderDash"),Object(b.b)("td",{parentName:"tr",align:"left"},"int[]"),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"#scriptable"},"Yes")),Object(b.b)("td",{parentName:"tr",align:"left"},"Length and spacing of dashes. See ",Object(b.b)("a",{parentName:"td",href:"https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash"},"MDN"),".")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"borderDashOffset"),Object(b.b)("td",{parentName:"tr",align:"left"},"double"),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"#scriptable"},"Yes")),Object(b.b)("td",{parentName:"tr",align:"left"},"Offset for line dashes. See ",Object(b.b)("a",{parentName:"td",href:"https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/lineDashOffset"},"MDN"),".")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"borderJoinStyle"),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/enums/JoinStyle.html"},"JoinStyle")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"#scriptable"},"Yes")),Object(b.b)("td",{parentName:"tr",align:"left"},"Line joint style. See ",Object(b.b)("a",{parentName:"td",href:"https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/lineJoin"},"MDN"),".")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"borderWidth"),Object(b.b)("td",{parentName:"tr",align:"left"},"int"),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"#scriptable"},"Yes")),Object(b.b)("td",{parentName:"tr",align:"left"},"The width of the line in pixels.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"cubicInterpolationMode"),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/enums/CubicInterpolationMode.html"},"CubicInterpolationMode")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"#scriptable"},"Yes")),Object(b.b)("td",{parentName:"tr",align:"left"},"Algorithm used to interpolate a smooth curve from the discrete data points.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"clip"),Object(b.b)("td",{parentName:"tr",align:"left"},"double - ",Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/data/Clip.html"},"Clip")),Object(b.b)("td",{parentName:"tr",align:"left"},"-"),Object(b.b)("td",{parentName:"tr",align:"left"},"How to clip relative to chart area. Positive value allows overflow, negative value clips that many pixels inside chart area.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"fill"),Object(b.b)("td",{parentName:"tr",align:"left"},"String - int - boolean - ",Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/enums/IsFill.html"},"IsFill")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"#scriptable"},"Yes")),Object(b.b)("td",{parentName:"tr",align:"left"},"How to fill the area under the line. See ",Object(b.b)("a",{parentName:"td",href:"../coloring/Colors#filling"},"Filling modes"),".")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"hoverBackgroundColor"),Object(b.b)("td",{parentName:"tr",align:"left"},"String - ",Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/colors/IsColor.html"},"IsColor")," - ",Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/colors/Pattern.html"},"Pattern")," - ",Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/colors/Gradient.html"},"Gradient")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"#scriptable"},"Yes")),Object(b.b)("td",{parentName:"tr",align:"left"},"The fill color/pattern under the line, when hovered.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"hoverBorderCapStyle"),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/enums/CapStyle.html"},"CapStyle")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"#scriptable"},"Yes")),Object(b.b)("td",{parentName:"tr",align:"left"},"Cap style of the line, when hovered. See ",Object(b.b)("a",{parentName:"td",href:"https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/lineCap"},"MDN"),".")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"hoverBorderColor"),Object(b.b)("td",{parentName:"tr",align:"left"},"String - ",Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/colors/IsColor.html"},"IsColor")," - ",Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/colors/Gradient.html"},"Gradient")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"#scriptable"},"Yes")),Object(b.b)("td",{parentName:"tr",align:"left"},"The color of the line, when hovered.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"hoverBorderDash"),Object(b.b)("td",{parentName:"tr",align:"left"},"int[]"),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"#scriptable"},"Yes")),Object(b.b)("td",{parentName:"tr",align:"left"},"Length and spacing of dashes, when hovered. See ",Object(b.b)("a",{parentName:"td",href:"https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash"},"MDN"),".")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"hoverBorderDashOffset"),Object(b.b)("td",{parentName:"tr",align:"left"},"int"),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"#scriptable"},"Yes")),Object(b.b)("td",{parentName:"tr",align:"left"},"Offset for line dashes, when hovered. See ",Object(b.b)("a",{parentName:"td",href:"https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/lineDashOffset"},"MDN"),".")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"hoverBorderJoinStyle"),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/enums/JoinStyle.html"},"JoinStyle")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"#scriptable"},"Yes")),Object(b.b)("td",{parentName:"tr",align:"left"},"Line joint style, when hovered. See ",Object(b.b)("a",{parentName:"td",href:"https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/lineJoin"},"MDN"),".")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"hoverBorderWidth"),Object(b.b)("td",{parentName:"tr",align:"left"},"int"),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"#scriptable"},"Yes")),Object(b.b)("td",{parentName:"tr",align:"left"},"The width of the line in pixels, when hovered.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"indexAxis"),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/enums/IndexAxis.html"},"IndexAxis")),Object(b.b)("td",{parentName:"tr",align:"left"},"-"),Object(b.b)("td",{parentName:"tr",align:"left"},"The base axis of the dataset. 'IndexAxis.X' for horizontal lines and 'IndexAxis.Y' for vertical lines.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"label"),Object(b.b)("td",{parentName:"tr",align:"left"},"String"),Object(b.b)("td",{parentName:"tr",align:"left"},"-"),Object(b.b)("td",{parentName:"tr",align:"left"},"The label for the dataset which appears in the legend and tooltips.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"order"),Object(b.b)("td",{parentName:"tr",align:"left"},"int"),Object(b.b)("td",{parentName:"tr",align:"left"},"-"),Object(b.b)("td",{parentName:"tr",align:"left"},"The drawing order of dataset. Also affects order for stacking, tooltip, and legend.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"pointBackgroundColor"),Object(b.b)("td",{parentName:"tr",align:"left"},"String[] - ",Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/colors/IsColor.html"},"IsColor"),"[] - ",Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/colors/Gradient.html"},"Gradient"),"[]"),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"#scriptable"},"Yes")),Object(b.b)("td",{parentName:"tr",align:"left"},"The fill color for points.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"pointBorderColor"),Object(b.b)("td",{parentName:"tr",align:"left"},"String[] - ",Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/colors/IsColor.html"},"IsColor"),"[] - ",Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/colors/Gradient.html"},"Gradient"),"[]"),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"#scriptable"},"Yes")),Object(b.b)("td",{parentName:"tr",align:"left"},"The border color for points.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"pointBorderWidth"),Object(b.b)("td",{parentName:"tr",align:"left"},"int[]"),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"#scriptable"},"Yes")),Object(b.b)("td",{parentName:"tr",align:"left"},"The width of the point border in pixels.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"pointHitRadius"),Object(b.b)("td",{parentName:"tr",align:"left"},"double[]"),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"#scriptable"},"Yes")),Object(b.b)("td",{parentName:"tr",align:"left"},"The pixel size of the non-displayed point that reacts to mouse events.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"pointHoverBackgroundColor"),Object(b.b)("td",{parentName:"tr",align:"left"},"String[] - ",Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/colors/IsColor.html"},"IsColor"),"[] - ",Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/colors/Gradient.html"},"Gradient"),"[]"),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"#scriptable"},"Yes")),Object(b.b)("td",{parentName:"tr",align:"left"},"Point background color when hovered.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"pointHoverBorderColor"),Object(b.b)("td",{parentName:"tr",align:"left"},"String[] - ",Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/colors/IsColor.html"},"IsColor"),"[] - ",Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/colors/Gradient.html"},"Gradient"),"[]"),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"#scriptable"},"Yes")),Object(b.b)("td",{parentName:"tr",align:"left"},"Point border color when hovered.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"pointHoverBorderWidth"),Object(b.b)("td",{parentName:"tr",align:"left"},"int[]"),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"#scriptable"},"Yes")),Object(b.b)("td",{parentName:"tr",align:"left"},"Border width of point when hovered.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"pointHoverRadius"),Object(b.b)("td",{parentName:"tr",align:"left"},"double[]"),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"#scriptable"},"Yes")),Object(b.b)("td",{parentName:"tr",align:"left"},"The radius of the point when hovered.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"pointRadius"),Object(b.b)("td",{parentName:"tr",align:"left"},"double[]"),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"#scriptable"},"Yes")),Object(b.b)("td",{parentName:"tr",align:"left"},"The radius of the point shape. If set to 0, the point is not rendered.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"pointRotation"),Object(b.b)("td",{parentName:"tr",align:"left"},"double[]"),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"#scriptable"},"Yes")),Object(b.b)("td",{parentName:"tr",align:"left"},"The rotation of the point in degrees.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"pointStyle"),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/enums/PointStyle.html"},"PointStyle"),"[] - ",Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/dom/elements/Img.html"},"Img"),"[]"),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"#scriptable"},"Yes")),Object(b.b)("td",{parentName:"tr",align:"left"},"Style of the point.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"showLine"),Object(b.b)("td",{parentName:"tr",align:"left"},"boolean"),Object(b.b)("td",{parentName:"tr",align:"left"},"-"),Object(b.b)("td",{parentName:"tr",align:"left"},"If ",Object(b.b)("inlineCode",{parentName:"td"},"false"),", the line is not drawn for this dataset.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"spanGaps"),Object(b.b)("td",{parentName:"tr",align:"left"},"boolean - double"),Object(b.b)("td",{parentName:"tr",align:"left"},"-"),Object(b.b)("td",{parentName:"tr",align:"left"},"If ",Object(b.b)("inlineCode",{parentName:"td"},"true"),", lines will be drawn between points with no or null data. If ",Object(b.b)("inlineCode",{parentName:"td"},"false"),", points with ",Object(b.b)("inlineCode",{parentName:"td"},"NaN")," data will create a break in the line. Can also be a number specifying the maximum gap length to span. The unit of the value depends on the scale used.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"stepped"),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/enums/Stepped.html"},"Stepped")),Object(b.b)("td",{parentName:"tr",align:"left"},"-"),Object(b.b)("td",{parentName:"tr",align:"left"},"If the line is shown as a stepped line.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"tension"),Object(b.b)("td",{parentName:"tr",align:"left"},"double"),Object(b.b)("td",{parentName:"tr",align:"left"},"-"),Object(b.b)("td",{parentName:"tr",align:"left"},"Bezier curve tension of the line. Set to 0 to draw straight lines. This option is ignored if monotone cubic interpolation is used.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"xAxisID"),Object(b.b)("td",{parentName:"tr",align:"left"},"String"),Object(b.b)("td",{parentName:"tr",align:"left"},"-"),Object(b.b)("td",{parentName:"tr",align:"left"},"The ID of the x axis to plot this dataset on.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"yAxisID"),Object(b.b)("td",{parentName:"tr",align:"left"},"String"),Object(b.b)("td",{parentName:"tr",align:"left"},"-"),Object(b.b)("td",{parentName:"tr",align:"left"},"The ID of the y axis to plot this dataset on.")))),Object(b.b)("h3",{id:"general"},"General"),Object(b.b)("p",null,"The general options for a line dataset can control behaviors not related to styling or interactions and they are the following:"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",{parentName:"tr",align:"left"},"Name"),Object(b.b)("th",{parentName:"tr",align:"left"},"Defaults"),Object(b.b)("th",{parentName:"tr",align:"left"},"Description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"clip"),Object(b.b)("td",{parentName:"tr",align:"left"},"Undefined.DOUBLE"),Object(b.b)("td",{parentName:"tr",align:"left"},"How to clip relative to chart area.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"indexAxis"),Object(b.b)("td",{parentName:"tr",align:"left"},"IndexAxis.X"),Object(b.b)("td",{parentName:"tr",align:"left"},"The base axis of the dataset.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"label"),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("inlineCode",{parentName:"td"},"null")),Object(b.b)("td",{parentName:"tr",align:"left"},"The label for the dataset which appears in the legend and tooltips.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"order"),Object(b.b)("td",{parentName:"tr",align:"left"},"0"),Object(b.b)("td",{parentName:"tr",align:"left"},"The drawing order of dataset. Also affects order for stacking, tooltip, and legend.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"xAxisID"),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/enums/DefaultScaleId.html"},"DefaultScaleId.X")),Object(b.b)("td",{parentName:"tr",align:"left"},"The ID of the x axis to plot this dataset on.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"yAxisID"),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/enums/DefaultScaleId.html"},"DefaultScaleId.Y")),Object(b.b)("td",{parentName:"tr",align:"left"},"The ID of the y axis to plot this dataset on.")))),Object(b.b)("h3",{id:"point-styling"},"Point styling"),Object(b.b)("p",null,"The style of each point of the dataset can be configured by the following properties:"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",{parentName:"tr",align:"left"},"Name"),Object(b.b)("th",{parentName:"tr",align:"left"},"Description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"pointBackgroundColor"),Object(b.b)("td",{parentName:"tr",align:"left"},"The fill color for points.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"pointBorderColor"),Object(b.b)("td",{parentName:"tr",align:"left"},"The border color for points.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"pointBorderWidth"),Object(b.b)("td",{parentName:"tr",align:"left"},"The width of the point border in pixels.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"pointHitRadius"),Object(b.b)("td",{parentName:"tr",align:"left"},"The pixel size of the non-displayed point that reacts to mouse events.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"pointRadius"),Object(b.b)("td",{parentName:"tr",align:"left"},"The radius of the point shape.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"pointRotation"),Object(b.b)("td",{parentName:"tr",align:"left"},"The rotation of the point in degrees.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"pointStyle"),Object(b.b)("td",{parentName:"tr",align:"left"},"Style of the point.")))),Object(b.b)("p",null,"All above options have got the fallback to the associated ",Object(b.b)("a",{parentName:"p",href:"../configuration/Elements#point"},"Point")," elements, retrievable by the following statements:"),Object(b.b)("pre",null,Object(b.b)("code",{parentName:"pre",className:"language-java"},"// from chart instance\nPoint point = chart.getOptions().getElements().getPoint();\n// sets options for all line datasets of the chart\npoint.setRadius(6);\n...\n// from defaults\nPoint defaultPoint  = Defaults.get().getGlobal().getElements().getPoint();\n// sets options for all line datasets of all charts\ndefaultPoint.setRadius(6);\n")),Object(b.b)("h3",{id:"line-styling"},"Line styling"),Object(b.b)("p",null,"The style of each line of the dataset can be configured by the following properties:"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",{parentName:"tr",align:"left"},"Name"),Object(b.b)("th",{parentName:"tr",align:"left"},"Description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"backgroundColor"),Object(b.b)("td",{parentName:"tr",align:"left"},"The fill color under the line.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"borderCapStyle"),Object(b.b)("td",{parentName:"tr",align:"left"},"Cap style of the line.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"borderColor"),Object(b.b)("td",{parentName:"tr",align:"left"},"The color of the line.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"borderDash"),Object(b.b)("td",{parentName:"tr",align:"left"},"Length and spacing of dashes.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"borderDashOffset"),Object(b.b)("td",{parentName:"tr",align:"left"},"Offset for line dashes.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"borderJoinStyle"),Object(b.b)("td",{parentName:"tr",align:"left"},"Line joint style")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"borderWidth"),Object(b.b)("td",{parentName:"tr",align:"left"},"The width of the line in pixels.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"cubicInterpolationMode"),Object(b.b)("td",{parentName:"tr",align:"left"},"Algorithm used to interpolate a smooth curve from the discrete data points.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"fill"),Object(b.b)("td",{parentName:"tr",align:"left"},"How to fill the area under the line.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"stepped"),Object(b.b)("td",{parentName:"tr",align:"left"},"If the line is shown as a stepped line.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"tension"),Object(b.b)("td",{parentName:"tr",align:"left"},"Bezier curve tension of the line.")))),Object(b.b)("p",null,"All above options have got the fallback to the associated ",Object(b.b)("a",{parentName:"p",href:"../configuration/Elements#line"},"Line")," elements, retrievable by the following statements:"),Object(b.b)("pre",null,Object(b.b)("code",{parentName:"pre",className:"language-java"},"// from chart instance\nLine line = chart.getOptions().getElements().getLine();\n// sets options for all line datasets of the chart\nline.setBorderWidth(6);\n...\n// from defaults\nLine defaultLine  = Defaults.get().getGlobal().getElements().getLine();\n// sets options for all line datasets of all charts\ndefaultLine.setBorderWidth(6);\n")),Object(b.b)("h3",{id:"point-interactions"},"Point interactions"),Object(b.b)("p",null,"The interaction with each point can be controlled with the following properties:"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",{parentName:"tr",align:"left"},"Name"),Object(b.b)("th",{parentName:"tr",align:"left"},"Description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"pointHoverBackgroundColor"),Object(b.b)("td",{parentName:"tr",align:"left"},"Point background color when hovered.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"pointHoverBorderColor"),Object(b.b)("td",{parentName:"tr",align:"left"},"Point border color when hovered.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"pointHoverBorderWidth"),Object(b.b)("td",{parentName:"tr",align:"left"},"Border width of point when hovered.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"pointHoverRadius"),Object(b.b)("td",{parentName:"tr",align:"left"},"The radius of the point when hovered.")))),Object(b.b)("p",null,"All above options have got the fallback to the associated ",Object(b.b)("a",{parentName:"p",href:"../configuration/Elements#point"},"Point")," elements, retrievable by the following statements:"),Object(b.b)("pre",null,Object(b.b)("code",{parentName:"pre",className:"language-java"},"// from chart instance\nPoint point = chart.getOptions().getElements().getPoint();\n// sets options for all line datasets of the chart\npoint.setRadius(6);\n...\n// from defaults\nPoint defaultPoint  = Defaults.get().getGlobal().getElements().getPoint();\n// sets options for all line datasets of all charts\ndefaultPoint.setRadius(6);\n")),Object(b.b)("h3",{id:"line-interactions"},"Line interactions"),Object(b.b)("p",null,"The interaction with each line can be controlled with the following properties:"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",{parentName:"tr",align:"left"},"Name"),Object(b.b)("th",{parentName:"tr",align:"left"},"Description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"hoverBackgroundColor"),Object(b.b)("td",{parentName:"tr",align:"left"},"The fill color under the line, when hovered.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"hoverBorderCapStyle"),Object(b.b)("td",{parentName:"tr",align:"left"},"Cap style of the line,  when hovered.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"hoverBorderColor"),Object(b.b)("td",{parentName:"tr",align:"left"},"The color of the line, when hovered.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"hoverBorderDash"),Object(b.b)("td",{parentName:"tr",align:"left"},"Length and spacing of dashes, when hovered.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"hoverBorderDashOffset"),Object(b.b)("td",{parentName:"tr",align:"left"},"Offset for line dashes, when hovered.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"hoverBorderJoinStyle"),Object(b.b)("td",{parentName:"tr",align:"left"},"Line joint style, when hovered.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"hoverBorderWidth"),Object(b.b)("td",{parentName:"tr",align:"left"},"The width of the line in pixels, when hovered.")))),Object(b.b)("p",null,"All above options have got the fallback to the associated ",Object(b.b)("a",{parentName:"p",href:"../configuration/Elements#line"},"Line")," elements, retrievable by the following statements:"),Object(b.b)("pre",null,Object(b.b)("code",{parentName:"pre",className:"language-java"},"// from chart instance\nLine line = chart.getOptions().getElements().getLine();\n// sets options for all line datasets of the chart\nline.setBorderWidth(6);\n...\n// from defaults\nLine defaultLine  = Defaults.get().getGlobal().getElements().getLine();\n// sets options for all line datasets of all charts\ndefaultLine.setBorderWidth(6);\n")),Object(b.b)("h3",{id:"scriptable"},"Scriptable"),Object(b.b)("p",null,"Scriptable options at dataset level accept a callback which is called for each of the underlying data values. See more details in ",Object(b.b)("a",{parentName:"p",href:"../configuration/ScriptableOptions"},"Configuring charts")," section. "),Object(b.b)("pre",null,Object(b.b)("code",{parentName:"pre",className:"language-java"},"// creates chart\nStackedAreaChart chart = new StackedAreaChart();\n// creates dataset\nStackedAreaDataset dataset = chart.newDataset();\n// sets the option by a callback \ndataset.setBackgroundColor(new ColorCallback<DatasetContext>(){\n\n   @Override\n   public IsColor invoke(DatasetContext context){\n      // logic\n      return color;\n   }\n});\n")),Object(b.b)("p",null,"The following options can be set by a callback:"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",{parentName:"tr",align:"left"},"Name"),Object(b.b)("th",{parentName:"tr",align:"left"},"Callback"),Object(b.b)("th",{parentName:"tr",align:"left"},"Returned types"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"backgroundColor"),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/callbacks/ColorCallback.html"},"ColorCallback"),"<","DatasetContext",">"),Object(b.b)("td",{parentName:"tr",align:"left"},"String - ",Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/colors/IsColor.html"},"IsColor")," - ",Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/colors/Pattern.html"},"Pattern")," - ",Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/colors/Gradient.html"},"Gradient"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"borderCapStyle"),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/callbacks/CapStyleCallback.html"},"CapStyleCallback"),"<","DatasetContext",">"),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/enums/CapStyle.html"},"CapStyle"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"borderColor"),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/callbacks/ColorCallback.html"},"ColorCallback"),"<","DatasetContext",">"),Object(b.b)("td",{parentName:"tr",align:"left"},"String - ",Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/colors/IsColor.html"},"IsColor")," - ",Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/colors/Gradient.html"},"Gradient"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"borderDash"),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/callbacks/BorderDashCallback.html"},"BorderDashCallback"),"<","DatasetContext",">"),Object(b.b)("td",{parentName:"tr",align:"left"},"List","<","Integer",">")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"borderDashOffset"),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/callbacks/BorderDashOffsetCallback.html"},"BorderDashOffsetCallback"),"<","DatasetContext",">"),Object(b.b)("td",{parentName:"tr",align:"left"},"double")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"borderJoinStyle"),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/callbacks/JoinStyleCallback.html"},"JoinStyleCallback"),"<","DatasetContext",">"),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/enums/JoinStyle.html"},"JoinStyle"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"borderWidth"),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/callbacks/WidthCallback.html"},"WidthCallback"),"<","DatasetContext",">"),Object(b.b)("td",{parentName:"tr",align:"left"},"int")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"cubicInterpolationMode"),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/callbacks/CubicInterpolationModeCallback.html"},"CubicInterpolationModeCallback")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/enums/CubicInterpolationMode.html"},"CubicInterpolationMode"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"fill"),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/callbacks/FillCallback.html"},"FillCallback")),Object(b.b)("td",{parentName:"tr",align:"left"},"String - int - boolean - ",Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/enums/IsFill.html"},"IsFill"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"hoverBackgroundColor"),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/callbacks/ColorCallback.html"},"ColorCallback"),"<","DatasetContext",">"),Object(b.b)("td",{parentName:"tr",align:"left"},"String - ",Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/colors/IsColor.html"},"IsColor")," - ",Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/colors/Pattern.html"},"Pattern")," - ",Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/colors/Gradient.html"},"Gradient"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"hoverBorderCapStyle"),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/callbacks/CapStyleCallback.html"},"CapStyleCallback"),"<","DatasetContext",">"),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/enums/CapStyle.html"},"CapStyle"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"hoverBorderColor"),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/callbacks/ColorCallback.html"},"ColorCallback"),"<","DatasetContext",">"),Object(b.b)("td",{parentName:"tr",align:"left"},"String - ",Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/colors/IsColor.html"},"IsColor")," - ",Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/colors/Gradient.html"},"Gradient"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"hoverBorderDash"),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/callbacks/BorderDashCallback.html"},"BorderDashCallback"),"<","DatasetContext",">"),Object(b.b)("td",{parentName:"tr",align:"left"},"List","<","Integer",">")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"hoverBorderDashOffset"),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/callbacks/BorderDashOffsetCallback.html"},"BorderDashOffsetCallback"),"<","DatasetContext",">"),Object(b.b)("td",{parentName:"tr",align:"left"},"int")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"hoverBorderJoinStyle"),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/callbacks/JoinStyleCallback.html"},"JoinStyleCallback"),"<","DatasetContext",">"),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/enums/JoinStyle.html"},"JoinStyle"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"hoverBorderWidth"),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/callbacks/WidthCallback.html"},"WidthCallback"),"<","DatasetContext",">"),Object(b.b)("td",{parentName:"tr",align:"left"},"int")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"pointBackgroundColor"),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/callbacks/ColorCallback.html"},"ColorCallback"),"<","DatasetContext",">"),Object(b.b)("td",{parentName:"tr",align:"left"},"String - ",Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/colors/IsColor.html"},"IsColor")," - ",Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/colors/Gradient.html"},"Gradient"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"pointBorderColor"),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/callbacks/ColorCallback.html"},"ColorCallback"),"<","DatasetContext",">"),Object(b.b)("td",{parentName:"tr",align:"left"},"String - ",Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/colors/IsColor.html"},"IsColor")," - ",Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/colors/Gradient.html"},"Gradient"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"pointBorderWidth"),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/callbacks/WidthCallback.html"},"WidthCallback"),"<","DatasetContext",">"),Object(b.b)("td",{parentName:"tr",align:"left"},"int")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"pointHitRadius"),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/callbacks/RadiusCallback.html"},"RadiusCallback"),"<","DatasetContext",">"),Object(b.b)("td",{parentName:"tr",align:"left"},"double")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"pointHoverBackgroundColor"),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/callbacks/ColorCallback.html"},"ColorCallback"),"<","DatasetContext",">"),Object(b.b)("td",{parentName:"tr",align:"left"},"String - ",Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/colors/IsColor.html"},"IsColor")," - ",Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/colors/Gradient.html"},"Gradient"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"pointHoverBorderColor"),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/callbacks/ColorCallback.html"},"ColorCallback"),"<","DatasetContext",">"),Object(b.b)("td",{parentName:"tr",align:"left"},"String - ",Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/colors/IsColor.html"},"IsColor")," - ",Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/colors/Gradient.html"},"Gradient"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"pointHoverBorderWidth"),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/callbacks/WidthCallback.html"},"WidthCallback"),"<","DatasetContext",">"),Object(b.b)("td",{parentName:"tr",align:"left"},"int")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"pointHoverRadius"),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/callbacks/RadiusCallback.html"},"RadiusCallback"),"<","DatasetContext",">"),Object(b.b)("td",{parentName:"tr",align:"left"},"double")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"pointRadius"),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/callbacks/RadiusCallback.html"},"RadiusCallback"),"<","DatasetContext",">"),Object(b.b)("td",{parentName:"tr",align:"left"},"double")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"pointRotation"),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/callbacks/RotationCallback.html"},"RotationCallback"),"<","DatasetContext",">"),Object(b.b)("td",{parentName:"tr",align:"left"},"double")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"pointStyle"),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/callbacks/PointStyleCallback.html"},"PointStyleCallback")),Object(b.b)("td",{parentName:"tr",align:"left"},Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/enums/PointStyle.html"},"PointStyle")," - ",Object(b.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/dom/elements/Img.html"},"Img"))))),Object(b.b)("h2",{id:"data-structure"},"Data structure"),Object(b.b)("p",null,"The data of a dataset for a stacked area chart are passed by an array or list of doubles and the x axis is generally a category. When a line chart is created with a category axis, the ",Object(b.b)("a",{parentName:"p",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/data/Data.html#setLabels-java.lang.String...-"},"labels property of the data object")," must be specified."),Object(b.b)("pre",null,Object(b.b)("code",{parentName:"pre",className:"language-java"},"// sets data as an array of doubles\ndataset.setData(1,2,3,4,6);\n\n// sets data as a list of double\nList<Double> list = new LinkedList<>();\nlist.add(1);\nlist.add(2);\nlist.add(3);\ndataset.setData(list);\n")),Object(b.b)("h2",{id:"options"},"Options"),Object(b.b)("p",null,"The stacked area chart specific ",Object(b.b)("a",{parentName:"p",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/configuration/StackedOptions.html"},"options implementation")," to be configured. These options are merged with the global chart configuration options to form the options passed to the chart."),Object(b.b)("pre",null,Object(b.b)("code",{parentName:"pre",className:"language-java"},"// creates chart\nStackedAreaChart chart = new StackedAreaChart();\n// gets the chart options\nStackedOptions options = chart.getOptions();\n// sets option\noptions.setResponsive(true);\n")))}d.isMDXComponent=!0},213:function(t,e,a){"use strict";a.d(e,"a",(function(){return d})),a.d(e,"b",(function(){return m}));var r=a(0),n=a.n(r);function b(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function l(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,r)}return a}function o(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?l(Object(a),!0).forEach((function(e){b(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function c(t,e){if(null==t)return{};var a,r,n=function(t,e){if(null==t)return{};var a,r,n={},b=Object.keys(t);for(r=0;r<b.length;r++)a=b[r],e.indexOf(a)>=0||(n[a]=t[a]);return n}(t,e);if(Object.getOwnPropertySymbols){var b=Object.getOwnPropertySymbols(t);for(r=0;r<b.length;r++)a=b[r],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(n[a]=t[a])}return n}var i=n.a.createContext({}),p=function(t){var e=n.a.useContext(i),a=e;return t&&(a="function"==typeof t?t(e):o(o({},e),t)),a},d=function(t){var e=p(t.components);return n.a.createElement(i.Provider,{value:e},t.children)},s={inlineCode:"code",wrapper:function(t){var e=t.children;return n.a.createElement(n.a.Fragment,{},e)}},h=n.a.forwardRef((function(t,e){var a=t.components,r=t.mdxType,b=t.originalType,l=t.parentName,i=c(t,["components","mdxType","originalType","parentName"]),d=p(a),h=r,m=d["".concat(l,".").concat(h)]||d[h]||s[h]||b;return a?n.a.createElement(m,o(o({ref:e},i),{},{components:a})):n.a.createElement(m,o({ref:e},i))}));function m(t,e){var a=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var b=a.length,l=new Array(b);l[0]=h;var o={};for(var c in e)hasOwnProperty.call(e,c)&&(o[c]=e[c]);o.originalType=t,o.mdxType="string"==typeof t?t:r,l[1]=o;for(var i=2;i<b;i++)l[i]=a[i];return n.a.createElement.apply(null,l)}return n.a.createElement.apply(null,a)}h.displayName="MDXCreateElement"},214:function(t,e,a){"use strict";a.d(e,"b",(function(){return b})),a.d(e,"a",(function(){return l}));var r=a(16),n=a(215);function b(){var t=Object(r.default)().siteConfig,e=(t=void 0===t?{}:t).baseUrl,a=void 0===e?"/":e,b=t.url;return{withBaseUrl:function(t,e){return function(t,e,a,r){var b=void 0===r?{}:r,l=b.forcePrependBaseUrl,o=void 0!==l&&l,c=b.absolute,i=void 0!==c&&c;if(!a)return a;if(a.startsWith("#"))return a;if(Object(n.b)(a))return a;if(o)return e+a;var p=a.startsWith(e)?a:e+a.replace(/^\//,"");return i?t+p:p}(b,a,t,e)}}}function l(t,e){return void 0===e&&(e={}),(0,b().withBaseUrl)(t,e)}},215:function(t,e,a){"use strict";function r(t){return!0===/^(\w*:|\/\/)/.test(t)}function n(t){return void 0!==t&&!r(t)}a.d(e,"b",(function(){return r})),a.d(e,"a",(function(){return n}))}}]);
(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{209:function(t,e,a){"use strict";a.d(e,"a",(function(){return p})),a.d(e,"b",(function(){return g}));var r=a(0),n=a.n(r);function l(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function b(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,r)}return a}function c(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?b(Object(a),!0).forEach((function(e){l(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):b(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function i(t,e){if(null==t)return{};var a,r,n=function(t,e){if(null==t)return{};var a,r,n={},l=Object.keys(t);for(r=0;r<l.length;r++)a=l[r],e.indexOf(a)>=0||(n[a]=t[a]);return n}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(r=0;r<l.length;r++)a=l[r],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(n[a]=t[a])}return n}var o=n.a.createContext({}),s=function(t){var e=n.a.useContext(o),a=e;return t&&(a="function"==typeof t?t(e):c(c({},e),t)),a},p=function(t){var e=s(t.components);return n.a.createElement(o.Provider,{value:e},t.children)},d={inlineCode:"code",wrapper:function(t){var e=t.children;return n.a.createElement(n.a.Fragment,{},e)}},m=n.a.forwardRef((function(t,e){var a=t.components,r=t.mdxType,l=t.originalType,b=t.parentName,o=i(t,["components","mdxType","originalType","parentName"]),p=s(a),m=r,g=p["".concat(b,".").concat(m)]||p[m]||d[m]||l;return a?n.a.createElement(g,c(c({ref:e},o),{},{components:a})):n.a.createElement(g,c({ref:e},o))}));function g(t,e){var a=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var l=a.length,b=new Array(l);b[0]=m;var c={};for(var i in e)hasOwnProperty.call(e,i)&&(c[i]=e[i]);c.originalType=t,c.mdxType="string"==typeof t?t:r,b[1]=c;for(var o=2;o<l;o++)b[o]=a[o];return n.a.createElement.apply(null,b)}return n.a.createElement.apply(null,a)}m.displayName="MDXCreateElement"},210:function(t,e,a){"use strict";a.d(e,"b",(function(){return l})),a.d(e,"a",(function(){return b}));var r=a(16),n=a(211);function l(){var t=Object(r.default)().siteConfig,e=(t=void 0===t?{}:t).baseUrl,a=void 0===e?"/":e,l=t.url;return{withBaseUrl:function(t,e){return function(t,e,a,r){var l=void 0===r?{}:r,b=l.forcePrependBaseUrl,c=void 0!==b&&b,i=l.absolute,o=void 0!==i&&i;if(!a)return a;if(a.startsWith("#"))return a;if(Object(n.b)(a))return a;if(c)return e+a;var s=a.startsWith(e)?a:e+a.replace(/^\//,"");return o?t+s:s}(l,a,t,e)}}}function b(t,e){return void 0===e&&(e={}),(0,l().withBaseUrl)(t,e)}},211:function(t,e,a){"use strict";function r(t){return!0===/^(\w*:|\/\/)/.test(t)}function n(t){return void 0!==t&&!r(t)}a.d(e,"b",(function(){return r})),a.d(e,"a",(function(){return n}))},79:function(t,e,a){"use strict";a.r(e),a.d(e,"frontMatter",(function(){return c})),a.d(e,"metadata",(function(){return i})),a.d(e,"toc",(function(){return o})),a.d(e,"default",(function(){return p}));var r=a(3),n=a(8),l=(a(0),a(209)),b=a(210),c={id:"CartesianCategoryAxes",title:"Cartesian category",hide_title:!0,sidebar_label:"Category"},i={unversionedId:"axes/CartesianCategoryAxes",id:"axes/CartesianCategoryAxes",isDocsHomePage:!1,title:"Cartesian category",description:"Cartesian Category Axes",source:"@site/docs/axes/Category.md",sourceDirName:"axes",slug:"/axes/CartesianCategoryAxes",permalink:"/Charba-Wiki/docs/axes/CartesianCategoryAxes",version:"current",sidebar_label:"Category",frontMatter:{id:"CartesianCategoryAxes",title:"Cartesian category",hide_title:!0,sidebar_label:"Category"},sidebar:"docs",previous:{title:"Cartesian axes",permalink:"/Charba-Wiki/docs/axes/CartesianAxes"},next:{title:"Linear",permalink:"/Charba-Wiki/docs/axes/CartesianLinearAxes"}},o=[{value:"Cartesian Category Axes",id:"cartesian-category-axes",children:[]},{value:"Options",id:"options",children:[]},{value:"Ticks",id:"ticks",children:[{value:"Scriptable",id:"scriptable",children:[]},{value:"Callback",id:"callback",children:[]}]}],s={toc:o};function p(t){var e=t.components,a=Object(n.a)(t,["components"]);return Object(l.b)("wrapper",Object(r.a)({},s,a,{components:e,mdxType:"MDXLayout"}),Object(l.b)("h2",{id:"cartesian-category-axes"},"Cartesian Category Axes"),Object(l.b)("p",null,"The ",Object(l.b)("a",{parentName:"p",href:"https://www.pepstock.org/Charba/4.0/org/pepstock/charba/client/configuration/CartesianCategoryAxis.html"},"category axis")," will draw the labels from one of the label arrays included in the chart data."),Object(l.b)("img",{src:Object(b.a)("/img/cartesianCategory.png")}),Object(l.b)("p",null,"Here are some example how to create category axes:"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-java"},'// creates a category axis with default scale id "x" and default kind "x" \nCartesianCategoryAxis axis1 = new CartesianCategoryAxis(chart);\n\n// creates a category axis with scale id "my-axis" and default kind "x" \nCartesianCategoryAxis axis2 = new CartesianCategoryAxis(chart, "my-axis");\n\n// creates a category axis with scale id "my-axis" and default kind "x" \nCartesianCategoryAxis axis3 = new CartesianCategoryAxis(chart, IsScaleId.create("my-axis"));\n\n// creates a category axis with default scale id "x" and custom kind "x" \nCartesianCategoryAxis axis4 = new CartesianCategoryAxis(chart, AxisKind.X);\n\n// creates a category axis with scale id "my-axis" and custom kind "x" \nCartesianCategoryAxis axis5 = new CartesianCategoryAxis(chart, "my-axis", AxisKind.X;\n\n// creates a category axis with scale id "my-axis" and custom kind "x" \nIsScaleId myAxis = IsScaleId.create("my-axis");\nCartesianCategoryAxis axis6 = new CartesianCategoryAxis(chart, myAxis, AxisKind.X);\n\n// adds axes to chart configuration\nchart.getOptions().setAxes(axis1, ...);\n')),Object(l.b)("h2",{id:"options"},"Options"),Object(l.b)("p",null,"The cartesian category axis allows to define a number of properties, used to display the data."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-java"},"// creates a category axis \nCartesianCategoryAxis axis = new CartesianCategoryAxis(chart);\n// sets and gets the reverse value\naxis.setReverse(true);\n\nboolean reverse = axis.isReverse();\n")),Object(l.b)("p",null,"The following are the attributes that you can set:"),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",{parentName:"tr",align:"left"},"Name"),Object(l.b)("th",{parentName:"tr",align:"left"},"Type"),Object(l.b)("th",{parentName:"tr",align:"left"},"Description"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:"left"},"alignToPixels"),Object(l.b)("td",{parentName:"tr",align:"left"},"boolean"),Object(l.b)("td",{parentName:"tr",align:"left"},"Align pixel values to device pixels.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:"left"},"backgroundColor"),Object(l.b)("td",{parentName:"tr",align:"left"},"String - ",Object(l.b)("a",{parentName:"td",href:"https://www.pepstock.org/Charba/4.0/org/pepstock/charba/client/colors/IsColor.html"},"IsColor")),Object(l.b)("td",{parentName:"tr",align:"left"},"The background color of scale area.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:"left"},"bounds"),Object(l.b)("td",{parentName:"tr",align:"left"},Object(l.b)("a",{parentName:"td",href:"https://www.pepstock.org/Charba/4.0/org/pepstock/charba/client/enums/Bounds.html"},"Bounds")),Object(l.b)("td",{parentName:"tr",align:"left"},"Determines the scale bounds on axis.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:"left"},"display"),Object(l.b)("td",{parentName:"tr",align:"left"},"boolean - ",Object(l.b)("a",{parentName:"td",href:"https://www.pepstock.org/Charba/4.0/org/pepstock/charba/client/enums/Display.html"},"Display")),Object(l.b)("td",{parentName:"tr",align:"left"},"If ",Object(l.b)("inlineCode",{parentName:"td"},"Display.TRUE"),", the axis is shown.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:"left"},"max"),Object(l.b)("td",{parentName:"tr",align:"left"},"String"),Object(l.b)("td",{parentName:"tr",align:"left"},"User defined maximum string for the scale, overrides maximum value from data.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:"left"},"min"),Object(l.b)("td",{parentName:"tr",align:"left"},"String"),Object(l.b)("td",{parentName:"tr",align:"left"},"User defined minimum string for the scale, overrides minimum value from data.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:"left"},"labels"),Object(l.b)("td",{parentName:"tr",align:"left"},Object(l.b)("a",{parentName:"td",href:"https://www.pepstock.org/Charba/4.0/org/pepstock/charba/client/data/Labels.html"},"Labels")),Object(l.b)("td",{parentName:"tr",align:"left"},"The labels to display.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:"left"},"offset"),Object(l.b)("td",{parentName:"tr",align:"left"},"boolean"),Object(l.b)("td",{parentName:"tr",align:"left"},"If ",Object(l.b)("inlineCode",{parentName:"td"},"true"),", extra space is added to the both edges and the axis is scaled to fit in the chart area.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:"left"},"position"),Object(l.b)("td",{parentName:"tr",align:"left"},Object(l.b)("a",{parentName:"td",href:"https://www.pepstock.org/Charba/4.0/org/pepstock/charba/client/enums/AxisPosition.html"},"AxisPosition")),Object(l.b)("td",{parentName:"tr",align:"left"},"Position of the axis")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:"left"},"reverse"),Object(l.b)("td",{parentName:"tr",align:"left"},"boolean"),Object(l.b)("td",{parentName:"tr",align:"left"},"Reverses order of tick labels.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:"left"},"singleStacked"),Object(l.b)("td",{parentName:"tr",align:"left"},"boolean"),Object(l.b)("td",{parentName:"tr",align:"left"},"If you might want to stack positive and negative values together.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:"left"},"stacked"),Object(l.b)("td",{parentName:"tr",align:"left"},"boolean"),Object(l.b)("td",{parentName:"tr",align:"left"},"If the axis are stacked.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:"left"},"weight"),Object(l.b)("td",{parentName:"tr",align:"left"},"int"),Object(l.b)("td",{parentName:"tr",align:"left"},"The weight used to sort the axis. Higher weights are further away from the chart area.")))),Object(l.b)("h2",{id:"ticks"},"Ticks"),Object(l.b)("p",null,"The category axis provides the following options for configuring ",Object(l.b)("a",{parentName:"p",href:"https://www.pepstock.org/Charba/4.0/org/pepstock/charba/client/configuration/CartesianCategoryTick.html"},"tick marks"),"."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-java"},"// creates a category axis \nCartesianCategoryAxis axis = new CartesianCategoryAxis(chart);\n// sets and gets the max value\naxis.getTicks().setColor(HtmlColor.RED);\n\nIsColor color = axis.gteTicks().getColor();\n")),Object(l.b)("img",{src:Object(b.a)("/img/categoryTicks.png")}),Object(l.b)("p",null,"The following are the attributes that you can set:"),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",{parentName:"tr",align:"left"},"Name"),Object(l.b)("th",{parentName:"tr",align:"left"},"Type"),Object(l.b)("th",{parentName:"tr",align:"left"},"Scriptable"),Object(l.b)("th",{parentName:"tr",align:"left"},"Description"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:"left"},"align"),Object(l.b)("td",{parentName:"tr",align:"left"},Object(l.b)("a",{parentName:"td",href:"https://www.pepstock.org/Charba/4.0/org/pepstock/charba/client/enums/ElementAlign.html"},"ElementAlign")),Object(l.b)("td",{parentName:"tr",align:"left"},"-"),Object(l.b)("td",{parentName:"tr",align:"left"},"The tick alignment along the axis.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:"left"},"autoSkip"),Object(l.b)("td",{parentName:"tr",align:"left"},"boolean"),Object(l.b)("td",{parentName:"tr",align:"left"},"-"),Object(l.b)("td",{parentName:"tr",align:"left"},"If ",Object(l.b)("inlineCode",{parentName:"td"},"true"),", automatically calculates how many labels that can be shown and hides labels accordingly. Labels will be rotated up to ",Object(l.b)("inlineCode",{parentName:"td"},"maxRotation")," before skipping any. Turn ",Object(l.b)("inlineCode",{parentName:"td"},"autoSkip")," off to show all labels no matter what.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:"left"},"autoSkipPadding"),Object(l.b)("td",{parentName:"tr",align:"left"},"int"),Object(l.b)("td",{parentName:"tr",align:"left"},"-"),Object(l.b)("td",{parentName:"tr",align:"left"},"The padding between the ticks on the horizontal axis when autoSkip is enabled.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:"left"},"backdropColor"),Object(l.b)("td",{parentName:"tr",align:"left"},"String - ",Object(l.b)("a",{parentName:"td",href:"https://www.pepstock.org/Charba/4.0/org/pepstock/charba/client/colors/IsColor.html"},"IsColor")),Object(l.b)("td",{parentName:"tr",align:"left"},Object(l.b)("a",{parentName:"td",href:"#scriptable"},"Yes")),Object(l.b)("td",{parentName:"tr",align:"left"},"Color of label backdrops.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:"left"},"backdropPadding"),Object(l.b)("td",{parentName:"tr",align:"left"},Object(l.b)("a",{parentName:"td",href:"https://www.pepstock.org/Charba/4.0/org/pepstock/charba/client/configuration/Padding.html"},"Padding")),Object(l.b)("td",{parentName:"tr",align:"left"},Object(l.b)("a",{parentName:"td",href:"#scriptable"},"Yes")),Object(l.b)("td",{parentName:"tr",align:"left"},"The padding of tick backdrop.",Object(l.b)("br",null),"See ",Object(l.b)("a",{parentName:"td",href:"../configuration/Commons#padding"},"padding documentation")," for more details.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:"left"},"color"),Object(l.b)("td",{parentName:"tr",align:"left"},"String - ",Object(l.b)("a",{parentName:"td",href:"https://www.pepstock.org/Charba/4.0/org/pepstock/charba/client/colors/IsColor.html"},"IsColor")),Object(l.b)("td",{parentName:"tr",align:"left"},Object(l.b)("a",{parentName:"td",href:"#scriptable"},"Yes")),Object(l.b)("td",{parentName:"tr",align:"left"},"Color of ticks.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:"left"},"crossAlign"),Object(l.b)("td",{parentName:"tr",align:"left"},Object(l.b)("a",{parentName:"td",href:"https://www.pepstock.org/Charba/4.0/org/pepstock/charba/client/enums/CrossAlign.html"},"CrossAlign")),Object(l.b)("td",{parentName:"tr",align:"left"},"-"),Object(l.b)("td",{parentName:"tr",align:"left"},"The tick alignment perpendicular to the axis.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:"left"},"display"),Object(l.b)("td",{parentName:"tr",align:"left"},"boolean"),Object(l.b)("td",{parentName:"tr",align:"left"},"-"),Object(l.b)("td",{parentName:"tr",align:"left"},"If ",Object(l.b)("inlineCode",{parentName:"td"},"true"),", the tick marks are shown.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:"left"},"font"),Object(l.b)("td",{parentName:"tr",align:"left"},Object(l.b)("a",{parentName:"td",href:"https://www.pepstock.org/Charba/4.0/org/pepstock/charba/client/options/Font.html"},"Font")),Object(l.b)("td",{parentName:"tr",align:"left"},Object(l.b)("a",{parentName:"td",href:"#scriptable"},"Yes")),Object(l.b)("td",{parentName:"tr",align:"left"},"Font of ticks.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:"left"},"labelOffset"),Object(l.b)("td",{parentName:"tr",align:"left"},"int"),Object(l.b)("td",{parentName:"tr",align:"left"},"-"),Object(l.b)("td",{parentName:"tr",align:"left"},"Distance in pixels to offset the label from the centre point of the tick (in the x-direction for the x-axis, and the y-direction for the y-axis).",Object(l.b)("br",null),Object(l.b)("br",null),"Note: ",Object(l.b)("em",{parentName:"td"},"This can cause labels at the edges to be cropped by the edge of the canvas"),".")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:"left"},"maxRotation"),Object(l.b)("td",{parentName:"tr",align:"left"},"int"),Object(l.b)("td",{parentName:"tr",align:"left"},"-"),Object(l.b)("td",{parentName:"tr",align:"left"},"The maximum rotation for tick labels when rotating to condense labels.",Object(l.b)("br",null),Object(l.b)("br",null),"Note: ",Object(l.b)("em",{parentName:"td"},"Rotation doesn't occur until necessary and only applicable to horizontal scales."))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:"left"},"minRotation"),Object(l.b)("td",{parentName:"tr",align:"left"},"int"),Object(l.b)("td",{parentName:"tr",align:"left"},"-"),Object(l.b)("td",{parentName:"tr",align:"left"},"The minimum rotation for tick labels.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:"left"},"mirror"),Object(l.b)("td",{parentName:"tr",align:"left"},"boolean"),Object(l.b)("td",{parentName:"tr",align:"left"},"-"),Object(l.b)("td",{parentName:"tr",align:"left"},"The flips tick labels around axis, displaying the labels inside the chart instead of outside.",Object(l.b)("br",null),Object(l.b)("br",null),"Note: ",Object(l.b)("em",{parentName:"td"},"Only applicable to vertical scales."))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:"left"},"padding"),Object(l.b)("td",{parentName:"tr",align:"left"},"int"),Object(l.b)("td",{parentName:"tr",align:"left"},"-"),Object(l.b)("td",{parentName:"tr",align:"left"},"The padding between the tick label and the axis.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:"left"},"sampleSize"),Object(l.b)("td",{parentName:"tr",align:"left"},"int"),Object(l.b)("td",{parentName:"tr",align:"left"},"-"),Object(l.b)("td",{parentName:"tr",align:"left"},"The number of ticks to examine when deciding how many labels will fit. Setting a smaller value will be faster, but may be less accurate when there is large variability in label length.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:"left"},"showLabelBackdrop"),Object(l.b)("td",{parentName:"tr",align:"left"},"boolean"),Object(l.b)("td",{parentName:"tr",align:"left"},Object(l.b)("a",{parentName:"td",href:"#scriptable"},"Yes")),Object(l.b)("td",{parentName:"tr",align:"left"},"If ",Object(l.b)("inlineCode",{parentName:"td"},"true"),", draw a background behind the tick labels")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:"left"},"textStrokeColor"),Object(l.b)("td",{parentName:"tr",align:"left"},"String - ",Object(l.b)("a",{parentName:"td",href:"https://www.pepstock.org/Charba/4.0/org/pepstock/charba/client/colors/IsColor.html"},"IsColor")),Object(l.b)("td",{parentName:"tr",align:"left"},Object(l.b)("a",{parentName:"td",href:"#scriptable"},"Yes")),Object(l.b)("td",{parentName:"tr",align:"left"},"The color of the stroke around the text.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:"left"},"textStrokeWidth"),Object(l.b)("td",{parentName:"tr",align:"left"},"int"),Object(l.b)("td",{parentName:"tr",align:"left"},Object(l.b)("a",{parentName:"td",href:"#scriptable"},"Yes")),Object(l.b)("td",{parentName:"tr",align:"left"},"Stroke width around the text.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:"left"},"z"),Object(l.b)("td",{parentName:"tr",align:"left"},"int"),Object(l.b)("td",{parentName:"tr",align:"left"},"-"),Object(l.b)("td",{parentName:"tr",align:"left"},"z-index of tick layer. Useful when ticks are drawn on chart area. Values less than or equals to 0 are drawn under data sets, greater than 0 on top.")))),Object(l.b)("p",null,"For both the ",Object(l.b)("inlineCode",{parentName:"p"},"min")," and ",Object(l.b)("inlineCode",{parentName:"p"},"max")," properties, the value must be in the ",Object(l.b)("inlineCode",{parentName:"p"},"labels")," array."),Object(l.b)("p",null,"The further customization of ticks, a ",Object(l.b)("a",{parentName:"p",href:"#callback"},"callback")," is provided."),Object(l.b)("h3",{id:"scriptable"},"Scriptable"),Object(l.b)("p",null,"Scriptable options at ticks level accept a callback which is called for each of the underlying data values. See more details in ",Object(l.b)("a",{parentName:"p",href:"../configuration/ScriptableOptions"},"Configuring charts")," section. "),Object(l.b)("p",null,"All scriptable options callbacks will get a ",Object(l.b)("a",{parentName:"p",href:"../configuration/ScriptableOptions#scale-scriptable-options-context"},"ScaleContext")," instance."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-java"},"// creates a category axis \nCartesianCategoryAxis axis = new CartesianCategoryAxis(chart);\n// sets the option by a callback \naxis.getTicks().setColor(new ColorCallback<ScaleContext>(){\n\n   @Override\n   public IsColor invoke(ScaleContext context){\n      // logic\n      return color;\n   }\n});\n")),Object(l.b)("p",null,"The following options can be set by a callback:"),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",{parentName:"tr",align:"left"},"Name"),Object(l.b)("th",{parentName:"tr",align:"left"},"Callback"),Object(l.b)("th",{parentName:"tr",align:"left"},"Returned types"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:"left"},"backdropColor"),Object(l.b)("td",{parentName:"tr",align:"left"},Object(l.b)("a",{parentName:"td",href:"https://www.pepstock.org/Charba/4.0/org/pepstock/charba/client/callbacks/ColorCallback.html"},"ColorCallback"),"<","ScaleContext",">"),Object(l.b)("td",{parentName:"tr",align:"left"},"String - ",Object(l.b)("a",{parentName:"td",href:"https://www.pepstock.org/Charba/4.0/org/pepstock/charba/client/colors/IsColor.html"},"IsColor"))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:"left"},"backdropPadding"),Object(l.b)("td",{parentName:"tr",align:"left"},Object(l.b)("a",{parentName:"td",href:"https://www.pepstock.org/Charba/4.0/org/pepstock/charba/client/callbacks/PaddingCallback.html"},"PaddingCallback"),"<","ScaleContext",">"),Object(l.b)("td",{parentName:"tr",align:"left"},Object(l.b)("a",{parentName:"td",href:"https://www.pepstock.org/Charba/4.0/org/pepstock/charba/client/items/PaddingItem.html"},"PaddingItem"))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:"left"},"color"),Object(l.b)("td",{parentName:"tr",align:"left"},Object(l.b)("a",{parentName:"td",href:"https://www.pepstock.org/Charba/4.0/org/pepstock/charba/client/callbacks/ColorCallback.html"},"ColorCallback"),"<","ScaleContext",">"),Object(l.b)("td",{parentName:"tr",align:"left"},"String - ",Object(l.b)("a",{parentName:"td",href:"https://www.pepstock.org/Charba/4.0/org/pepstock/charba/client/colors/IsColor.html"},"IsColor"))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:"left"},"font"),Object(l.b)("td",{parentName:"tr",align:"left"},Object(l.b)("a",{parentName:"td",href:"https://www.pepstock.org/Charba/4.0/org/pepstock/charba/client/callbacks/FontCallback.html"},"FontCallback"),"<","ScaleContext",">"),Object(l.b)("td",{parentName:"tr",align:"left"},Object(l.b)("a",{parentName:"td",href:"https://www.pepstock.org/Charba/4.0/org/pepstock/charba/client/items/FontItem.html"},"FontItem"))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:"left"},"showLabelBackdrop"),Object(l.b)("td",{parentName:"tr",align:"left"},Object(l.b)("a",{parentName:"td",href:"https://www.pepstock.org/Charba/4.0/org/pepstock/charba/client/callbacks/ShowLabelBackdropCallback.html"},"ShowLabelBackdropCallback")),Object(l.b)("td",{parentName:"tr",align:"left"},"boolean")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:"left"},"textStrokeColor"),Object(l.b)("td",{parentName:"tr",align:"left"},Object(l.b)("a",{parentName:"td",href:"https://www.pepstock.org/Charba/4.0/org/pepstock/charba/client/callbacks/ColorCallback.html"},"ColorCallback"),"<","ScaleContext",">"),Object(l.b)("td",{parentName:"tr",align:"left"},"String - ",Object(l.b)("a",{parentName:"td",href:"https://www.pepstock.org/Charba/4.0/org/pepstock/charba/client/colors/IsColor.html"},"IsColor"))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:"left"},"textStrokeWidth"),Object(l.b)("td",{parentName:"tr",align:"left"},Object(l.b)("a",{parentName:"td",href:"https://www.pepstock.org/Charba/4.0/org/pepstock/charba/client/callbacks/WidthCallback.html"},"WidthCallback"),"<","ScaleContext",">"),Object(l.b)("td",{parentName:"tr",align:"left"},"int")))),Object(l.b)("h3",{id:"callback"},"Callback"),Object(l.b)("p",null,"It is also common to want to change the tick marks to include information about the data type. "),Object(l.b)("p",null,"To apply a custom callback, you can set a ",Object(l.b)("a",{parentName:"p",href:"https://www.pepstock.org/Charba/4.0/org/pepstock/charba/client/callbacks/CategoryTickCallback.html"},"CategoryTickCallback")," instance to the axis options, as following:"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-java"},"axis.getTicks().setCallback(new CategoryTickCallback(){\n\n   /**\n    * Changes the tick marks to include information about the data type.\n    * \n    * @param axis axis instance where this callback as been defined\n    * @param value value of tick\n    * @param index index of tick\n    * @param values list of all tick values\n    * @return the tick to apply or if the callback returns null the associated grid line will be hidden.\n    */\n   public String onCallback(Axis axis, String value, int index, List<String> values){\n      // add a label\n      return value + myLabel;\n   }\n         \n});\n")))}p.isMDXComponent=!0}}]);
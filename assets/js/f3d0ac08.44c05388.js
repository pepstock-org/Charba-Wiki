(window.webpackJsonp=window.webpackJsonp||[]).push([[131],{203:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return c})),a.d(t,"metadata",(function(){return l})),a.d(t,"toc",(function(){return b})),a.d(t,"default",(function(){return o}));var n=a(3),i=a(8),r=(a(0),a(213)),c={id:"Axes",title:"Introduction",hide_title:!0,sidebar_label:"Introduction"},l={unversionedId:"axes/Axes",id:"axes/Axes",isDocsHomePage:!1,title:"Introduction",description:"Axes",source:"@site/docs/axes/Axes.md",sourceDirName:"axes",slug:"/axes/Axes",permalink:"/Charba-Wiki/docs/axes/Axes",version:"current",sidebar_label:"Introduction",frontMatter:{id:"Axes",title:"Introduction",hide_title:!0,sidebar_label:"Introduction"},sidebar:"docs",previous:{title:"Api",permalink:"/Charba-Wiki/docs/charts/Api"},next:{title:"Cartesian axes",permalink:"/Charba-Wiki/docs/axes/CartesianAxes"}},b=[{value:"Axes",id:"axes",children:[]},{value:"Attributes",id:"attributes",children:[]},{value:"Axis ID",id:"axis-id",children:[]},{value:"Callbacks",id:"callbacks",children:[]},{value:"Ticks",id:"ticks",children:[{value:"Scriptable",id:"scriptable",children:[]},{value:"Major Tick",id:"major-tick",children:[]}]}],s={toc:b};function o(e){var t=e.components,a=Object(i.a)(e,["components"]);return Object(r.b)("wrapper",Object(n.a)({},s,a,{components:t,mdxType:"MDXLayout"}),Object(r.b)("h2",{id:"axes"},"Axes"),Object(r.b)("p",null,"Axes are an integral parts of a chart. They are used to determine how data maps to a pixel value on the chart. In a cartesian chart, there is 1 or more X axis and 1 or more Y axis to map points onto the 2 dimensional chart. These axes are know as ",Object(r.b)("a",{parentName:"p",href:"CartesianAxes"},"'cartesian axes'"),"."),Object(r.b)("p",null,"In a radial chart, such as a radar chart or a polar area chart, there is a single axis that maps points in the angular and radial directions. These are known as ",Object(r.b)("a",{parentName:"p",href:"RadialAxes"},"'radial axes'"),"."),Object(r.b)("p",null,"There are a number of options to allow styling an axis. There are settings to control ",Object(r.b)("a",{parentName:"p",href:"Grid"},"grid")," and ",Object(r.b)("a",{parentName:"p",href:"#ticks"},"ticks"),"."),Object(r.b)("h2",{id:"attributes"},"Attributes"),Object(r.b)("p",null,"Each axis has got a set of common attributes, mandatory options of all axes."),Object(r.b)("p",null,"At the creation time, an axis needs to have the following 3 attributes:"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",{parentName:"tr",align:"left"},"Name"),Object(r.b)("th",{parentName:"tr",align:"left"},"Type"),Object(r.b)("th",{parentName:"tr",align:"left"},"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:"left"},"id"),Object(r.b)("td",{parentName:"tr",align:"left"},Object(r.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/options/IsScaleId.html"},"IsScaleId")),Object(r.b)("td",{parentName:"tr",align:"left"},"The unique id of axis.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:"left"},"type"),Object(r.b)("td",{parentName:"tr",align:"left"},Object(r.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/enums/AxisType.html"},"AxisType")),Object(r.b)("td",{parentName:"tr",align:"left"},"The type of scale being employed.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:"left"},"axis"),Object(r.b)("td",{parentName:"tr",align:"left"},Object(r.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/enums/AxisKind.html"},"AxisKind")),Object(r.b)("td",{parentName:"tr",align:"left"},"The axis kind to define which directions are used in axis.")))),Object(r.b)("p",null,"Here is an example how to create an axis:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-java"},'// creates the id "y-my" for the axis\nIsScaleId scaleId = IsScaleId.create("y-my");\n// creates the by chart instance, my scale id and specifying that is a scale for Y \nCartesianLinearAxis linearAxis = new CartesianLinearAxis(chart, scaleId, AxisKind.Y);\n')),Object(r.b)("h2",{id:"axis-id"},"Axis ID"),Object(r.b)("p",null,"All axes must have a unique id  which must be passed when the axis is creating. When the id is not passed, the axis will use a ",Object(r.b)("a",{parentName:"p",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/enums/DefaultScaleId.html"},"default id")," based on type and kind of axis. "),Object(r.b)("p",null,"If you are creating a axis by a custom id and ",Object(r.b)("a",{parentName:"p",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/enums/AxisKind.html"},"AxisKind")," is not provided, the kind of axis is automatically set checking the first character of axis id:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"if axis id is starting with ",Object(r.b)("inlineCode",{parentName:"li"},"x"),", then the kind of axis is ",Object(r.b)("a",{parentName:"li",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/enums/AxisKind.html#X"},"'X'"),"."),Object(r.b)("li",{parentName:"ul"},"if axis id is starting with ",Object(r.b)("inlineCode",{parentName:"li"},"y"),", then the kind of axis is ",Object(r.b)("a",{parentName:"li",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/enums/AxisKind.html#Y"},"'Y'"),".")),Object(r.b)("p",null,"Every axis has got own default axis id and kind, as following:"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",{parentName:"tr",align:"left"},"Type"),Object(r.b)("th",{parentName:"tr",align:"left"},"Default Id"),Object(r.b)("th",{parentName:"tr",align:"left"},"Default Orientation"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:"left"},"linear"),Object(r.b)("td",{parentName:"tr",align:"left"},"DefaultScaleId.Y"),Object(r.b)("td",{parentName:"tr",align:"left"},"AxisKind.Y")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:"left"},"logarithmic"),Object(r.b)("td",{parentName:"tr",align:"left"},"DefaultScaleId.Y"),Object(r.b)("td",{parentName:"tr",align:"left"},"AxisKind.Y")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:"left"},"category"),Object(r.b)("td",{parentName:"tr",align:"left"},"DefaultScaleId.X"),Object(r.b)("td",{parentName:"tr",align:"left"},"AxisKind.X")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:"left"},"time"),Object(r.b)("td",{parentName:"tr",align:"left"},"DefaultScaleId.X"),Object(r.b)("td",{parentName:"tr",align:"left"},"AxisKind.X")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:"left"},"timeseries"),Object(r.b)("td",{parentName:"tr",align:"left"},"DefaultScaleId.X"),Object(r.b)("td",{parentName:"tr",align:"left"},"AxisKind.X")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:"left"},"radialLinear"),Object(r.b)("td",{parentName:"tr",align:"left"},"DefaultScaleId.R"),Object(r.b)("td",{parentName:"tr",align:"left"},"AxisKind.R")))),Object(r.b)("h2",{id:"callbacks"},"Callbacks"),Object(r.b)("p",null,"There are a number of configuration callbacks that can be used to change parameters in the scale at different points in the update process."),Object(r.b)("p",null,"All callbacks interfaces have got 2 arguments:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",{parentName:"li",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/configuration/Axis.html"},"Axis")," instance"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",{parentName:"li",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/items/AxisItem.html"},"Axis item")," object with all details about axis.")),Object(r.b)("p",null,"To add a callback, see the following example:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-java"},"axis.setAxisUpdateCallback(new AxisUpdateCallback(){\n\n   // methods implementation\n\n});\n")),Object(r.b)("h4",{id:"buildticks-callback"},"BuildTicks callback"),Object(r.b)("p",null,"This callback can be used to change parameters in the scale during ticks building. Each axis can manage different type of ticks (strings, numbers, dates) and the description how to use the build ticks callback is described in the page of axes:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",{parentName:"li",href:"CartesianCategoryAxes#buildticks-callback"},"Category cartesian axes")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",{parentName:"li",href:"CartesianLinearAxes#buildticks-callback"},"Linear cartesian axes")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",{parentName:"li",href:"CartesianLogarithmicAxes#buildticks-callback"},"Logarithmic cartesian axes")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",{parentName:"li",href:"CartesianTimeAxes#buildticks-callback"},"Time cartesian axes")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",{parentName:"li",href:"RadialAxes#buildticks-callback"},"Linear radial axes"))),Object(r.b)("h4",{id:"calculate-tick-rotation-callback"},"Calculate tick rotation callback"),Object(r.b)("p",null,"This callback can be used to change parameters in the scale during tick rotation. To implement this callback, you must implement ",Object(r.b)("a",{parentName:"p",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/callbacks/AxisCalculateTickRotationCallback.html"},"this interface"),". "),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-java"},"public interface AxisCalculateTickRotationCallback {\n\n   /**\n    * Callback that runs before tick rotation is determined.\n    * \n    * @param axis axis instance where this callback as been defined\n    * @param item axis item instance\n    */\n   void onBeforeCalculateTickRotation(Axis axis, AxisItem item);\n\n   /**\n    * Callback that runs after tick rotation is determined.\n    * \n    * @param axis axis instance where this callback as been defined\n    * @param item axis item instance\n    */\n   void onAfterCalculateTickRotation(Axis axis, AxisItem item);\n\n}\n")),Object(r.b)("h4",{id:"data-limit-callback"},"Data limit callback"),Object(r.b)("p",null,"This callback can be used to change parameters in the scale during data limits determination. To implement this callback, you must implement ",Object(r.b)("a",{parentName:"p",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/callbacks/AxisDataLimitsCallback.html"},"this interface"),". "),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-java"},"public interface AxisDataLimitsCallback {\n\n   /**\n    * Callback that runs before data limits are determined.\n    * \n    * @param axis axis instance where this callback as been defined\n    * @param item axis item instance\n    */\n   void onBeforeDataLimits(Axis axis, AxisItem item);\n\n   /**\n    * Callback that runs after data limits are determined.\n    * \n    * @param axis axis instance where this callback as been defined\n    * @param item axis item instance\n    */\n   void onAfterDataLimits(Axis axis, AxisItem item);\n}\n")),Object(r.b)("h4",{id:"dimensions-callback"},"Dimensions callback"),Object(r.b)("p",null,"This callback can be used to change parameters in the scale during setting dimensions. To implement this callback, you must implement ",Object(r.b)("a",{parentName:"p",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/callbacks/AxisDimensionsCallback.html"},"this interface"),". "),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-java"},"public interface AxisDimensionsCallback {\n\n   /**\n    * Callback that runs before dimensions are set.\n    * \n    * @param axis axis instance where this callback as been defined\n    * @param item axis item instance\n    */\n   void onBeforeSetDimensions(Axis axis, AxisItem item);\n\n   /**\n    * Callback that runs after dimensions are set.\n    * \n    * @param axis axis instance where this callback as been defined\n    * @param item axis item instance\n    */\n   void onAfterSetDimensions(Axis axis, AxisItem item);\n\n}\n")),Object(r.b)("h4",{id:"fit-callback"},"Fit callback"),Object(r.b)("p",null,"This callback can be used to change parameters in the scale during fitting phase. To implement this callback, you must implement ",Object(r.b)("a",{parentName:"p",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/callbacks/AxisFitCallback.html"},"this interface"),". "),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-java"},"public interface AxisFitCallback {\n\n   /**\n    * Callback that runs before the scale fits to the canvas.\n    * \n    * @param axis axis instance where this callback as been defined\n    * @param item axis item instance\n    */\n   void onBeforeFit(Axis axis, AxisItem item);\n\n   /**\n    * Callback that runs after the scale fits to the canvas.\n    * \n    * @param axis axis instance where this callback as been defined\n    * @param item axis item instance\n    */\n   void onAfterFit(Axis axis, AxisItem item);\n\n}\n")),Object(r.b)("h4",{id:"tick-to-label-conversion-callback"},"Tick to label conversion callback"),Object(r.b)("p",null,"This callback can be used to change parameters in the scale during ticks label conversion. To implement this callback, you must implement ",Object(r.b)("a",{parentName:"p",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/callbacks/AxisTickToLabelConversionCallback.html"},"this interface"),". "),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-java"},"public interface AxisTickToLabelConversionCallback {\n\n   /**\n    * Callback that runs before ticks are converted in strings.\n    * \n    * @param axis axis instance where this callback as been defined\n    * @param item axis item instance\n    */\n   void onBeforeTickToLabelConversion(Axis axis, AxisItem item);\n\n   /**\n    * Callback that runs after ticks are converted in strings.\n    * \n    * @param axis axis instance where this callback as been defined\n    * @param item axis item instance\n    */\n   void onAfterTickToLabelConversion(Axis axis, AxisItem item);\n\n}\n")),Object(r.b)("h4",{id:"update-callback"},"Update callback"),Object(r.b)("p",null,"This callback can be used to change parameters in the scale during updating. To implement this callback, you must implement ",Object(r.b)("a",{parentName:"p",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/callbacks/AxisUpdateCallback.html"},"this interface"),". "),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-java"},"public interface AxisUpdateCallback {\n\n   /**\n    * Callback called before the update process starts.\n    * \n    * @param axis axis instance where this callback as been defined\n    * @param item axis item instance\n    */\n   void onBeforeUpdate(Axis axis, AxisItem item);\n\n   /**\n    * Callback that runs at the end of the update process.\n    * \n    * @param axis axis instance where this callback as been defined\n    * @param item axis item instance\n    */\n   void onAfterUpdate(Axis axis, AxisItem item);\n\n}\n")),Object(r.b)("h2",{id:"ticks"},"Ticks"),Object(r.b)("p",null,"All ticks generated by axes can be configured. All axes are providing the capability to set and get the options, by the ",Object(r.b)("strong",{parentName:"p"},"set")," and ",Object(r.b)("strong",{parentName:"p"},"get")," methods, as following:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-java"},'// creates the axis for chart with default id and kind to "y"\nCartesianLinearAxis axis = new CartesianLinearAxis(chart);\n// sets display to the ticks\naxis.getTicks().setDisplay(true);\n\nboolean display = axis.getTicks().isDisplay();\n')),Object(r.b)("p",null,"Table with options:"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",{parentName:"tr",align:"left"},"Name"),Object(r.b)("th",{parentName:"tr",align:"left"},"Type"),Object(r.b)("th",{parentName:"tr",align:"left"},"Scriptable"),Object(r.b)("th",{parentName:"tr",align:"left"},"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:"left"},"color"),Object(r.b)("td",{parentName:"tr",align:"left"},"String - ",Object(r.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/colors/IsColor.html"},"IsColor")),Object(r.b)("td",{parentName:"tr",align:"left"},Object(r.b)("a",{parentName:"td",href:"#scriptable"},"Yes")),Object(r.b)("td",{parentName:"tr",align:"left"},"Color of ticks.",Object(r.b)("br",null),"See ",Object(r.b)("a",{parentName:"td",href:"../defaults/DefaultsCharts#commons-charts-options"},"default colors"),".")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:"left"},"display"),Object(r.b)("td",{parentName:"tr",align:"left"},"boolean"),Object(r.b)("td",{parentName:"tr",align:"left"},"-"),Object(r.b)("td",{parentName:"tr",align:"left"},"If ",Object(r.b)("inlineCode",{parentName:"td"},"true"),", the tick marks are shown.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:"left"},"font"),Object(r.b)("td",{parentName:"tr",align:"left"},Object(r.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/options/Font.html"},"Font")),Object(r.b)("td",{parentName:"tr",align:"left"},Object(r.b)("a",{parentName:"td",href:"#scriptable"},"Yes")),Object(r.b)("td",{parentName:"tr",align:"left"},"Font of ticks.",Object(r.b)("br",null),"See ",Object(r.b)("a",{parentName:"td",href:"../defaults/DefaultsCharts#font"},"Font"),".")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:"left"},"padding"),Object(r.b)("td",{parentName:"tr",align:"left"},"int"),Object(r.b)("td",{parentName:"tr",align:"left"},"-"),Object(r.b)("td",{parentName:"tr",align:"left"},"The padding between the tick label and the axis.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:"left"},"textStrokeColor"),Object(r.b)("td",{parentName:"tr",align:"left"},"String - ",Object(r.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/colors/IsColor.html"},"IsColor")),Object(r.b)("td",{parentName:"tr",align:"left"},Object(r.b)("a",{parentName:"td",href:"#scriptable"},"Yes")),Object(r.b)("td",{parentName:"tr",align:"left"},"The color of the stroke around the text.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:"left"},"textStrokeWidth"),Object(r.b)("td",{parentName:"tr",align:"left"},"int"),Object(r.b)("td",{parentName:"tr",align:"left"},Object(r.b)("a",{parentName:"td",href:"#scriptable"},"Yes")),Object(r.b)("td",{parentName:"tr",align:"left"},"Stroke width around the text.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:"left"},"z"),Object(r.b)("td",{parentName:"tr",align:"left"},"int"),Object(r.b)("td",{parentName:"tr",align:"left"},"-"),Object(r.b)("td",{parentName:"tr",align:"left"},"The z-index of tick layer. Useful when ticks are drawn on chart area. Values less than or equals to 0 are drawn under data sets, greater than 0 on top.")))),Object(r.b)("h3",{id:"scriptable"},"Scriptable"),Object(r.b)("p",null,"Scriptable options at grid level accept a callback which is called for each of the underlying data values. See more details in ",Object(r.b)("a",{parentName:"p",href:"../configuration/ScriptableOptions"},"Configuring charts")," section. "),Object(r.b)("p",null,"All scriptable options callbacks will get a ",Object(r.b)("a",{parentName:"p",href:"../configuration/ScriptableOptions#scale-scriptable-options-context"},"ScaleContext")," instance."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-java"},"// creates the axis for chart\nCartesianLinearAxis axis = new CartesianLinearAxis(chart);\n// sets the option by a callback \naxis.getTicks().setColor(new ColorCallback<ScaleContext>(){\n\n   @Override\n   public IsColor invoke(ScaleContext context){\n      // logic\n      return color;\n   }\n});\n")),Object(r.b)("p",null,"The following options can be set by a callback:"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",{parentName:"tr",align:"left"},"Name"),Object(r.b)("th",{parentName:"tr",align:"left"},"Callback"),Object(r.b)("th",{parentName:"tr",align:"left"},"Returned types"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:"left"},"color"),Object(r.b)("td",{parentName:"tr",align:"left"},Object(r.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/callbacks/ColorCallback.html"},"ColorCallback"),"<","ScaleContext",">"),Object(r.b)("td",{parentName:"tr",align:"left"},"String - ",Object(r.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/colors/IsColor.html"},"IsColor"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:"left"},"font"),Object(r.b)("td",{parentName:"tr",align:"left"},Object(r.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/callbacks/FontCallback.html"},"FontCallback"),"<","ScaleContext",">"),Object(r.b)("td",{parentName:"tr",align:"left"},Object(r.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/items/FontItem.html"},"FontItem"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:"left"},"textStrokeColor"),Object(r.b)("td",{parentName:"tr",align:"left"},Object(r.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/callbacks/ColorCallback.html"},"ColorCallback"),"<","ScaleContext",">"),Object(r.b)("td",{parentName:"tr",align:"left"},"String - ",Object(r.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/colors/IsColor.html"},"IsColor"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:"left"},"textStrokeWidth"),Object(r.b)("td",{parentName:"tr",align:"left"},Object(r.b)("a",{parentName:"td",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/callbacks/WidthCallback.html"},"WidthCallback"),"<","ScaleContext",">"),Object(r.b)("td",{parentName:"tr",align:"left"},"int")))),Object(r.b)("h3",{id:"major-tick"},"Major Tick"),Object(r.b)("p",null,"The major tick configuration enables for the major tick marks that are generated by the axis. A major tick will affect auto-skipping and major will be defined on ticks in the scriptable options context, by ",Object(r.b)("a",{parentName:"p",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/items/ScaleTickItem.html"},"ScaleTickItem")," class and ",Object(r.b)("a",{parentName:"p",href:"https://pepstock-org.github.io/Charba/4.0/org/pepstock/charba/client/items/ScaleTickItem.html#isMajor--"},"isMajor")," method."),Object(r.b)("p",null,"The major ticks configuration is nested in the ticks configuration as following: "),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-java"},'// creates the axis for chart with default id and kind to "y"\nCartesianLinearAxis axis = new CartesianLinearAxis(chart);\n// enables major tick\naxis.getTicks().getMajor().setEnabled(true);\n\nboolean enabled = axis.getTicks().getMajor().isEnabled();\n')),Object(r.b)("p",null,"The following are the attributes that you can set:"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",{parentName:"tr",align:"left"},"Name"),Object(r.b)("th",{parentName:"tr",align:"left"},"Type"),Object(r.b)("th",{parentName:"tr",align:"left"},"Description"),Object(r.b)("th",{parentName:"tr",align:"left"}))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:"left"},"enabled"),Object(r.b)("td",{parentName:"tr",align:"left"},"boolean"),Object(r.b)("td",{parentName:"tr",align:"left"},"If ",Object(r.b)("inlineCode",{parentName:"td"},"true"),", major ticks marks are generated."),Object(r.b)("td",{parentName:"tr",align:"left"})))))}o.isMDXComponent=!0},213:function(e,t,a){"use strict";a.d(t,"a",(function(){return p})),a.d(t,"b",(function(){return h}));var n=a(0),i=a.n(n);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function c(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?c(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):c(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function b(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var s=i.a.createContext({}),o=function(e){var t=i.a.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},p=function(e){var t=o(e.components);return i.a.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},d=i.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,r=e.originalType,c=e.parentName,s=b(e,["components","mdxType","originalType","parentName"]),p=o(a),d=n,h=p["".concat(c,".").concat(d)]||p[d]||m[d]||r;return a?i.a.createElement(h,l(l({ref:t},s),{},{components:a})):i.a.createElement(h,l({ref:t},s))}));function h(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var r=a.length,c=new Array(r);c[0]=d;var l={};for(var b in t)hasOwnProperty.call(t,b)&&(l[b]=t[b]);l.originalType=e,l.mdxType="string"==typeof e?e:n,c[1]=l;for(var s=2;s<r;s++)c[s]=a[s];return i.a.createElement.apply(null,c)}return i.a.createElement.apply(null,a)}d.displayName="MDXCreateElement"}}]);